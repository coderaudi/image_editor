{"ast":null,"code":"var _jsxFileName = \"C:\\\\audi_\\\\ESPL_projects\\\\facebook\\\\src\\\\components\\\\watermarks\\\\resize-drag.js\";\nimport React, { Component } from 'react';\nimport demoImg from \"../../assets/ntr5.jpg\";\nimport waterMark from \"../../assets/logo1.jpg\";\nimport \"./index.css\";\n\nconst interact = require('interactjs');\n\nclass ResizeDrag extends Component {\n  componentDidMount() {\n    interact(\".resizable\").resizable({\n      edges: {\n        left: false,\n        right: true,\n        bottom: true,\n        top: false\n      },\n      // modifiers: [\n      //   interact.modifiers.restrictEdges({\n      //     outer: \"parent\",\n      //     endOnly: true\n      //   })\n      // ],\n      inertia: true\n    }).on(\"resizemove\", function (event) {\n      var target = event.target;\n      console.log(target);\n      target.style.width = event.rect.width + \"px\";\n      target.style.height = event.rect.height + \"px\";\n    }); // drag \n\n    let element = document.getElementById('grid-snap');\n    let x = 0;\n    let y = 0;\n    interact(element).draggable({\n      modifiers: [interact.modifiers.snap({\n        targets: [interact.createSnapGrid({\n          x: 30,\n          y: 30\n        })],\n        range: Infinity,\n        relativePoints: [{\n          x: 0,\n          y: 0\n        }]\n      }), interact.modifiers.restrict({\n        restriction: element.parentNode,\n        elementRect: {\n          top: 0,\n          left: 0,\n          bottom: 1,\n          right: 1\n        },\n        endOnly: true\n      })],\n      inertia: true\n    }).on('dragmove', function (event) {\n      x += event.dx;\n      y += event.dy;\n      console.log(`x:=${x} y:=${y}`);\n      event.target.style.webkitTransform = event.target.style.transform = 'translate(' + x + 'px, ' + y + 'px)';\n    }); // resizeing - drag \n\n    interact('.resize-drag').resizable({\n      // resize from all edges and corners\n      edges: {\n        left: true,\n        right: true,\n        bottom: true,\n        top: true\n      },\n      modifiers: [// keep the edges inside the parent\n      interact.modifiers.restrictEdges({\n        outer: 'parent'\n      }), // minimum size\n      interact.modifiers.restrictSize({\n        min: {\n          width: 100,\n          height: 50\n        }\n      })],\n      inertia: true\n    }).draggable({\n      onmove: window.dragMoveListener,\n      inertia: true,\n      modifiers: [interact.modifiers.restrictRect({\n        restriction: 'parent',\n        endOnly: true\n      })]\n    }).on('resizemove', function (event) {\n      var target = event.target;\n      var x = parseFloat(target.getAttribute('data-x')) || 0;\n      var y = parseFloat(target.getAttribute('data-y')) || 0; // update the element's style\n\n      target.style.width = event.rect.width + 'px';\n      target.style.height = event.rect.height + 'px'; // translate when resizing from top or left edges\n\n      x += event.deltaRect.left;\n      y += event.deltaRect.top;\n      target.style.webkitTransform = target.style.transform = 'translate(' + x + 'px,' + y + 'px)';\n      target.setAttribute('data-x', x);\n      target.setAttribute('data-y', y);\n      target.textContent = Math.round(event.rect.width) + '\\u00D7' + Math.round(event.rect.height);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Img resizable \"), React.createElement(\"div\", {\n      className: \"draggable\",\n      id: \"grid-snap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: demoImg,\n      className: \"resizable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ResizeDrag;","map":{"version":3,"sources":["C:/audi_/ESPL_projects/facebook/src/components/watermarks/resize-drag.js"],"names":["React","Component","demoImg","waterMark","interact","require","ResizeDrag","componentDidMount","resizable","edges","left","right","bottom","top","inertia","on","event","target","console","log","style","width","rect","height","element","document","getElementById","x","y","draggable","modifiers","snap","targets","createSnapGrid","range","Infinity","relativePoints","restrict","restriction","parentNode","elementRect","endOnly","dx","dy","webkitTransform","transform","restrictEdges","outer","restrictSize","min","onmove","window","dragMoveListener","restrictRect","parseFloat","getAttribute","deltaRect","setAttribute","textContent","Math","round","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport demoImg from \"../../assets/ntr5.jpg\";\r\nimport waterMark from \"../../assets/logo1.jpg\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst interact = require('interactjs')\r\n\r\nclass ResizeDrag extends Component {\r\n\r\n    componentDidMount(){\r\n        interact(\".resizable\")\r\n        .resizable({\r\n                edges: { left: false, right: true, bottom: true, top: false },\r\n                // modifiers: [\r\n                //   interact.modifiers.restrictEdges({\r\n                //     outer: \"parent\",\r\n                //     endOnly: true\r\n                //   })\r\n                // ],\r\n                inertia: true\r\n            })\r\n            .on(\"resizemove\", function(event) {\r\n                var target = event.target\r\n                console.log(target);\r\n                target.style.width = event.rect.width + \"px\"\r\n                target.style.height = event.rect.height + \"px\"\r\n            })\r\n\r\n\r\n            // drag \r\n\r\n            let element = document.getElementById('grid-snap')\r\n            let x = 0; let y = 0\r\n\r\n            interact(element)\r\n                .draggable({\r\n                    modifiers: [\r\n                    interact.modifiers.snap({\r\n                        targets: [\r\n                        interact.createSnapGrid({ x: 30, y: 30 })\r\n                        ],\r\n                        range: Infinity,\r\n                        relativePoints: [ { x: 0, y: 0 } ]\r\n                    }),\r\n                    interact.modifiers.restrict({\r\n                        restriction: element.parentNode,\r\n                        elementRect: { top: 0, left: 0, bottom: 1, right: 1 },\r\n                        endOnly: true\r\n                    })\r\n                    ],\r\n                    inertia: true\r\n                })\r\n                .on('dragmove', function (event) {\r\n                    x += event.dx\r\n                    y += event.dy\r\n\r\n\r\n                    console.log(`x:=${x} y:=${y}`);\r\n\r\n                    event.target.style.webkitTransform =\r\n                    event.target.style.transform =\r\n                        'translate(' + x + 'px, ' + y + 'px)'\r\n                })\r\n\r\n\r\n                // resizeing - drag \r\n\r\n  interact('.resize-drag')\r\n  .resizable({\r\n    // resize from all edges and corners\r\n    edges: { left: true, right: true, bottom: true, top: true },\r\n\r\n    modifiers: [\r\n      // keep the edges inside the parent\r\n      interact.modifiers.restrictEdges({\r\n        outer: 'parent'\r\n      }),\r\n\r\n      // minimum size\r\n      interact.modifiers.restrictSize({\r\n        min: { width: 100, height: 50 }\r\n      })\r\n    ],\r\n\r\n    inertia: true\r\n  })\r\n  .draggable({\r\n    onmove: window.dragMoveListener,\r\n    inertia: true,\r\n    modifiers: [\r\n      interact.modifiers.restrictRect({\r\n        restriction: 'parent',\r\n        endOnly: true\r\n      })\r\n    ]\r\n  })\r\n  .on('resizemove', function (event) {\r\n    var target = event.target\r\n    var x = (parseFloat(target.getAttribute('data-x')) || 0)\r\n    var y = (parseFloat(target.getAttribute('data-y')) || 0)\r\n\r\n    // update the element's style\r\n    target.style.width = event.rect.width + 'px'\r\n    target.style.height = event.rect.height + 'px'\r\n\r\n    // translate when resizing from top or left edges\r\n    x += event.deltaRect.left\r\n    y += event.deltaRect.top\r\n\r\n    target.style.webkitTransform = target.style.transform =\r\n        'translate(' + x + 'px,' + y + 'px)'\r\n\r\n    target.setAttribute('data-x', x)\r\n    target.setAttribute('data-y', y)\r\n    target.textContent = Math.round(event.rect.width) + '\\u00D7' + Math.round(event.rect.height)\r\n  })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  \r\n      \r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Img resizable </h2>\r\n        \r\n\r\n                    <div className=\"draggable\" id=\"grid-snap\">\r\n                       <img src={demoImg}  className=\"resizable\" />\r\n                    </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResizeDrag;"]},"metadata":{},"sourceType":"module"}