{"ast":null,"code":"var _jsxFileName = \"C:\\\\audi_\\\\ESPL_projects\\\\facebook\\\\src\\\\components\\\\watermarks\\\\resize-drag.js\";\nimport React, { Component } from 'react';\nimport demoImg from \"../../assets/ntr5.jpg\";\nimport waterMark from \"../../assets/logo1.jpg\";\nimport \"./index.css\";\n\nconst interact = require('interactjs');\n\nclass ResizeDrag extends Component {\n  componentDidMount() {\n    // target elements with the \"draggable\" class\n    interact('.draggable').draggable({\n      // enable inertial throwing\n      inertia: true,\n      // keep the element within the area of it's parent\n      modifiers: [interact.modifiers.restrictRect({\n        restriction: 'parent',\n        endOnly: false\n      })],\n      // enable autoScroll\n      autoScroll: true,\n      // call this function on every dragmove event\n      onmove: dragMoveListener,\n      // call this function on every dragend event\n      onend: function (event) {\n        var textEl = event.target.querySelector('p');\n        textEl && (textEl.textContent = 'moved a distance of ' + Math.sqrt(Math.pow(event.pageX - event.x0, 2) + Math.pow(event.pageY - event.y0, 2) | 0).toFixed(2) + 'px');\n      }\n    });\n\n    function dragMoveListener(event) {\n      var target = event.target; // keep the dragged position in the data-x/data-y attributes\n\n      var x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx;\n      var y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy; // translate the element\n\n      target.style.webkitTransform = target.style.transform = 'translate(' + x + 'px, ' + y + 'px)'; // update the posiion attributes\n\n      target.setAttribute('data-x', x);\n      target.setAttribute('data-y', y);\n    } // this is used later in the resizing and gesture demos\n\n\n    window.dragMoveListener = dragMoveListener;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Img resizable \"), React.createElement(\"div\", {\n      className: \"par\",\n      style: {\n        width: \"500px\",\n        height: \" 200px\",\n        background: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      class: \"draggable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \" Draggable Element \")));\n  }\n\n}\n\nexport default ResizeDrag;","map":{"version":3,"sources":["C:/audi_/ESPL_projects/facebook/src/components/watermarks/resize-drag.js"],"names":["React","Component","demoImg","waterMark","interact","require","ResizeDrag","componentDidMount","draggable","inertia","modifiers","restrictRect","restriction","endOnly","autoScroll","onmove","dragMoveListener","onend","event","textEl","target","querySelector","textContent","Math","sqrt","pow","pageX","x0","pageY","y0","toFixed","x","parseFloat","getAttribute","dx","y","dy","style","webkitTransform","transform","setAttribute","window","render","width","height","background"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,OAAO,aAAP;;AAEA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAxB;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAE/BM,EAAAA,iBAAiB,GAAG;AAChB;AACAH,IAAAA,QAAQ,CAAC,YAAD,CAAR,CACKI,SADL,CACe;AACP;AACAC,MAAAA,OAAO,EAAE,IAFF;AAGP;AACAC,MAAAA,SAAS,EAAE,CACPN,QAAQ,CAACM,SAAT,CAAmBC,YAAnB,CAAgC;AAC5BC,QAAAA,WAAW,EAAE,QADe;AAE5BC,QAAAA,OAAO,EAAE;AAFmB,OAAhC,CADO,CAJJ;AAUP;AACAC,MAAAA,UAAU,EAAE,IAXL;AAaP;AACAC,MAAAA,MAAM,EAAEC,gBAdD;AAeP;AACAC,MAAAA,KAAK,EAAE,UAAUC,KAAV,EAAiB;AACpB,YAAIC,MAAM,GAAGD,KAAK,CAACE,MAAN,CAAaC,aAAb,CAA2B,GAA3B,CAAb;AAEAF,QAAAA,MAAM,KAAKA,MAAM,CAACG,WAAP,GACP,yBACCC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,GAAL,CAASP,KAAK,CAACQ,KAAN,GAAcR,KAAK,CAACS,EAA7B,EAAiC,CAAjC,IACPJ,IAAI,CAACE,GAAL,CAASP,KAAK,CAACU,KAAN,GAAcV,KAAK,CAACW,EAA7B,EAAiC,CAAjC,CADO,GAC+B,CADzC,CAAD,CAEKC,OAFL,CAEa,CAFb,CADA,GAGkB,IAJhB,CAAN;AAKH;AAxBM,KADf;;AA4BA,aAASd,gBAAT,CAA0BE,KAA1B,EAAiC;AAC7B,UAAIE,MAAM,GAAGF,KAAK,CAACE,MAAnB,CAD6B,CAE7B;;AACA,UAAIW,CAAC,GAAG,CAACC,UAAU,CAACZ,MAAM,CAACa,YAAP,CAAoB,QAApB,CAAD,CAAV,IAA6C,CAA9C,IAAmDf,KAAK,CAACgB,EAAjE;AACA,UAAIC,CAAC,GAAG,CAACH,UAAU,CAACZ,MAAM,CAACa,YAAP,CAAoB,QAApB,CAAD,CAAV,IAA6C,CAA9C,IAAmDf,KAAK,CAACkB,EAAjE,CAJ6B,CAM7B;;AACAhB,MAAAA,MAAM,CAACiB,KAAP,CAAaC,eAAb,GACIlB,MAAM,CAACiB,KAAP,CAAaE,SAAb,GACA,eAAeR,CAAf,GAAmB,MAAnB,GAA4BI,CAA5B,GAAgC,KAFpC,CAP6B,CAW7B;;AACAf,MAAAA,MAAM,CAACoB,YAAP,CAAoB,QAApB,EAA8BT,CAA9B;AACAX,MAAAA,MAAM,CAACoB,YAAP,CAAoB,QAApB,EAA8BL,CAA9B;AACH,KA5Ce,CA8ChB;;;AACAM,IAAAA,MAAM,CAACzB,gBAAP,GAA0BA,gBAA1B;AAGH;;AAUD0B,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAUZ;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAG,OAAV;AAAoBC,QAAAA,MAAM,EAAE,QAA5B;AAAuCC,QAAAA,UAAU,EAAG;AAApD,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEgB;AAAG,MAAA,KAAK,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFhB,CAVY,CADJ;AAgBH;;AA/E8B;;AAkFnC,eAAevC,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport demoImg from \"../../assets/ntr5.jpg\";\r\nimport waterMark from \"../../assets/logo1.jpg\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst interact = require('interactjs')\r\n\r\nclass ResizeDrag extends Component {\r\n\r\n    componentDidMount() {\r\n        // target elements with the \"draggable\" class\r\n        interact('.draggable')\r\n            .draggable({\r\n                // enable inertial throwing\r\n                inertia: true,\r\n                // keep the element within the area of it's parent\r\n                modifiers: [\r\n                    interact.modifiers.restrictRect({\r\n                        restriction: 'parent',\r\n                        endOnly: false\r\n                    })\r\n                ],\r\n                // enable autoScroll\r\n                autoScroll: true,\r\n\r\n                // call this function on every dragmove event\r\n                onmove: dragMoveListener,\r\n                // call this function on every dragend event\r\n                onend: function (event) {\r\n                    var textEl = event.target.querySelector('p')\r\n\r\n                    textEl && (textEl.textContent =\r\n                        'moved a distance of ' +\r\n                        (Math.sqrt(Math.pow(event.pageX - event.x0, 2) +\r\n                            Math.pow(event.pageY - event.y0, 2) | 0))\r\n                            .toFixed(2) + 'px')\r\n                }\r\n            })\r\n\r\n        function dragMoveListener(event) {\r\n            var target = event.target\r\n            // keep the dragged position in the data-x/data-y attributes\r\n            var x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx\r\n            var y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy\r\n\r\n            // translate the element\r\n            target.style.webkitTransform =\r\n                target.style.transform =\r\n                'translate(' + x + 'px, ' + y + 'px)'\r\n\r\n            // update the posiion attributes\r\n            target.setAttribute('data-x', x)\r\n            target.setAttribute('data-y', y)\r\n        }\r\n\r\n        // this is used later in the resizing and gesture demos\r\n        window.dragMoveListener = dragMoveListener\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Img resizable </h2>\r\n\r\n\r\n\r\n                {/* <div className=\"resizemove\" > \r\n                       <img src={demoImg} width=\"120px\" className=\"resize-drag\" /></div> */}\r\n\r\n\r\n\r\n<div className=\"par\" style={{ width : \"500px\" , height: \" 200px\" , background : \"red\"}}>\r\n\r\n                <p class=\"draggable\" > Draggable Element </p></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResizeDrag;"]},"metadata":{},"sourceType":"module"}