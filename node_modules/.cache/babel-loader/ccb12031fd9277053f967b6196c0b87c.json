{"ast":null,"code":"import React, { Component, cloneElement } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { findDOMNode } from \"react-dom\";\nimport interact from \"interact.js\";\nexport default class Interactable extends Component {\n  render() {\n    return cloneElement(this.props.children, {\n      ref: node => this.node = node,\n      draggable: false\n    });\n  }\n\n  componentDidMount() {\n    this.interact = interact(findDOMNode(this.node));\n    this.setInteractions();\n  }\n\n  componentWillReceiveProps() {\n    this.interact = interact(findDOMNode(this.node));\n    this.setInteractions();\n  }\n\n  setInteractions() {\n    if (this.props.draggable) this.interact.draggable(this.props.draggableOptions);\n    if (this.props.dropzone) this.interact.dropzone(this.props.dropzoneOptions);\n    if (this.props.resizable) this.interact.resizable(this.props.resizableOptions);\n  }\n\n}\nInteractable.defaultProps = {\n  draggable: false,\n  dropzone: false,\n  resizable: false,\n  draggableOptions: {},\n  dropzoneOptions: {},\n  resizableOptions: {}\n};\nInteractable.propTypes = {\n  children: PropTypes.node.isRequired,\n  draggable: PropTypes.bool,\n  draggableOptions: PropTypes.object,\n  dropzone: PropTypes.bool,\n  dropzoneOptions: PropTypes.object,\n  resizable: PropTypes.bool,\n  resizableOptions: PropTypes.object\n};","map":{"version":3,"sources":["C:/audi_/ESPL_projects/facebook/src/helper/Interactable.js"],"names":["React","Component","cloneElement","PropTypes","findDOMNode","interact","Interactable","render","props","children","ref","node","draggable","componentDidMount","setInteractions","componentWillReceiveProps","draggableOptions","dropzone","dropzoneOptions","resizable","resizableOptions","defaultProps","propTypes","isRequired","bool","object"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,YAA3B,QAA+C,OAA/C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,WAA5B;AAEA,OAAOC,QAAP,MAAqB,aAArB;AAEA,eAAe,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AAUlDM,EAAAA,MAAM,GAAG;AACP,WAAOL,YAAY,CAAC,KAAKM,KAAL,CAAWC,QAAZ,EAAsB;AACvCC,MAAAA,GAAG,EAAEC,IAAI,IAAK,KAAKA,IAAL,GAAYA,IADa;AAEvCC,MAAAA,SAAS,EAAE;AAF4B,KAAtB,CAAnB;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,QAAL,GAAgBA,QAAQ,CAACD,WAAW,CAAC,KAAKO,IAAN,CAAZ,CAAxB;AACA,SAAKG,eAAL;AACD;;AAEDC,EAAAA,yBAAyB,GAAG;AAC1B,SAAKV,QAAL,GAAgBA,QAAQ,CAACD,WAAW,CAAC,KAAKO,IAAN,CAAZ,CAAxB;AACA,SAAKG,eAAL;AACD;;AAEDA,EAAAA,eAAe,GAAG;AAChB,QAAI,KAAKN,KAAL,CAAWI,SAAf,EACE,KAAKP,QAAL,CAAcO,SAAd,CAAwB,KAAKJ,KAAL,CAAWQ,gBAAnC;AACF,QAAI,KAAKR,KAAL,CAAWS,QAAf,EAAyB,KAAKZ,QAAL,CAAcY,QAAd,CAAuB,KAAKT,KAAL,CAAWU,eAAlC;AACzB,QAAI,KAAKV,KAAL,CAAWW,SAAf,EACE,KAAKd,QAAL,CAAcc,SAAd,CAAwB,KAAKX,KAAL,CAAWY,gBAAnC;AACH;;AAjCiD;AAA/Bd,Y,CACZe,Y,GAAe;AACpBT,EAAAA,SAAS,EAAE,KADS;AAEpBK,EAAAA,QAAQ,EAAE,KAFU;AAGpBE,EAAAA,SAAS,EAAE,KAHS;AAIpBH,EAAAA,gBAAgB,EAAE,EAJE;AAKpBE,EAAAA,eAAe,EAAE,EALG;AAMpBE,EAAAA,gBAAgB,EAAE;AANE,C;AAmCxBd,YAAY,CAACgB,SAAb,GAAyB;AACvBb,EAAAA,QAAQ,EAAEN,SAAS,CAACQ,IAAV,CAAeY,UADF;AAEvBX,EAAAA,SAAS,EAAET,SAAS,CAACqB,IAFE;AAGvBR,EAAAA,gBAAgB,EAAEb,SAAS,CAACsB,MAHL;AAIvBR,EAAAA,QAAQ,EAAEd,SAAS,CAACqB,IAJG;AAKvBN,EAAAA,eAAe,EAAEf,SAAS,CAACsB,MALJ;AAMvBN,EAAAA,SAAS,EAAEhB,SAAS,CAACqB,IANE;AAOvBJ,EAAAA,gBAAgB,EAAEjB,SAAS,CAACsB;AAPL,CAAzB","sourcesContent":["import React, { Component, cloneElement } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { findDOMNode } from \"react-dom\";\r\n\r\nimport interact from \"interact.js\";\r\n\r\nexport default class Interactable extends Component {\r\n  static defaultProps = {\r\n    draggable: false,\r\n    dropzone: false,\r\n    resizable: false,\r\n    draggableOptions: {},\r\n    dropzoneOptions: {},\r\n    resizableOptions: {}\r\n  };\r\n\r\n  render() {\r\n    return cloneElement(this.props.children, {\r\n      ref: node => (this.node = node),\r\n      draggable: false\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.interact = interact(findDOMNode(this.node));\r\n    this.setInteractions();\r\n  }\r\n\r\n  componentWillReceiveProps() {\r\n    this.interact = interact(findDOMNode(this.node));\r\n    this.setInteractions();\r\n  }\r\n\r\n  setInteractions() {\r\n    if (this.props.draggable)\r\n      this.interact.draggable(this.props.draggableOptions);\r\n    if (this.props.dropzone) this.interact.dropzone(this.props.dropzoneOptions);\r\n    if (this.props.resizable)\r\n      this.interact.resizable(this.props.resizableOptions);\r\n  }\r\n}\r\n\r\nInteractable.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  draggable: PropTypes.bool,\r\n  draggableOptions: PropTypes.object,\r\n  dropzone: PropTypes.bool,\r\n  dropzoneOptions: PropTypes.object,\r\n  resizable: PropTypes.bool,\r\n  resizableOptions: PropTypes.object\r\n};\r\n"]},"metadata":{},"sourceType":"module"}