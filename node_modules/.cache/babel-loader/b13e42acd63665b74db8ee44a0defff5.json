{"ast":null,"code":"var _jsxFileName = \"C:\\\\audi_\\\\ESPL_projects\\\\facebook\\\\src\\\\components\\\\watermarks\\\\updatedEditorWithVideo.js\";\nimport React, { Component } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport FilterSamples from \"../filter/imageFilterSample\";\nimport demoVideo from \"../../assets/mdv.mp4\";\nimport \"./index.css\";\n\nconst interact = require('interactjs');\n\nclass WatermarkPosition extends Component {\n  constructor(props) {\n    super(props);\n\n    this.coverEffectHandler = () => {\n      console.log(\"cover effect dome\");\n    };\n\n    this.onImageLoaded = image => {\n      this.imageRef = image;\n    };\n\n    this.onCropComplete = crop => {\n      this.makeClientCrop(crop);\n    };\n\n    this.onCropChange = (crop, percentCrop) => {\n      // You could also use percentCrop:\n      // this.setState({ crop: percentCrop });\n      this.setState({\n        crop\n      });\n    };\n\n    this.cropImageReturnHandler = () => {\n      let basicData = this.getImageAspectRatio();\n      let crop = this.state.crop;\n      let finalX = basicData.aspRatiobyW * crop.x;\n      let finalY = basicData.aspRatiobyH * crop.y;\n      let fW = crop.width * basicData.aspRatiobyW;\n      let fH = crop.height * basicData.aspRatiobyH;\n      let cropImageData = {\n        finalX,\n        finalY,\n        fW,\n        fH\n      };\n      console.log(\"FInal cropped image dimentions\", cropImageData);\n      this.setState({\n        cropImg: false\n      }); // update the cover image url //-> return aspect ratio img \n    };\n\n    this.getCroppedImg = (image, crop, fileName) => {\n      console.log(crop); // const canvas = document.createElement('canvas');\n      // const scaleX = image.naturalWidth / image.width;\n      // const scaleY = image.naturalHeight / image.height;\n      // canvas.width = crop.width;\n      // canvas.height = crop.height;\n      // const ctx = canvas.getContext('2d');\n      // ctx.drawImage(\n      //   image,\n      //   crop.x * scaleX,\n      //   crop.y * scaleY,\n      //   crop.width * scaleX,\n      //   crop.height * scaleY,\n      //   0,\n      //   0,\n      //   crop.width,\n      //   crop.height\n      // );\n      // updated croped image \n      // 1. updated position\n      // 2. updated height and width \n    };\n\n    this.handleChange = event => {\n      if (event.target.files[0]) {\n        this.setState({\n          file: URL.createObjectURL(event.target.files[0]),\n          originalFile: event.target.files[0]\n        });\n      }\n    };\n\n    this.handleLogoFile = event => {\n      if (event.target.files[0]) {\n        let oldList = this.state.logoWatermarkList;\n        oldList.push(event.target.files[0]);\n        this.setState({\n          logoWatermarkList: oldList\n        });\n      }\n    };\n\n    this.removeDomElement = e => {\n      let id = this.state.currentEementId;\n      if (id && document.getElementById(id)) document.getElementById(id).remove(); // remove from logo array also \n    };\n\n    this.domCoverChangeHandler = (coverStyle, value) => {\n      // flip the cover\n      let cover = document.querySelector(\"#cover\");\n\n      if (coverStyle == \"rotateCover\") {\n        if (value == \"90\") {\n          cover.style.transform = \"rotate(90deg) scale(0.625)\";\n        }\n\n        if (value == \"180\") {\n          cover.style.transform = \"rotate(180deg) scale(1)\";\n        }\n\n        if (value == \"270\") {\n          cover.style.transform = \"rotate(270deg) scale(0.625)\";\n        }\n\n        if (value == \"360\") {\n          cover.style.transform = \"rotate(360deg) scale(1)\";\n        }\n      }\n\n      if (coverStyle == \"flipCover\") {\n        if (value == \"flipx\") {\n          cover.style.transform = \"scaleX(-1)\";\n        }\n\n        if (value == \"flipy\") {\n          cover.style.transform = \"scaleY(-1)\";\n        }\n\n        if (value == \"flipxReset\") {\n          cover.style.transform = \"scaleX(1)\";\n        }\n\n        if (value == \"flipyReset\") {\n          cover.style.transform = \"scaleY(1)\";\n        }\n      }\n\n      if (coverStyle == \"filterCover\") {\n        if (value == \"normal\") {\n          cover.style.filter = \"unset\";\n        }\n\n        if (value == \"grayscale\") {\n          cover.style.filter = \"grayscale(100%)\";\n        }\n\n        if (value == \"invert\") {\n          cover.style.filter = \"invert(100%)\";\n        }\n\n        if (value == \"contrast\") {\n          cover.style.filter = \"contrast(200%)\";\n        }\n\n        if (value == \"blur\") {\n          cover.style.filter = \"blur(5px)\";\n        }\n\n        if (value == \"opacity\") {\n          cover.style.filter = \"opacity(30%)\";\n        }\n\n        if (value == \"hue-rotate\") {\n          cover.style.filter = \"hue-rotate(90deg)\";\n        }\n\n        if (value == \"brightness\") {\n          cover.style.filter = \"brightness(200%)\";\n        }\n\n        if (value == \"saturate\") {\n          cover.style.filter = \"saturate(8)\";\n        }\n\n        if (value == \"sepia\") {\n          cover.style.filter = \"sepia(100%)\";\n        }\n      }\n    };\n\n    this.domChangeHandler = (changeParameter, value) => {\n      // update the element \n      let modifingElement = this.state.currentEementId;\n\n      if (modifingElement) {\n        console.log(\"changing element \", modifingElement);\n        let ele = document.getElementById(modifingElement); // console.log(document.getElementById(modifingElement).childNodes[0].innerText);\n\n        if (changeParameter === \"color\") {\n          ele.style.color = value ? value : \"black\";\n        }\n\n        if (changeParameter === \"fontWeight\") {\n          ele.style.fontWeight = value ? value : \"normal\";\n\n          if (value == \"italic\") {\n            ele.style.fontStyle = value ? value : \"normal\";\n          }\n\n          if (value == \"normal\") {\n            ele.style.fontStyle = \"normal\";\n          }\n        }\n\n        if (changeParameter === \"logoRotate\") {\n          if (modifingElement.includes(\"logo\")) {\n            ele.childNodes[0].style.transform = `rotate(${value}deg)`; // only logo rotation\n          }\n        }\n\n        if (changeParameter === \"opacity\") {\n          ele.style.opacity = value ? `0.${value}` : \"0.9\";\n        }\n\n        if (changeParameter === \"textRange\") {\n          if (modifingElement.includes(\"logo\")) {\n            ele.children[0].width = value;\n            ele.children[0].height = value;\n          } else {\n            console.log(value);\n            ele.style.fontSize = `${value}px`;\n          }\n        }\n\n        if (changeParameter === \"watermarkText\") {\n          if (value) {\n            document.getElementById(modifingElement).childNodes[0].innerText = value;\n          } else {\n            document.getElementById(modifingElement).childNodes[0].innerText = \"Click To Edit\";\n          }\n        }\n      }\n    };\n\n    this.finalLogoXY = basicData => {\n      let vm = this;\n      let finalLogoWatermarkList = [];\n      let jsonArrayLogoWatermarkObj = [];\n\n      for (let index = 0; index < vm.logoWatermarkCount; index++) {\n        let watermarkLogo = document.getElementById(`logo-watermark-${index}`);\n\n        if (watermarkLogo) {\n          let wmLogoImgcurrWidth = watermarkLogo.clientWidth;\n          let wmLogoImgcurrHeight = watermarkLogo.clientHeight - 4;\n          let xyMovesLogo = this.objectMoment(watermarkLogo.style.transform);\n          let rotationAngle = parseInt(watermarkLogo.childNodes[0].style.transform.replace(/\\D/g, \"\"), 10); //  console.log(\"LLL chck\", watermarkLogo, rotationAngle);\n          // xy on original img \n\n          let finalX = basicData.aspRatiobyW * xyMovesLogo.xMove;\n          let finalY = basicData.aspRatiobyH * xyMovesLogo.yMove; // final height and with of logo img and opacity\n\n          let fW = wmLogoImgcurrWidth * basicData.aspRatiobyW;\n          let fH = wmLogoImgcurrHeight * basicData.aspRatiobyH;\n          let opacity = watermarkLogo.style.opacity;\n          finalLogoWatermarkList.push({\n            finalX,\n            finalY,\n            fW,\n            fH,\n            opacity,\n            rotationAngle: rotationAngle ? rotationAngle : 0\n          });\n          jsonArrayLogoWatermarkObj.push({\n            watermarkPath: 'C:/Users/purushottam.rajdev/Documents/Watermark/testing/logoA.png',\n            positionX: finalX,\n            positionY: finalY,\n            width: fW,\n            hieght: fH,\n            opacity: opacity,\n            isLogo: 1,\n            rotation: rotationAngle ? rotationAngle : 0\n          });\n        }\n      }\n\n      return jsonArrayLogoWatermarkObj;\n    };\n\n    this.finalTextXY = basicData => {\n      let vm = this;\n      let finalTextWatermarkList = [];\n      let jsonArrayTextWatermarkObj = [];\n\n      for (let index = 0; index < vm.textWatermarkCount; index++) {\n        let textElement = document.getElementById(`txt-watermark-${index}`);\n\n        if (textElement) {\n          console.log(textElement);\n          let watermarkObj = {\n            fontSize: parseInt(textElement.style.fontSize, 10),\n            watermarkID: textElement.id,\n            opacity: textElement.style.opacity,\n            fontFamily: textElement.style.fontFamily,\n            position: \"absolute\",\n            // keep same for all\n            color: textElement.style.color,\n            watermarkText: textElement.childNodes[0].innerText,\n            textRotatation: 0 // transformOrigin: \"0 0\"\n\n          }; //let waterMarkText = document.getElementById(txtObj.watermarkID);\n\n          let xyMovesText = this.objectMoment(textElement.style.transform);\n          let finalTextX = basicData.aspRatiobyW * xyMovesText.xMove;\n          let finalTextY = basicData.aspRatiobyH * xyMovesText.yMove; // 0.018 y move per 1px   + (0.018 * basicData.perviewCoverH)\n\n          let textFper = watermarkObj.fontSize / basicData.previewCoverW * 100;\n          let finalTextF = textFper * basicData.originalCoverW / 100;\n          let textFontName = \"cour\"; //\n\n          finalTextWatermarkList.push({\n            finalTextX,\n            finalTextY,\n            finalTextF,\n            textFontName,\n            opacity: watermarkObj.opacity,\n            color: watermarkObj.color,\n            watermarkText: watermarkObj.watermarkText\n          });\n          jsonArrayTextWatermarkObj.push({\n            \"isLogo\": 0,\n            \"positionX\": finalTextX,\n            \"positionY\": finalTextY,\n            \"opacity\": watermarkObj.opacity,\n            \"watermarkText\": watermarkObj.watermarkText,\n            \"fontColor\": watermarkObj.color,\n            \"fontSize\": finalTextF,\n            \"font\": textFontName\n          });\n        }\n      }\n\n      console.log(finalTextWatermarkList);\n      return jsonArrayTextWatermarkObj;\n    };\n\n    this.objectMoment = xyMove => {\n      if (xyMove) {\n        let movement = xyMove.split(\",\");\n        let positiveX = !movement[0].includes(\"-\");\n        let positiveY = !movement[1].includes(\"-\");\n        let xMove = parseInt(movement[0].replace(/\\D/g, \"\"), 10);\n        xMove = positiveX ? xMove * 1 : xMove * -1;\n        let yMove = parseInt(movement[1].replace(/\\D/g, \"\"), 10);\n        yMove = positiveY ? yMove * 1 : yMove * -1;\n        return {\n          xMove,\n          yMove\n        };\n      }\n    };\n\n    this.getImageAspectRatio = () => {\n      console.log(\"final State\", this.state); // original img height and width\n      // let originalCoverW = 1000; \n      // let originalCoverH = 750;\n\n      let originalCoverW = this.state.actualImgWidth;\n      let originalCoverH = this.state.actualImgHeight; // bg img wh  --> preivew img height widht \n\n      let cover = document.querySelector(\"#cover\");\n      let previewCoverW = cover.clientWidth;\n      let perviewCoverH = cover.clientHeight; // distance  x y \n\n      let aspRatiobyW = originalCoverW / previewCoverW; // by width \n\n      let aspRatiobyH = originalCoverH / perviewCoverH; // by h\n\n      return {\n        originalCoverW,\n        originalCoverH,\n        previewCoverW,\n        perviewCoverH,\n        aspRatiobyW,\n        aspRatiobyH\n      };\n    };\n\n    this.checkImg = () => {\n      let basicData = this.getImageAspectRatio();\n      console.log(\"details- \", basicData); // for watermark text \n\n      let resList = this.finalTextXY(basicData);\n      let resLogoList = this.finalLogoXY(basicData);\n      console.log(resList, resLogoList); //  let finalText1 = this.finalTextXY(aspRatiobyW, aspRatiobyH, txtWatermarkObj1, basicData);\n\n      let jsonReq = {\n        originalResoursePath: 'C:/Users/purushottam.rajdev/Documents/Watermark/testing/gridOrg.jpg',\n        watermarkList: [...resList, ...resLogoList]\n      };\n      console.log(JSON.stringify(jsonReq)); // let finalText = resList[0];  // text 1 watermark\n      // let finalText1 = resList[1]; // text 2 watermark\n      // let finalLogo1 = resLogoList[0]; // logo 1 watermark\n      // if (finalLogo1) {\n      //     let fW = finalLogo1.fW;\n      //     let fH = finalLogo1.fH;\n      //     let finalX = finalLogo1.finalX;\n      //     let finalY = finalLogo1.finalY;\n      //     let finalLogoOpacity = finalLogo1.opacity;\n      //     let logoRotatation = finalLogo1.rotationAngle;\n      // let finalTextX = aspRatiobyW * xyMovesText.xMove;\n      // let finalTextY = aspRatiobyH * xyMovesText.yMove + (0.018 * perviewCoverH); // 0.018 y move per 1px \n      // let textFper = (this.state.fontSize / previewCoverW) * 100;\n      // let finalTextF = (textFper * originalCoverW) / 100;\n      // finalTextX,finalTextY,finalTextF\n      // let url = `ffmpeg -i gridOrg.jpg -i box.jpg -filter_complex \"[1]scale=${fW}:${fH}[a];[a]lut=a=val*0.9[b];[0][b] overlay=${finalX}:${finalY}\" -y watermarkLogo.jpg`\n      //let txtUrl = `ffmpeg -i gridOrg1.jpg -filter_complex \"[0]drawtext=fontfile=cour.ttf:text='${this.state.watermarkText}':fontcolor=${this.state.fontColor}:fontsize=${finalTextF}:x=${finalTextX}:y=${finalTextY}\" -y restextWatermark.jpg`\n      // console.log(txtUrl);\n      // let logoRotation = `ffmpeg -i gridOrg.jpg -i logoA.png -filter_complex \"[1]scale=${fW}:${fH}[a];[a]rotate='${this.state.logoRoatation}*PI/180:ow=hypot(iw,ih):oh=ow:c=none'[a];[0][a]overlay=${finalX}:${finalY}\" -y testRotation.jpg`\n      // let urlTextLogo = `ffmpeg -i gridOrg.jpg -i ${this.state.logoOriginalFile.name} -filter_complex \"[1]scale=${fW}:${fH}[t],[t]lut=a=val*0.${this.state.logoOpacity}[t],[t]rotate=${this.state.logoRoatation}*PI/180[t],[0][t]overlay=${finalX}:${finalY}[i1];[i1]drawtext=fontfile='${finalText.textFontName}.ttf': text='${finalText.watermarkText}':fontcolor=${finalText.color}@0.${finalText.opacity}:fontsize=${finalText.finalTextF}:x=${finalText.finalTextX}:y=${finalText.finalTextY}\" -y res_logoText.jpg`;\n      // console.log(urlTextLogo);\n      // let multiLoogSinglelogUrl = `ffmpeg -i gridOrg.jpg  -i ${this.state.logoOriginalFile.name} -i ${this.state.logoOriginalFile.name} -filter_complex \"[1]scale=${fW}:${fH}[t],[t]lut=a=val*0.${this.state.logoOpacity}[t],\n      // [t]rotate=${this.state.logoRoatation}*PI/180[t],[0][t]overlay=${finalX}:${finalY}[i1];\n      //  [2]scale=${fW}:${fH}[t],[t]lut=a=val*0.${this.state.logoOpacity}[t],[t]rotate=${this.state.logoRoatation}*PI/180[t],[i1][t]overlay=${finalX + 200}:${finalY}[i2];\n      //  [i2]drawtext=fontfile=cour.ttf: text='India':fontcolor=red@0.8:fontsize=20:x=300:y=20\" -preset ultrafast -y multiLogo.jpg\n      // `\n      // (finalText , finalText1);\n      //     let multiTextsingeLogo = `ffmpeg -i gridOrg.jpg -i logoA.png\n      //  -filter_complex \"[1]scale=${fW}:${fH}[t],[t]lut=a=val*${finalLogoOpacity}[t],[t]rotate=${logoRotatation}*PI/180[t],[0][t]overlay=${finalX}:${finalY}[i1];\n      // [i1]drawtext=fontfile=${finalText.textFontName}.ttf: text='${finalText.watermarkText}':fontcolor=${finalText.color}@${finalText.opacity}:fontsize=${finalText.finalTextF}:x=${finalText.finalTextX}:y=${finalText.finalTextY}[i2];\n      // [i2]drawtext=fontfile=${finalText1.textFontName}.ttf: text='${finalText1.watermarkText}':fontcolor=${finalText1.color}@${finalText1.opacity}:fontsize=${finalText1.finalTextF}:x=${finalText1.finalTextX}:y=${finalText1.finalTextY}\" -preset ultrafast -y res_multy_text.jpg`\n      // console.log(multiTextsingeLogo);\n      // let logoRotate_url = `ffmpeg -y -i gridOrg.jpg -i logoA.png -filter_complex \"[1]scale=${fW}:${fH}[scale];[scale]lut=a=val*${finalLogoOpacity}[scale];[scale]rotate=${logoRotatation}*PI/180:ow='rotw(${logoRotatation}*PI/180)':oh='roth(${logoRotatation}*PI/180):c=black@0'[rotate];[0][rotate]overlay=${finalX}-((overlay_w-${fW})/2):${finalY}-((overlay_h-${fH})/2)\" testRotation.jpg`;\n      //console.log(\"rotate url \", logoRotate_url);\n      // }\n    };\n\n    this.addLogoWatermark = () => {\n      let vm = this;\n      let logoList = vm.state.logoWatermarkList;\n      let lastIndex = logoList.length - 1; // let logoStyle = {\n      //     width: this.state.logoSize,\n      //     opacity: `0.${this.state.logoOpacity}`,\n      //     transform: `rotate(${this.state.logoRoatation}deg)`\n      // }\n\n      if (logoList[lastIndex]) {\n        let logoPreviewUrl = URL.createObjectURL(logoList[lastIndex]); // URL.createObjectURL(\n        // <div className=\"draggable-logo\"\n        // id=\"watermarkLogo\"\n        // style={{ position: \"absolute\" }} >\n        // <img src={this.state.logoFile}\n        //     id=\"watermarkLogoImg\"\n        //     style={logoStyle}\n        //     className=\"resizable-logo\"\n        //     />\n        // </div>\n        //     let vm = this;\n\n        let defaultLogo = {\n          watermarkID: `logo-watermark-${vm.logoWatermarkCount}`,\n          opacity: 9,\n          position: \"absolute\",\n          // keep same for all\n          logoRotatation: 0\n        };\n        let logoOne = defaultLogo;\n        let logoStyle = `opacity:0.${logoOne.opacity};  position: absolute;  transform: translate(0px, 0px);`;\n        let newLogoWatermark = document.createElement('div'); // is a node\n\n        newLogoWatermark.setAttribute(\"class\", \"draggable-logo\");\n        newLogoWatermark.setAttribute(\"style\", logoStyle);\n        newLogoWatermark.setAttribute(\"id\", `${logoOne.watermarkID}`);\n        let subImgDiv = document.createElement('IMG');\n        subImgDiv.setAttribute(\"src\", logoPreviewUrl);\n        subImgDiv.setAttribute(\"width\", \"80\");\n        subImgDiv.setAttribute(\"height\", \"80\");\n        subImgDiv.setAttribute(\"class\", \"resizable-logo\");\n        subImgDiv.setAttribute(\"alt\", `img-${logoOne.watermarkID}`); //     subImgDiv.setAttribute(\"style\", `transform : rotate(${logoOne.logoRotatation}deg)`);\n        //     // subImgDiv.innerHTML = `${logoOne.watermarkText}`;\n\n        newLogoWatermark.appendChild(subImgDiv);\n        console.log(newLogoWatermark);\n\n        newLogoWatermark.onclick = function () {\n          vm.setState({\n            currentEementId: `${logoOne.watermarkID}`\n          });\n          console.log(\"ele changed \", newLogoWatermark, vm.state);\n        }; //     // add to dom \n\n\n        document.getElementById(\"cover\").appendChild(newLogoWatermark);\n        vm.logoWatermarkCount++;\n        console.log(\"img added\");\n      }\n    };\n\n    this.addTextWatermark = () => {\n      let vm = this;\n      let defaultText = {\n        fontSize: 20,\n        watermarkID: `txt-watermark-${vm.textWatermarkCount}`,\n        opacity: 9,\n        fontFamily: \"arial\",\n        position: \"absolute\",\n        // keep same for all\n        color: \"red\",\n        watermarkText: \"New Watermark\",\n        textRotatation: 0\n      };\n      let textOne = defaultText;\n      let textOneStyle = `font-size: ${textOne.fontSize}px; opacity:0.${textOne.opacity}; font-family: ${textOne.fontFamily}; position: absolute; color:${textOne.color}; font-weight: bold; transform: translate(0px, 0px);`;\n      let newTextWatermark = document.createElement('div'); // is a node\n\n      newTextWatermark.setAttribute(\"class\", \"draggable-text\");\n      newTextWatermark.setAttribute(\"style\", textOneStyle);\n      newTextWatermark.setAttribute(\"id\", `${textOne.watermarkID}`);\n      console.log(newTextWatermark);\n      let subTextdiv = document.createElement('div');\n      subTextdiv.setAttribute(\"style\", `transform : rotate(${textOne.textRotatation}deg); line-height: 0.75em;`);\n      subTextdiv.innerHTML = `${textOne.watermarkText}`;\n      newTextWatermark.appendChild(subTextdiv);\n\n      newTextWatermark.onclick = function () {\n        vm.setState({\n          currentEementId: `${textOne.watermarkID}`\n        });\n        console.log(\"ele changed \", newTextWatermark, vm.state);\n      }; // add to dom \n\n\n      document.getElementById(\"cover\").appendChild(newTextWatermark);\n      vm.textWatermarkCount++;\n    };\n\n    this.videoDomElement = () => {\n      if (!this.state.coverVideoFile) {\n        return null;\n      }\n\n      let videoEle = React.createElement(\"div\", {\n        className: \"draggable-logo\",\n        id: \"videoCoverMove\",\n        style: {\n          transform: \"translate(-50px, 0px)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 775\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"videoCoverResize\",\n        className: \"resizable-logo\",\n        style: {\n          width: \"600px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 778\n        },\n        __self: this\n      }, React.createElement(\"video\", {\n        id: \"videoCover\",\n        style: {\n          width: \"inherit\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 780\n        },\n        __self: this\n      }, React.createElement(\"source\", {\n        src: URL.createObjectURL(this.state.coverVideoFile),\n        type: \"video/mp4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 782\n        },\n        __self: this\n      }))));\n      return videoEle;\n    };\n\n    this.coverVideoController = type => {\n      let coverVid = document.getElementById(\"coverVideo\");\n\n      if (type == \"play\") {\n        coverVid.play();\n      }\n\n      if (type == \"pause\") {\n        coverVid.pause();\n      }\n    };\n\n    this.addCoverVideo = e => {\n      console.log(\"adding video\", e.target.files[0]);\n\n      if (e.target.files[0]) {\n        this.setState({\n          coverVideoFile: e.target.files[0]\n        });\n      }\n    };\n\n    this.checkVideoWatermark = () => {\n      let videoMoveEle = document.getElementById(\"videoCoverMove\");\n      let videoResizeEle = document.getElementById(\"videoCoverResize\");\n      let videoEle = document.getElementById(\"videoCover\");\n      console.log(\"videoMOveXY\", videoMoveEle);\n      console.log(\"videoResizeEle\", videoResizeEle);\n      console.log(\"videoEle\", videoEle);\n      let videoW = 1280;\n      let videoH = 720;\n      let videoAspectRatio = videoW / videoH; // let videoUpdateH = videoResizeEle.style.width/videoAspectRatio;\n\n      let videoMove = this.objectMoment(videoMoveEle.style.transform);\n      videoMove.xMove = videoMove.xMove + 50;\n      console.log(videoMove);\n      let coverVideoData = {\n        videoMove,\n        videoW: videoResizeEle.style.width,\n        videoH: videoUpdateH\n      };\n      let url = `ffmpeg -f lavfi -i color=c=yellow:s=600x400 -i demo.mp4 -filter_complex \"[1]scale=${videoEle.style.width}:${videoEle.style.height} [i];[0][i]overlay=x=50:y=50:shortest=1,format=yuv420p\" -y output.mp4`;\n      console.log(url);\n    };\n\n    this.state = {\n      currentEementId: null,\n      logoWatermarkList: [],\n      fontSize: 20,\n      fontColor: \"red\",\n      rotate: 20,\n      textRotatation: 45,\n      logoRoatation: 180,\n      opacity: 9,\n      logoOpacity: 9,\n      logoSize: 80,\n      watermarkText: \"© free style\",\n      BackgroundImgUrl: \"\",\n      file: \"\",\n      logoFile: \"\",\n      logoOriginalFile: null,\n      originalFile: null,\n      // image parameters\n      actualImgWidth: 1000,\n      actualImgHeight: 750,\n      cropImg: false,\n      crop: {\n        unit: 'px',\n        width: 30 // aspect: 16 / 9,\n\n      },\n      // adding video \n      coverVideoFile: null\n    };\n    this.textRotationAngle = 10;\n    this.textWatermarkCount = 0;\n    this.logoWatermarkCount = 0;\n  }\n\n  componentDidMount() {\n    let vm = this; // drag the element on page \n\n    const position = {\n      x: 0,\n      y: 0\n    };\n    interact('.draggable-logo').draggable({\n      listeners: {\n        start(event) {// console.log(event.type, event.target)\n        },\n\n        move(event) {\n          position.x += event.dx;\n          position.y += event.dy;\n          event.target.style.transform = `translate(${position.x}px, ${position.y}px)`;\n          console.log(event.type, event.target);\n        }\n\n      }\n    }); // resize the element \n\n    interact(\".resizable-logo\").resizable({\n      edges: {\n        left: false,\n        right: true,\n        bottom: true,\n        top: false\n      },\n      // modifiers: [\n      //   interact.modifiers.restrictEdges({\n      //     outer: \"parent\",\n      //     endOnly: true\n      //   })\n      // ],\n      inertia: true,\n      modifiers: [// keep the edges inside the parent\n      // interact.modifiers.restrictEdges({\n      //   outer: 'parent'\n      // }),\n      // minimum size\n      interact.modifiers.restrictSize({\n        min: {\n          width: 20,\n          height: 20\n        }\n      })]\n    }).on(\"resizemove\", function (event) {\n      var target = event.target;\n      console.log(target);\n      target.style.width = event.rect.width + \"px\";\n      target.style.height = event.rect.height + \"px\";\n    }); // text drag(move)\n\n    interact('.draggable-text').draggable({\n      listeners: {\n        start(event) {},\n\n        move(event) {\n          position.x += event.dx;\n          position.y += event.dy;\n          console.log(event.target.style.transform);\n          event.target.style.transform = `translate(${position.x}px, ${position.y}px)`;\n        }\n\n      }\n    }); // resize the element \n    // interact(\".resizable-text\")\n    // .resizable({\n    //         edges: { left: false, right: true, bottom: true, top: false },\n    //         // modifiers: [\n    //         //   interact.modifiers.restrictEdges({\n    //         //     outer: \"parent\",\n    //         //     endOnly: true\n    //         //   })\n    //         // ],\n    //         inertia: true\n    //     })\n    //     .on(\"resizemove\", function(event) {\n    //         var target = event.target\n    //         console.log(event);\n    //         target.style.width = event.rect.width + \"px\"\n    //         target.style.height = event.rect.height + \"px\"\n    //     })\n  } // cover effect \n\n\n  async makeClientCrop(crop) {\n    if (this.imageRef && crop.width && crop.height) {\n      const croppedImageUrl = await this.getCroppedImg(this.imageRef, crop, 'newFile.jpeg');\n      this.setState({\n        croppedImageUrl\n      });\n    }\n  } // retun the calculated final cropped image height and width \n\n\n  render() {\n    let editorConsole = {\n      position: \"relative\",\n      backgroundImage: `url(${this.state.file})`,\n      width: \"500px\",\n      height: \"375px\"\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 864\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 865\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 866\n      },\n      __self: this\n    }, \"User Inputs\"), \"cover: \", React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 867\n      },\n      __self: this\n    }), \"logo : \", React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleLogoFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 868\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => {\n        this.addLogoWatermark();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 869\n      },\n      __self: this\n    }, \"Add Logo\"), \"coverVideo : \", React.createElement(\"input\", {\n      type: \"file\",\n      onChange: e => this.addCoverVideo(e),\n      accept: \"video/*\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 875\n      },\n      __self: this\n    }), \"text Editor : text : \", React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.domChangeHandler(\"watermarkText\", e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 877\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      id: \"textColors\",\n      onChange: e => this.domChangeHandler(\"color\", e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 878\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 879\n      },\n      __self: this\n    }, \"red\"), React.createElement(\"option\", {\n      value: \"yellow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 880\n      },\n      __self: this\n    }, \"yellow\"), React.createElement(\"option\", {\n      value: \"pink\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 881\n      },\n      __self: this\n    }, \"pink\"), React.createElement(\"option\", {\n      value: \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 882\n      },\n      __self: this\n    }, \"green\"), React.createElement(\"option\", {\n      value: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 883\n      },\n      __self: this\n    }, \"blue\")), \"font Weight :\", React.createElement(\"select\", {\n      id: \"textColors\",\n      onChange: e => this.domChangeHandler(\"fontWeight\", e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 886\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 887\n      },\n      __self: this\n    }, \"normal\"), React.createElement(\"option\", {\n      value: \"bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 888\n      },\n      __self: this\n    }, \"bold\"), React.createElement(\"option\", {\n      value: \"italic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 889\n      },\n      __self: this\n    }, \"italic\")), \"Logo Rotation \", React.createElement(\"input\", {\n      type: \"range\",\n      name: \"logoRotate\",\n      min: 0,\n      max: 360,\n      onChange: e => this.domChangeHandler(\"logoRotate\", e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 893\n      },\n      __self: this\n    }), \"Opacity : \", React.createElement(\"input\", {\n      type: \"range\",\n      name: \"points\",\n      min: \"1\",\n      max: \"9\",\n      onChange: e => this.domChangeHandler(\"opacity\", e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 896\n      },\n      __self: this\n    }), \"Size : \", React.createElement(\"input\", {\n      type: \"range\",\n      name: \"points\",\n      min: \"5\",\n      max: \"100\",\n      onChange: e => this.domChangeHandler(\"textRange\", e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 898\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 900\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 909\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.checkImg(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 911\n      },\n      __self: this\n    }, \" check Img\"), React.createElement(\"button\", {\n      onClick: () => this.addTextWatermark(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 912\n      },\n      __self: this\n    }, \" Add Text\"), React.createElement(\"button\", {\n      onClick: () => this.removeDomElement(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 913\n      },\n      __self: this\n    }, \"Remove Ele\"), React.createElement(\"button\", {\n      onClick: () => this.checkVideoWatermark(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 914\n      },\n      __self: this\n    }, \"Check Video\")), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 935\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"watermark-playground\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 937\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"editor-console\",\n      id: \"cover\",\n      style: editorConsole,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 939\n      },\n      __self: this\n    }, this.videoDomElement(), this.state.cropImg ? React.createElement(ReactCrop, {\n      src: this.state.file,\n      crop: this.state.crop,\n      ruleOfThirds: true,\n      onImageLoaded: this.onImageLoaded,\n      onComplete: this.onCropComplete,\n      onChange: this.onCropChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 946\n      },\n      __self: this\n    }) : null)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 963\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 964\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.setState({\n        cropImg: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 965\n      },\n      __self: this\n    }, \"Crop Img\"), React.createElement(\"button\", {\n      onClick: () => this.cropImageReturnHandler(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 966\n      },\n      __self: this\n    }, \"save Crop Img\"), React.createElement(\"button\", {\n      onClick: () => this.coverVideoController(\"play\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 968\n      },\n      __self: this\n    }, \"play cover vid \"), React.createElement(\"button\", {\n      onClick: () => this.coverVideoController(\"pause\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 969\n      },\n      __self: this\n    }, \"stop cover vid\"), \"Cover Rotate \", React.createElement(\"select\", {\n      id: \"flipCover\",\n      onChange: e => this.domCoverChangeHandler(\"rotateCover\", e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 973\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 976\n      },\n      __self: this\n    }, \"none\"), React.createElement(\"option\", {\n      value: \"90\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 977\n      },\n      __self: this\n    }, \"90\"), React.createElement(\"option\", {\n      value: \"180\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 978\n      },\n      __self: this\n    }, \"180\"), React.createElement(\"option\", {\n      value: \"270\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 979\n      },\n      __self: this\n    }, \"270\"), React.createElement(\"option\", {\n      value: \"360\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 980\n      },\n      __self: this\n    }, \"360\")), \"Cover Flip \", React.createElement(\"select\", {\n      id: \"flipCover\",\n      onChange: e => this.domCoverChangeHandler(\"flipCover\", e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 984\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"flipx\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 986\n      },\n      __self: this\n    }, \"flipx\"), React.createElement(\"option\", {\n      value: \"flipxReset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 987\n      },\n      __self: this\n    }, \"flipx Reset\"), React.createElement(\"option\", {\n      value: \"flipy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 988\n      },\n      __self: this\n    }, \"flipy\"), React.createElement(\"option\", {\n      value: \"flipyReset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 989\n      },\n      __self: this\n    }, \"flipy Reset\")), React.createElement(FilterSamples, {\n      filterEffect: (filterType, value) => this.domCoverChangeHandler(filterType, value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 993\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 995\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 997\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default WatermarkPosition;","map":{"version":3,"sources":["C:/audi_/ESPL_projects/facebook/src/components/watermarks/updatedEditorWithVideo.js"],"names":["React","Component","ReactCrop","FilterSamples","demoVideo","interact","require","WatermarkPosition","constructor","props","coverEffectHandler","console","log","onImageLoaded","image","imageRef","onCropComplete","crop","makeClientCrop","onCropChange","percentCrop","setState","cropImageReturnHandler","basicData","getImageAspectRatio","state","finalX","aspRatiobyW","x","finalY","aspRatiobyH","y","fW","width","fH","height","cropImageData","cropImg","getCroppedImg","fileName","handleChange","event","target","files","file","URL","createObjectURL","originalFile","handleLogoFile","oldList","logoWatermarkList","push","removeDomElement","e","id","currentEementId","document","getElementById","remove","domCoverChangeHandler","coverStyle","value","cover","querySelector","style","transform","filter","domChangeHandler","changeParameter","modifingElement","ele","color","fontWeight","fontStyle","includes","childNodes","opacity","children","fontSize","innerText","finalLogoXY","vm","finalLogoWatermarkList","jsonArrayLogoWatermarkObj","index","logoWatermarkCount","watermarkLogo","wmLogoImgcurrWidth","clientWidth","wmLogoImgcurrHeight","clientHeight","xyMovesLogo","objectMoment","rotationAngle","parseInt","replace","xMove","yMove","watermarkPath","positionX","positionY","hieght","isLogo","rotation","finalTextXY","finalTextWatermarkList","jsonArrayTextWatermarkObj","textWatermarkCount","textElement","watermarkObj","watermarkID","fontFamily","position","watermarkText","textRotatation","xyMovesText","finalTextX","finalTextY","textFper","previewCoverW","finalTextF","originalCoverW","textFontName","xyMove","movement","split","positiveX","positiveY","actualImgWidth","originalCoverH","actualImgHeight","perviewCoverH","checkImg","resList","resLogoList","jsonReq","originalResoursePath","watermarkList","JSON","stringify","addLogoWatermark","logoList","lastIndex","length","logoPreviewUrl","defaultLogo","logoRotatation","logoOne","logoStyle","newLogoWatermark","createElement","setAttribute","subImgDiv","appendChild","onclick","addTextWatermark","defaultText","textOne","textOneStyle","newTextWatermark","subTextdiv","innerHTML","videoDomElement","coverVideoFile","videoEle","coverVideoController","type","coverVid","play","pause","addCoverVideo","checkVideoWatermark","videoMoveEle","videoResizeEle","videoW","videoH","videoAspectRatio","videoMove","coverVideoData","videoUpdateH","url","fontColor","rotate","logoRoatation","logoOpacity","logoSize","BackgroundImgUrl","logoFile","logoOriginalFile","unit","textRotationAngle","componentDidMount","draggable","listeners","start","move","dx","dy","resizable","edges","left","right","bottom","top","inertia","modifiers","restrictSize","min","on","rect","croppedImageUrl","render","editorConsole","backgroundImage","filterType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\n\r\nimport FilterSamples from \"../filter/imageFilterSample\";\r\n\r\nimport demoVideo from \"../../assets/mdv.mp4\";\r\n\r\n\r\nimport \"./index.css\";\r\nconst interact = require('interactjs')\r\n\r\n\r\nclass WatermarkPosition extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentEementId: null,\r\n            logoWatermarkList: [],\r\n            fontSize: 20,\r\n            fontColor: \"red\",\r\n            rotate: 20,\r\n            textRotatation: 45,\r\n            logoRoatation: 180,\r\n            opacity: 9,\r\n            logoOpacity: 9,\r\n            logoSize: 80,\r\n            watermarkText: \"© free style\",\r\n            BackgroundImgUrl: \"\",\r\n            file: \"\",\r\n            logoFile: \"\",\r\n\r\n            logoOriginalFile: null,\r\n            originalFile: null,\r\n\r\n            // image parameters\r\n            actualImgWidth: 1000,\r\n            actualImgHeight: 750,\r\n\r\n            cropImg: false,\r\n\r\n            crop: {\r\n                unit: 'px',\r\n                width: 30,\r\n                // aspect: 16 / 9,\r\n            },\r\n\r\n            // adding video \r\n            coverVideoFile : null\r\n        }\r\n\r\n        this.textRotationAngle = 10;\r\n        this.textWatermarkCount = 0;\r\n        this.logoWatermarkCount = 0;\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        let vm = this;\r\n\r\n        // drag the element on page \r\n        const position = { x: 0, y: 0 }\r\n        interact('.draggable-logo').draggable({\r\n            listeners: {\r\n                start(event) {\r\n                    // console.log(event.type, event.target)\r\n                },\r\n                move(event) {\r\n                    position.x += event.dx\r\n                    position.y += event.dy\r\n\r\n                    event.target.style.transform =\r\n                        `translate(${position.x}px, ${position.y}px)`\r\n\r\n                    console.log(event.type, event.target)\r\n                },\r\n\r\n            }\r\n        })\r\n\r\n        // resize the element \r\n        interact(\".resizable-logo\")\r\n            .resizable({\r\n                edges: { left: false, right: true, bottom: true, top: false },\r\n                // modifiers: [\r\n                //   interact.modifiers.restrictEdges({\r\n                //     outer: \"parent\",\r\n                //     endOnly: true\r\n                //   })\r\n                // ],\r\n                inertia: true,\r\n                modifiers: [\r\n                    // keep the edges inside the parent\r\n                    // interact.modifiers.restrictEdges({\r\n                    //   outer: 'parent'\r\n                    // }),\r\n\r\n                    // minimum size\r\n                    interact.modifiers.restrictSize({\r\n                        min: { width: 20, height: 20 }\r\n                    })\r\n                ],\r\n            })\r\n            .on(\"resizemove\", function (event) {\r\n                var target = event.target\r\n                console.log(target);\r\n                target.style.width = event.rect.width + \"px\"\r\n                target.style.height = event.rect.height + \"px\"\r\n            })\r\n\r\n\r\n        // text drag(move)\r\n        interact('.draggable-text').draggable({\r\n            listeners: {\r\n                start(event) {\r\n                },\r\n                move(event) {\r\n                    position.x += event.dx\r\n                    position.y += event.dy\r\n                    console.log(event.target.style.transform);\r\n                    event.target.style.transform =\r\n                        `translate(${position.x}px, ${position.y}px)`\r\n                },\r\n\r\n            }\r\n        })\r\n\r\n        // resize the element \r\n        // interact(\".resizable-text\")\r\n        // .resizable({\r\n        //         edges: { left: false, right: true, bottom: true, top: false },\r\n        //         // modifiers: [\r\n        //         //   interact.modifiers.restrictEdges({\r\n        //         //     outer: \"parent\",\r\n        //         //     endOnly: true\r\n        //         //   })\r\n        //         // ],\r\n        //         inertia: true\r\n        //     })\r\n        //     .on(\"resizemove\", function(event) {\r\n        //         var target = event.target\r\n        //         console.log(event);\r\n        //         target.style.width = event.rect.width + \"px\"\r\n        //         target.style.height = event.rect.height + \"px\"\r\n        //     })\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    // cover effect \r\n\r\n    coverEffectHandler = () =>{\r\n        console.log(\"cover effect dome\")\r\n    }\r\n\r\n    // img crop start \r\n\r\n    onImageLoaded = image => {\r\n        this.imageRef = image;\r\n    };\r\n\r\n    onCropComplete = crop => {\r\n        this.makeClientCrop(crop);\r\n    };\r\n\r\n    onCropChange = (crop, percentCrop) => {\r\n        // You could also use percentCrop:\r\n        // this.setState({ crop: percentCrop });\r\n        this.setState({ crop });\r\n    };\r\n\r\n    async makeClientCrop(crop) {\r\n        if (this.imageRef && crop.width && crop.height) {\r\n            const croppedImageUrl = await this.getCroppedImg(\r\n                this.imageRef,\r\n                crop,\r\n                'newFile.jpeg'\r\n            );\r\n            this.setState({ croppedImageUrl });\r\n        }\r\n    }\r\n\r\n\r\n    // retun the calculated final cropped image height and width \r\n    cropImageReturnHandler = () => {\r\n        let basicData = this.getImageAspectRatio();\r\n        let crop = this.state.crop;\r\n        let finalX = basicData.aspRatiobyW * crop.x;\r\n        let finalY = basicData.aspRatiobyH * crop.y;\r\n        let fW = crop.width * basicData.aspRatiobyW;\r\n        let fH = crop.height * basicData.aspRatiobyH;\r\n\r\n        let cropImageData = {\r\n            finalX, finalY, fW, fH\r\n        }\r\n\r\n        console.log(\"FInal cropped image dimentions\", cropImageData);\r\n\r\n        this.setState({ cropImg: false });\r\n        // update the cover image url //-> return aspect ratio img \r\n\r\n    }\r\n\r\n\r\n    getCroppedImg = (image, crop, fileName) => {\r\n\r\n        console.log(crop);\r\n        // const canvas = document.createElement('canvas');\r\n        // const scaleX = image.naturalWidth / image.width;\r\n        // const scaleY = image.naturalHeight / image.height;\r\n        // canvas.width = crop.width;\r\n        // canvas.height = crop.height;\r\n        // const ctx = canvas.getContext('2d');\r\n\r\n        // ctx.drawImage(\r\n        //   image,\r\n        //   crop.x * scaleX,\r\n        //   crop.y * scaleY,\r\n        //   crop.width * scaleX,\r\n        //   crop.height * scaleY,\r\n        //   0,\r\n        //   0,\r\n        //   crop.width,\r\n        //   crop.height\r\n        // );\r\n\r\n        // updated croped image \r\n\r\n        // 1. updated position\r\n        // 2. updated height and width \r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    // img crop end\r\n\r\n    handleChange = (event) => {\r\n        if (event.target.files[0]) {\r\n            this.setState({\r\n                file: URL.createObjectURL(event.target.files[0]),\r\n                originalFile: event.target.files[0]\r\n            })\r\n        }\r\n    }\r\n\r\n    handleLogoFile = (event) => {\r\n        if (event.target.files[0]) {\r\n            let oldList = this.state.logoWatermarkList\r\n            oldList.push(event.target.files[0]);\r\n            this.setState({\r\n                logoWatermarkList: oldList\r\n            })\r\n        }\r\n    }\r\n\r\n    removeDomElement = (e) => {\r\n        let id = this.state.currentEementId;\r\n        if (id && document.getElementById(id)) document.getElementById(id).remove();\r\n        // remove from logo array also \r\n    }\r\n\r\n    domCoverChangeHandler = (coverStyle, value) => {\r\n\r\n\r\n        // flip the cover\r\n        let cover = document.querySelector(\"#cover\");\r\n\r\n        if (coverStyle == \"rotateCover\") {\r\n\r\n            if( value == \"90\"){\r\n                cover.style.transform = \"rotate(90deg) scale(0.625)\";\r\n            }\r\n            if( value == \"180\"){\r\n                cover.style.transform = \"rotate(180deg) scale(1)\";\r\n            }\r\n            if( value == \"270\"){\r\n                cover.style.transform = \"rotate(270deg) scale(0.625)\";\r\n            }\r\n            if( value == \"360\"){\r\n                cover.style.transform = \"rotate(360deg) scale(1)\";\r\n            }\r\n           \r\n        }\r\n\r\n        if (coverStyle == \"flipCover\") {\r\n            if (value == \"flipx\") {\r\n                cover.style.transform = \"scaleX(-1)\";\r\n            }\r\n\r\n            if (value == \"flipy\") {\r\n                cover.style.transform = \"scaleY(-1)\";\r\n            }\r\n            if (value == \"flipxReset\") {\r\n                cover.style.transform = \"scaleX(1)\";\r\n            }\r\n\r\n            if (value == \"flipyReset\") {\r\n                cover.style.transform = \"scaleY(1)\";\r\n\r\n            }\r\n        }\r\n\r\n\r\n        if (coverStyle == \"filterCover\") {\r\n\r\n\r\n            if (value == \"normal\") {\r\n                cover.style.filter = \"unset\";\r\n            }\r\n            if (value == \"grayscale\") {\r\n                cover.style.filter = \"grayscale(100%)\";\r\n            }\r\n            if (value == \"invert\") {\r\n                cover.style.filter = \"invert(100%)\";\r\n            }\r\n            if (value == \"contrast\") {\r\n                cover.style.filter = \"contrast(200%)\";\r\n            }\r\n            if (value == \"blur\") {\r\n                cover.style.filter = \"blur(5px)\";\r\n            }\r\n            if (value == \"opacity\") {\r\n                cover.style.filter = \"opacity(30%)\";\r\n            }\r\n            if (value == \"hue-rotate\") {\r\n                cover.style.filter = \"hue-rotate(90deg)\";\r\n            }\r\n            if (value == \"brightness\") {\r\n                cover.style.filter = \"brightness(200%)\";\r\n            }\r\n            if (value == \"saturate\") {\r\n                cover.style.filter = \"saturate(8)\";\r\n            }\r\n\r\n            if (value == \"sepia\") {\r\n                cover.style.filter = \"sepia(100%)\";\r\n            }\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    domChangeHandler = (changeParameter, value) => {\r\n\r\n        // update the element \r\n        let modifingElement = this.state.currentEementId;\r\n\r\n        if (modifingElement) {\r\n            console.log(\"changing element \", modifingElement)\r\n            let ele = document.getElementById(modifingElement);\r\n            // console.log(document.getElementById(modifingElement).childNodes[0].innerText);\r\n            if (changeParameter === \"color\") {\r\n                ele.style.color = value ? value : \"black\";\r\n            }\r\n\r\n            if (changeParameter === \"fontWeight\") {\r\n                ele.style.fontWeight = value ? value : \"normal\";\r\n                if (value == \"italic\") {\r\n                    ele.style.fontStyle = value ? value : \"normal\"\r\n                }\r\n\r\n                if (value == \"normal\") {\r\n                    ele.style.fontStyle = \"normal\"\r\n                }\r\n            }\r\n\r\n            if (changeParameter === \"logoRotate\") {\r\n\r\n                if (modifingElement.includes(\"logo\")) {\r\n                    ele.childNodes[0].style.transform = `rotate(${value}deg)` // only logo rotation\r\n                }\r\n            }\r\n\r\n            if (changeParameter === \"opacity\") {\r\n                ele.style.opacity = value ? `0.${value}` : \"0.9\";\r\n            }\r\n\r\n            if (changeParameter === \"textRange\") {\r\n\r\n                if (modifingElement.includes(\"logo\")) {\r\n                    ele.children[0].width = value;\r\n                    ele.children[0].height = value;\r\n                } else {\r\n                    console.log(value);\r\n                    ele.style.fontSize = `${value}px`;\r\n                }\r\n            }\r\n\r\n            if (changeParameter === \"watermarkText\") {\r\n                if (value) {\r\n                    document.getElementById(modifingElement).childNodes[0].innerText = value\r\n                } else {\r\n                    document.getElementById(modifingElement).childNodes[0].innerText = \"Click To Edit\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    finalLogoXY = (basicData) => {\r\n        let vm = this;\r\n        let finalLogoWatermarkList = [];\r\n        let jsonArrayLogoWatermarkObj = [];\r\n        for (let index = 0; index < vm.logoWatermarkCount; index++) {\r\n\r\n            let watermarkLogo = document.getElementById(`logo-watermark-${index}`);\r\n\r\n            if (watermarkLogo) {\r\n\r\n                let wmLogoImgcurrWidth = watermarkLogo.clientWidth;\r\n                let wmLogoImgcurrHeight = watermarkLogo.clientHeight - 4;\r\n\r\n                let xyMovesLogo = this.objectMoment(watermarkLogo.style.transform);\r\n\r\n                let rotationAngle = parseInt(watermarkLogo.childNodes[0].style.transform.replace(/\\D/g, \"\"), 10);\r\n                //  console.log(\"LLL chck\", watermarkLogo, rotationAngle);\r\n                // xy on original img \r\n                let finalX = basicData.aspRatiobyW * xyMovesLogo.xMove;\r\n                let finalY = basicData.aspRatiobyH * xyMovesLogo.yMove;\r\n\r\n                // final height and with of logo img and opacity\r\n                let fW = wmLogoImgcurrWidth * basicData.aspRatiobyW;\r\n                let fH = wmLogoImgcurrHeight * basicData.aspRatiobyH;\r\n                let opacity = watermarkLogo.style.opacity;\r\n\r\n                finalLogoWatermarkList.push({\r\n                    finalX, finalY, fW, fH, opacity,\r\n                    rotationAngle: rotationAngle ? rotationAngle : 0\r\n                })\r\n\r\n                jsonArrayLogoWatermarkObj.push({\r\n                    watermarkPath: 'C:/Users/purushottam.rajdev/Documents/Watermark/testing/logoA.png',\r\n                    positionX: finalX,\r\n                    positionY: finalY,\r\n                    width: fW,\r\n                    hieght: fH,\r\n                    opacity: opacity,\r\n                    isLogo: 1,\r\n                    rotation: rotationAngle ? rotationAngle : 0\r\n                })\r\n            }\r\n        }\r\n        return jsonArrayLogoWatermarkObj;\r\n    }\r\n\r\n\r\n    finalTextXY = (basicData) => {\r\n\r\n        let vm = this;\r\n        let finalTextWatermarkList = [];\r\n        let jsonArrayTextWatermarkObj = []\r\n\r\n        for (let index = 0; index < vm.textWatermarkCount; index++) {\r\n            let textElement = document.getElementById(`txt-watermark-${index}`);\r\n            if (textElement) {\r\n                console.log(textElement);\r\n                let watermarkObj = {\r\n                    fontSize: parseInt(textElement.style.fontSize, 10),\r\n                    watermarkID: textElement.id,\r\n                    opacity: textElement.style.opacity,\r\n                    fontFamily: textElement.style.fontFamily,\r\n                    position: \"absolute\",  // keep same for all\r\n                    color: textElement.style.color,\r\n                    watermarkText: textElement.childNodes[0].innerText,\r\n                    textRotatation: 0\r\n                    // transformOrigin: \"0 0\"\r\n                }\r\n\r\n                //let waterMarkText = document.getElementById(txtObj.watermarkID);\r\n                let xyMovesText = this.objectMoment(textElement.style.transform);\r\n                let finalTextX = basicData.aspRatiobyW * xyMovesText.xMove;\r\n                let finalTextY = basicData.aspRatiobyH * xyMovesText.yMove; // 0.018 y move per 1px   + (0.018 * basicData.perviewCoverH)\r\n                let textFper = (watermarkObj.fontSize / basicData.previewCoverW) * 100;\r\n                let finalTextF = (textFper * basicData.originalCoverW) / 100;\r\n\r\n                let textFontName = \"cour\";  //\r\n                finalTextWatermarkList.push({\r\n                    finalTextX,\r\n                    finalTextY,\r\n                    finalTextF,\r\n                    textFontName,\r\n                    opacity: watermarkObj.opacity,\r\n                    color: watermarkObj.color,\r\n                    watermarkText: watermarkObj.watermarkText\r\n                });\r\n\r\n                jsonArrayTextWatermarkObj.push({\r\n                    \"isLogo\": 0,\r\n                    \"positionX\": finalTextX,\r\n                    \"positionY\": finalTextY,\r\n                    \"opacity\": watermarkObj.opacity,\r\n                    \"watermarkText\": watermarkObj.watermarkText,\r\n                    \"fontColor\": watermarkObj.color,\r\n                    \"fontSize\": finalTextF,\r\n                    \"font\": textFontName,\r\n                })\r\n\r\n            }\r\n\r\n        }\r\n\r\n        console.log(finalTextWatermarkList);\r\n        return jsonArrayTextWatermarkObj;\r\n    }\r\n\r\n    objectMoment = (xyMove) => {\r\n        if (xyMove) {\r\n            let movement = xyMove.split(\",\");\r\n            let positiveX = !movement[0].includes(\"-\");\r\n            let positiveY = !movement[1].includes(\"-\");\r\n            let xMove = parseInt(movement[0].replace(/\\D/g, \"\"), 10);\r\n            xMove = positiveX ? xMove * 1 : xMove * -1;\r\n            let yMove = parseInt(movement[1].replace(/\\D/g, \"\"), 10);\r\n            yMove = positiveY ? yMove * 1 : yMove * -1;\r\n\r\n            return {\r\n                xMove,\r\n                yMove\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    getImageAspectRatio = () => {\r\n\r\n        console.log(\"final State\", this.state);\r\n\r\n        // original img height and width\r\n        // let originalCoverW = 1000; \r\n        // let originalCoverH = 750;\r\n\r\n        let originalCoverW = this.state.actualImgWidth;\r\n        let originalCoverH = this.state.actualImgHeight;\r\n\r\n        // bg img wh  --> preivew img height widht \r\n        let cover = document.querySelector(\"#cover\");\r\n        let previewCoverW = cover.clientWidth;\r\n        let perviewCoverH = cover.clientHeight;\r\n\r\n\r\n        // distance  x y \r\n        let aspRatiobyW = originalCoverW / previewCoverW;  // by width \r\n        let aspRatiobyH = originalCoverH / perviewCoverH; // by h\r\n\r\n\r\n        return {\r\n            originalCoverW,\r\n            originalCoverH,\r\n            previewCoverW,\r\n            perviewCoverH,\r\n            aspRatiobyW,\r\n            aspRatiobyH\r\n        }\r\n    }\r\n\r\n\r\n    checkImg = () => {\r\n\r\n        let basicData = this.getImageAspectRatio();\r\n\r\n        console.log(\"details- \", basicData);\r\n        // for watermark text \r\n\r\n        let resList = this.finalTextXY(basicData);\r\n        let resLogoList = this.finalLogoXY(basicData);\r\n\r\n        console.log(resList, resLogoList);\r\n\r\n        //  let finalText1 = this.finalTextXY(aspRatiobyW, aspRatiobyH, txtWatermarkObj1, basicData);\r\n\r\n        let jsonReq = {\r\n            originalResoursePath: 'C:/Users/purushottam.rajdev/Documents/Watermark/testing/gridOrg.jpg',\r\n            watermarkList: [...resList, ...resLogoList]\r\n        }\r\n\r\n\r\n\r\n        console.log(JSON.stringify(jsonReq));\r\n\r\n        // let finalText = resList[0];  // text 1 watermark\r\n        // let finalText1 = resList[1]; // text 2 watermark\r\n        // let finalLogo1 = resLogoList[0]; // logo 1 watermark\r\n\r\n        // if (finalLogo1) {\r\n\r\n        //     let fW = finalLogo1.fW;\r\n        //     let fH = finalLogo1.fH;\r\n        //     let finalX = finalLogo1.finalX;\r\n        //     let finalY = finalLogo1.finalY;\r\n        //     let finalLogoOpacity = finalLogo1.opacity;\r\n        //     let logoRotatation = finalLogo1.rotationAngle;\r\n\r\n\r\n        // let finalTextX = aspRatiobyW * xyMovesText.xMove;\r\n        // let finalTextY = aspRatiobyH * xyMovesText.yMove + (0.018 * perviewCoverH); // 0.018 y move per 1px \r\n\r\n\r\n        // let textFper = (this.state.fontSize / previewCoverW) * 100;\r\n        // let finalTextF = (textFper * originalCoverW) / 100;\r\n\r\n        // finalTextX,finalTextY,finalTextF\r\n\r\n\r\n        // let url = `ffmpeg -i gridOrg.jpg -i box.jpg -filter_complex \"[1]scale=${fW}:${fH}[a];[a]lut=a=val*0.9[b];[0][b] overlay=${finalX}:${finalY}\" -y watermarkLogo.jpg`\r\n        //let txtUrl = `ffmpeg -i gridOrg1.jpg -filter_complex \"[0]drawtext=fontfile=cour.ttf:text='${this.state.watermarkText}':fontcolor=${this.state.fontColor}:fontsize=${finalTextF}:x=${finalTextX}:y=${finalTextY}\" -y restextWatermark.jpg`\r\n\r\n        // console.log(txtUrl);\r\n\r\n        // let logoRotation = `ffmpeg -i gridOrg.jpg -i logoA.png -filter_complex \"[1]scale=${fW}:${fH}[a];[a]rotate='${this.state.logoRoatation}*PI/180:ow=hypot(iw,ih):oh=ow:c=none'[a];[0][a]overlay=${finalX}:${finalY}\" -y testRotation.jpg`\r\n\r\n        // let urlTextLogo = `ffmpeg -i gridOrg.jpg -i ${this.state.logoOriginalFile.name} -filter_complex \"[1]scale=${fW}:${fH}[t],[t]lut=a=val*0.${this.state.logoOpacity}[t],[t]rotate=${this.state.logoRoatation}*PI/180[t],[0][t]overlay=${finalX}:${finalY}[i1];[i1]drawtext=fontfile='${finalText.textFontName}.ttf': text='${finalText.watermarkText}':fontcolor=${finalText.color}@0.${finalText.opacity}:fontsize=${finalText.finalTextF}:x=${finalText.finalTextX}:y=${finalText.finalTextY}\" -y res_logoText.jpg`;\r\n\r\n        // console.log(urlTextLogo);\r\n\r\n        // let multiLoogSinglelogUrl = `ffmpeg -i gridOrg.jpg  -i ${this.state.logoOriginalFile.name} -i ${this.state.logoOriginalFile.name} -filter_complex \"[1]scale=${fW}:${fH}[t],[t]lut=a=val*0.${this.state.logoOpacity}[t],\r\n        // [t]rotate=${this.state.logoRoatation}*PI/180[t],[0][t]overlay=${finalX}:${finalY}[i1];\r\n        //  [2]scale=${fW}:${fH}[t],[t]lut=a=val*0.${this.state.logoOpacity}[t],[t]rotate=${this.state.logoRoatation}*PI/180[t],[i1][t]overlay=${finalX + 200}:${finalY}[i2];\r\n        //  [i2]drawtext=fontfile=cour.ttf: text='India':fontcolor=red@0.8:fontsize=20:x=300:y=20\" -preset ultrafast -y multiLogo.jpg\r\n        // `\r\n\r\n        // (finalText , finalText1);\r\n        //     let multiTextsingeLogo = `ffmpeg -i gridOrg.jpg -i logoA.png\r\n        //  -filter_complex \"[1]scale=${fW}:${fH}[t],[t]lut=a=val*${finalLogoOpacity}[t],[t]rotate=${logoRotatation}*PI/180[t],[0][t]overlay=${finalX}:${finalY}[i1];\r\n        // [i1]drawtext=fontfile=${finalText.textFontName}.ttf: text='${finalText.watermarkText}':fontcolor=${finalText.color}@${finalText.opacity}:fontsize=${finalText.finalTextF}:x=${finalText.finalTextX}:y=${finalText.finalTextY}[i2];\r\n        // [i2]drawtext=fontfile=${finalText1.textFontName}.ttf: text='${finalText1.watermarkText}':fontcolor=${finalText1.color}@${finalText1.opacity}:fontsize=${finalText1.finalTextF}:x=${finalText1.finalTextX}:y=${finalText1.finalTextY}\" -preset ultrafast -y res_multy_text.jpg`\r\n\r\n        // console.log(multiTextsingeLogo);\r\n\r\n\r\n        // let logoRotate_url = `ffmpeg -y -i gridOrg.jpg -i logoA.png -filter_complex \"[1]scale=${fW}:${fH}[scale];[scale]lut=a=val*${finalLogoOpacity}[scale];[scale]rotate=${logoRotatation}*PI/180:ow='rotw(${logoRotatation}*PI/180)':oh='roth(${logoRotatation}*PI/180):c=black@0'[rotate];[0][rotate]overlay=${finalX}-((overlay_w-${fW})/2):${finalY}-((overlay_h-${fH})/2)\" testRotation.jpg`;\r\n        //console.log(\"rotate url \", logoRotate_url);\r\n\r\n\r\n\r\n        // }\r\n    }\r\n\r\n\r\n    addLogoWatermark = () => {\r\n\r\n        let vm = this;\r\n        let logoList = vm.state.logoWatermarkList;\r\n        let lastIndex = logoList.length - 1;\r\n\r\n        // let logoStyle = {\r\n        //     width: this.state.logoSize,\r\n        //     opacity: `0.${this.state.logoOpacity}`,\r\n        //     transform: `rotate(${this.state.logoRoatation}deg)`\r\n        // }\r\n\r\n\r\n\r\n        if (logoList[lastIndex]) {\r\n\r\n            let logoPreviewUrl = URL.createObjectURL(logoList[lastIndex]);\r\n            // URL.createObjectURL(\r\n\r\n            // <div className=\"draggable-logo\"\r\n            // id=\"watermarkLogo\"\r\n            // style={{ position: \"absolute\" }} >\r\n            // <img src={this.state.logoFile}\r\n            //     id=\"watermarkLogoImg\"\r\n            //     style={logoStyle}\r\n\r\n            //     className=\"resizable-logo\"\r\n            //     />\r\n            // </div>\r\n\r\n\r\n\r\n            //     let vm = this;\r\n            let defaultLogo = {\r\n                watermarkID: `logo-watermark-${vm.logoWatermarkCount}`,\r\n                opacity: 9,\r\n                position: \"absolute\",  // keep same for all\r\n                logoRotatation: 0\r\n            }\r\n\r\n            let logoOne = defaultLogo;\r\n            let logoStyle = `opacity:0.${logoOne.opacity};  position: absolute;  transform: translate(0px, 0px);`;\r\n            let newLogoWatermark = document.createElement('div'); // is a node\r\n            newLogoWatermark.setAttribute(\"class\", \"draggable-logo\");\r\n            newLogoWatermark.setAttribute(\"style\", logoStyle);\r\n            newLogoWatermark.setAttribute(\"id\", `${logoOne.watermarkID}`);\r\n            let subImgDiv = document.createElement('IMG');\r\n            subImgDiv.setAttribute(\"src\", logoPreviewUrl);\r\n            subImgDiv.setAttribute(\"width\", \"80\");\r\n            subImgDiv.setAttribute(\"height\", \"80\");\r\n            subImgDiv.setAttribute(\"class\", \"resizable-logo\");\r\n            subImgDiv.setAttribute(\"alt\", `img-${logoOne.watermarkID}`);\r\n\r\n            //     subImgDiv.setAttribute(\"style\", `transform : rotate(${logoOne.logoRotatation}deg)`);\r\n            //     // subImgDiv.innerHTML = `${logoOne.watermarkText}`;\r\n            newLogoWatermark.appendChild(subImgDiv);\r\n            console.log(newLogoWatermark);\r\n\r\n            newLogoWatermark.onclick = function () {\r\n                vm.setState({ currentEementId: `${logoOne.watermarkID}` })\r\n                console.log(\"ele changed \", newLogoWatermark, vm.state);\r\n            };\r\n\r\n            //     // add to dom \r\n            document.getElementById(\"cover\").appendChild(newLogoWatermark);\r\n            vm.logoWatermarkCount++;\r\n\r\n            console.log(\"img added\");\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    addTextWatermark = () => {\r\n\r\n        let vm = this;\r\n        let defaultText = {\r\n            fontSize: 20,\r\n            watermarkID: `txt-watermark-${vm.textWatermarkCount}`,\r\n            opacity: 9,\r\n            fontFamily: \"arial\",\r\n            position: \"absolute\",  // keep same for all\r\n            color: \"red\",\r\n            watermarkText: \"New Watermark\",\r\n            textRotatation: 0\r\n        }\r\n\r\n        let textOne = defaultText\r\n\r\n        let textOneStyle = `font-size: ${textOne.fontSize}px; opacity:0.${textOne.opacity}; font-family: ${textOne.fontFamily}; position: absolute; color:${textOne.color}; font-weight: bold; transform: translate(0px, 0px);`;\r\n        let newTextWatermark = document.createElement('div'); // is a node\r\n\r\n        newTextWatermark.setAttribute(\"class\", \"draggable-text\");\r\n        newTextWatermark.setAttribute(\"style\", textOneStyle);\r\n        newTextWatermark.setAttribute(\"id\", `${textOne.watermarkID}`);\r\n        console.log(newTextWatermark);\r\n\r\n        let subTextdiv = document.createElement('div');\r\n        subTextdiv.setAttribute(\"style\", `transform : rotate(${textOne.textRotatation}deg); line-height: 0.75em;`);\r\n        subTextdiv.innerHTML = `${textOne.watermarkText}`;\r\n        newTextWatermark.appendChild(subTextdiv);\r\n\r\n        newTextWatermark.onclick = function () {\r\n            vm.setState({ currentEementId: `${textOne.watermarkID}` })\r\n            console.log(\"ele changed \", newTextWatermark, vm.state);\r\n        };\r\n\r\n        // add to dom \r\n        document.getElementById(\"cover\").appendChild(newTextWatermark);\r\n        vm.textWatermarkCount++;\r\n\r\n    }\r\n\r\n\r\n\r\n      videoDomElement = () =>{\r\n          \r\n        if(!this.state.coverVideoFile){\r\n            return null;\r\n        }\r\n\r\n      let videoEle =   <div className=\"draggable-logo\" \r\n         id=\"videoCoverMove\"\r\n        style={{ transform: \"translate(-50px, 0px)\"}}>\r\n        <div id=\"videoCoverResize\" className=\"resizable-logo\" \r\n         style={{ width : \"600px\"}}>\r\n            <video id=\"videoCover\" \r\n             style={{ width  : \"inherit\" }}>\r\n                <source src={URL.createObjectURL(this.state.coverVideoFile)} type=\"video/mp4\" />\r\n\r\n            </video>\r\n        </div>\r\n        </div>\r\n\r\n        return videoEle;\r\n      }\r\n\r\n\r\n    // add video \r\n\r\n    coverVideoController = (type) =>{\r\n       let coverVid =  document.getElementById(\"coverVideo\");\r\n\r\n        if(type == \"play\"){\r\n            coverVid.play();\r\n        }\r\n        if(type == \"pause\"){\r\n            coverVid.pause();\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    addCoverVideo = (e) =>{\r\n        console.log(\"adding video\" , e.target.files[0]);\r\n        if(e.target.files[0]){\r\n            this.setState({ coverVideoFile : e.target.files[0]});\r\n        }\r\n    }\r\n\r\n   \r\n    // get video Calculations\r\n\r\n   checkVideoWatermark = () =>{\r\n\r\n    let videoMoveEle = document.getElementById(\"videoCoverMove\");\r\n    let videoResizeEle = document.getElementById(\"videoCoverResize\");\r\n    let videoEle = document.getElementById(\"videoCover\");\r\n\r\n\r\n    console.log(\"videoMOveXY\" , videoMoveEle);\r\n    console.log(\"videoResizeEle\" , videoResizeEle);\r\n    console.log(\"videoEle\" , videoEle);\r\n\r\n    let videoW = 1280; let videoH = 720;\r\n    let videoAspectRatio = videoW/videoH\r\n\r\n   // let videoUpdateH = videoResizeEle.style.width/videoAspectRatio;\r\n\r\n    let videoMove = this.objectMoment(videoMoveEle.style.transform);\r\n        videoMove.xMove = videoMove.xMove + 50 ;\r\n\r\n     console.log(videoMove);\r\n\r\n    let coverVideoData = {\r\n        videoMove,\r\n        videoW : videoResizeEle.style.width,\r\n        videoH :videoUpdateH\r\n   }\r\n   \r\n \r\n\r\n    let url =  `ffmpeg -f lavfi -i color=c=yellow:s=600x400 -i demo.mp4 -filter_complex \"[1]scale=${videoEle.style.width}:${videoEle.style.height} [i];[0][i]overlay=x=50:y=50:shortest=1,format=yuv420p\" -y output.mp4`\r\n    console.log(url);\r\n}\r\n\r\n\r\n\r\n    render() {\r\n\r\n        let editorConsole = {\r\n            position: \"relative\",\r\n            backgroundImage: `url(${this.state.file})`,\r\n            width: \"500px\",\r\n            height: \"375px\",\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h4>User Inputs</h4>\r\n                    cover: <input type=\"file\" onChange={this.handleChange} />\r\n                    logo : <input type=\"file\" onChange={this.handleLogoFile} />\r\n                    <button onClick={() => { this.addLogoWatermark() }}>Add Logo</button>\r\n                    coverVideo : <input type=\"file\" \r\n                                    onChange={(e) => this.addCoverVideo(e)}\r\n                                    accept=\"video/*\"\r\n                                    />\r\n                    {/* <button onClick={() => { this.domCoverVideoChangeHandler() }}>Add CoverVideo</button> */}\r\n                    <br />\r\n                    text Editor :\r\n                    text : <input type=\"text\" onChange={e => this.domChangeHandler(\"watermarkText\", e.target.value)} />\r\n                    <select id=\"textColors\" onChange={e => this.domChangeHandler(\"color\", e.target.value)}>\r\n                        <option value=\"red\">red</option>\r\n                        <option value=\"yellow\">yellow</option>\r\n                        <option value=\"pink\">pink</option>\r\n                        <option value=\"green\">green</option>\r\n                        <option value=\"blue\">blue</option>\r\n                    </select>\r\n                    font Weight :\r\n                    <select id=\"textColors\" onChange={e => this.domChangeHandler(\"fontWeight\", e.target.value)}>\r\n                        <option value=\"normal\">normal</option>\r\n                        <option value=\"bold\">bold</option>\r\n                        <option value=\"italic\">italic</option>\r\n\r\n                    </select>\r\n\r\n                    Logo Rotation <input type=\"range\" name=\"logoRotate\" min={0} max={360}\r\n                        onChange={e => this.domChangeHandler(\"logoRotate\", e.target.value)} />\r\n\r\n                    Opacity : <input type=\"range\" name=\"points\" min=\"1\" max=\"9\"\r\n                        onChange={e => this.domChangeHandler(\"opacity\", e.target.value)} />\r\n                    Size : <input type=\"range\" name=\"points\" min=\"5\" max=\"100\"\r\n                        onChange={e => this.domChangeHandler(\"textRange\", e.target.value)} />\r\n                    <br />\r\n\r\n\r\n                    {/* logoRotate <input type=\"number\" onChange={ (e) => this.setState({ textRotatation : parseInt(e.target.value, 10)})} />  */}\r\n\r\n\r\n\r\n                </div>\r\n\r\n                <span>\r\n\r\n                    <button onClick={() => this.checkImg()}> check Img</button>\r\n                    <button onClick={() => this.addTextWatermark()} > Add Text</button>\r\n                    <button onClick={() => this.removeDomElement()} >Remove Ele</button>\r\n                    <button onClick={() => this.checkVideoWatermark()} >Check Video</button> \r\n\r\n                    {/* Cover Filters <select id=\"filterCover\"\r\n                        onChange={e => this.domCoverChangeHandler(\"filterCover\", e.target.value)}>\r\n                        <option value=\"normal\">normal</option>\r\n\r\n                        <option value=\"grayscale\">grayscale</option>\r\n\r\n                        <option value=\"invert\">invert</option>\r\n                        <option value=\"contrast\">contrast</option>\r\n\r\n                        <option value=\"blur\">blur</option>\r\n                        <option value=\"brightness\">brightness</option>\r\n                        <option value=\"hue-rotate\">hue-rotate</option>\r\n                        <option value=\"opacity\">opacity</option>\r\n                        <option value=\"saturate\">saturate</option>\r\n                        <option value=\"sepia\">sepia</option>\r\n\r\n                    </select> */}\r\n\r\n                </span>\r\n                <hr />\r\n\r\n                <div className=\"watermark-playground\">\r\n\r\n                    <div className=\"editor-console\"\r\n                        id=\"cover\"\r\n                        style={editorConsole}\r\n                    >\r\n\r\n                        {this.videoDomElement()}\r\n\r\n                        {this.state.cropImg ? <ReactCrop\r\n                            src={this.state.file}\r\n                            crop={this.state.crop}\r\n                            ruleOfThirds\r\n                            onImageLoaded={this.onImageLoaded}\r\n                            onComplete={this.onCropComplete}\r\n                            onChange={this.onCropChange}\r\n                        /> : null}\r\n\r\n                       \r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n                <br />\r\n                <hr />\r\n                <button onClick={() => this.setState({ cropImg: true })} >Crop Img</button>\r\n                    <button onClick={() => this.cropImageReturnHandler()} >save Crop Img</button>\r\n\r\n                    <button onClick={() => this.coverVideoController(\"play\")} >play cover vid </button>\r\n                    <button onClick={() => this.coverVideoController(\"pause\")} >stop cover vid</button>\r\n                    \r\n\r\n\r\n                Cover Rotate <select id=\"flipCover\"\r\n                        onChange={e => this.domCoverChangeHandler(\"rotateCover\", e.target.value)}>\r\n                        \r\n                        <option value=\"0\" >none</option>\r\n                        <option value=\"90\">90</option>\r\n                        <option value=\"180\">180</option>\r\n                        <option value=\"270\">270</option>\r\n                        <option value=\"360\">360</option>\r\n\r\n                    </select>\r\n\r\n                    Cover Flip <select id=\"flipCover\"\r\n                        onChange={e => this.domCoverChangeHandler(\"flipCover\", e.target.value)}>\r\n                        <option value=\"flipx\">flipx</option>\r\n                        <option value=\"flipxReset\">flipx Reset</option>\r\n                        <option value=\"flipy\">flipy</option>\r\n                        <option value=\"flipyReset\">flipy Reset</option>\r\n\r\n                    </select>\r\n\r\n                <FilterSamples \r\n                   filterEffect={ ( filterType , value ) => this.domCoverChangeHandler( filterType , value)}/>\r\n                <br />\r\n\r\n                            <hr />\r\n\r\n\r\n                         \r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WatermarkPosition;"]},"metadata":{},"sourceType":"module"}