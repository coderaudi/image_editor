{"ast":null,"code":"var _jsxFileName = \"C:\\\\audi_\\\\ESPL_projects\\\\facebook\\\\src\\\\components\\\\watermarks\\\\updatedEditor.js\";\nimport React, { Component } from 'react';\nimport \"./index.css\";\n\nconst interact = require('interactjs');\n\nclass WatermarkPosition extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      if (event.target.files[0]) {\n        this.setState({\n          file: URL.createObjectURL(event.target.files[0]),\n          originalFile: event.target.files[0]\n        });\n      }\n    };\n\n    this.handleLogoFile = event => {\n      if (event.target.files[0]) {\n        let oldList = this.state.logoWatermarkList;\n        oldList.push(event.target.files[0]);\n        this.setState({\n          logoWatermarkList: oldList\n        });\n      }\n    };\n\n    this.removeDomElement = e => {\n      let id = this.state.currentEementId;\n      if (id) document.getElementById(id).remove();\n    };\n\n    this.handleChangeText = e => {\n      this.setState({\n        watermarkText: e.target.value\n      });\n    };\n\n    this.domChangeHandler = (changeParameter, value) => {\n      // update the element \n      let modifingElement = this.state.currentEementId;\n      console.log(\"changing element \", modifingElement);\n      let ele = document.getElementById(modifingElement);\n      console.log(document.getElementById(modifingElement).childNodes[0].innerText);\n\n      if (changeParameter === \"color\") {\n        ele.style.color = value ? value : \"black\";\n      }\n\n      if (changeParameter === \"logoRotate\") {\n        if (modifingElement.includes(\"logo\")) {\n          ele.childNodes[0].style.transform = `rotate(${value}deg)`; // only logo rotation\n        }\n      }\n\n      if (changeParameter === \"opacity\") {\n        ele.style.opacity = value ? `0.${value}` : \"0.9\";\n      }\n\n      if (changeParameter === \"textRange\") {\n        if (modifingElement.includes(\"logo\")) {\n          ele.children[0].width = value;\n          ele.children[0].height = value;\n        } else {\n          console.log(value);\n          ele.style.fontSize = `${value}px`;\n        }\n      }\n\n      if (changeParameter === \"watermarkText\") {\n        if (value) {\n          document.getElementById(modifingElement).childNodes[0].innerText = value;\n        } else {\n          document.getElementById(modifingElement).childNodes[0].innerText = \"Click To Edit\";\n        }\n      }\n    };\n\n    this.finalLogoXY = (aspRatiobyW, aspRatiobyH) => {\n      let vm = this;\n      let finalLogoWatermarkList = [];\n\n      for (let index = 0; index < vm.logoWatermarkCount; index++) {\n        let watermarkLogo = document.getElementById(`logo-watermark-${index}`);\n\n        if (watermarkLogo) {\n          let wmLogoImgcurrWidth = watermarkLogo.clientWidth;\n          let wmLogoImgcurrHeight = watermarkLogo.clientHeight - 4;\n          let xyMovesLogo = this.objectMoment(watermarkLogo.style.transform);\n          let rotationAngle = parseInt(watermarkLogo.childNodes[0].style.transform.replace(/\\D/g, \"\"), 10); //  console.log(\"LLL chck\", watermarkLogo, rotationAngle);\n          // xy on original img \n\n          let finalX = aspRatiobyW * xyMovesLogo.xMove;\n          let finalY = aspRatiobyH * xyMovesLogo.yMove; // final height and with of logo img and opacity\n\n          let fW = wmLogoImgcurrWidth * aspRatiobyW;\n          let fH = wmLogoImgcurrHeight * aspRatiobyH;\n          let opacity = watermarkLogo.style.opacity;\n          finalLogoWatermarkList.push({\n            finalX,\n            finalY,\n            fW,\n            fH,\n            opacity,\n            rotationAngle: rotationAngle ? rotationAngle : 0\n          });\n        }\n      }\n\n      return finalLogoWatermarkList;\n    };\n\n    this.finalTextXY = (aspRatiobyW, aspRatiobyH, basicData) => {\n      let vm = this;\n      let finalTextWatermarkList = [];\n\n      for (let index = 0; index < vm.textWatermarkCount; index++) {\n        let textElement = document.getElementById(`txt-watermark-${index}`);\n\n        if (textElement) {\n          console.log(textElement);\n          let watermarkObj = {\n            fontSize: parseInt(textElement.style.fontSize, 10),\n            watermarkID: textElement.id,\n            opacity: textElement.style.opacity,\n            fontFamily: textElement.style.fontFamily,\n            position: \"absolute\",\n            // keep same for all\n            color: textElement.style.color,\n            watermarkText: textElement.childNodes[0].innerText,\n            textRotatation: 0 // transformOrigin: \"0 0\"\n\n          }; //let waterMarkText = document.getElementById(txtObj.watermarkID);\n\n          let xyMovesText = this.objectMoment(textElement.style.transform);\n          let finalTextX = aspRatiobyW * xyMovesText.xMove;\n          let finalTextY = aspRatiobyH * xyMovesText.yMove + 0.018 * basicData.perviewCoverH; // 0.018 y move per 1px \n\n          let textFper = watermarkObj.fontSize / basicData.previewCoverW * 100;\n          let finalTextF = textFper * basicData.originalCoverW / 100;\n          let textFontName = \"cour\"; //\n\n          finalTextWatermarkList.push({\n            finalTextX,\n            finalTextY,\n            finalTextF,\n            textFontName,\n            opacity: watermarkObj.opacity,\n            color: watermarkObj.color,\n            watermarkText: watermarkObj.watermarkText\n          });\n        }\n      }\n\n      console.log(finalTextWatermarkList);\n      return finalTextWatermarkList;\n    };\n\n    this.objectMoment = xyMove => {\n      if (xyMove) {\n        let movement = xyMove.split(\",\");\n        let positiveX = !movement[0].includes(\"-\");\n        let positiveY = !movement[1].includes(\"-\");\n        let xMove = parseInt(movement[0].replace(/\\D/g, \"\"), 10);\n        xMove = positiveX ? xMove * 1 : xMove * -1;\n        let yMove = parseInt(movement[1].replace(/\\D/g, \"\"), 10);\n        yMove = positiveY ? yMove * 1 : yMove * -1;\n        return {\n          xMove,\n          yMove\n        };\n      }\n    };\n\n    this.checkImg = () => {\n      console.log(\"final State\", this.state); // original img height and width\n      // let originalCoverW = 1000; \n      // let originalCoverH = 750;\n\n      let originalCoverW = this.state.actualImgWidth;\n      let originalCoverH = this.state.actualImgHeight; // bg img wh  --> preivew img height widht \n\n      let cover = document.querySelector(\"#cover\");\n      let previewCoverW = cover.clientWidth;\n      let perviewCoverH = cover.clientHeight;\n      let basicData = {\n        originalCoverW,\n        originalCoverH,\n        previewCoverW,\n        perviewCoverH\n      };\n      console.log(\"details- \", basicData); // for watermark text \n      // distance  x y \n\n      let aspRatiobyW = originalCoverW / previewCoverW; // by width \n\n      let aspRatiobyH = originalCoverH / perviewCoverH; // by h\n\n      let resList = this.finalTextXY(aspRatiobyW, aspRatiobyH, basicData);\n      let resLogoList = this.finalLogoXY(aspRatiobyW, aspRatiobyH, basicData);\n      console.log(resList, resLogoList); //  let finalText1 = this.finalTextXY(aspRatiobyW, aspRatiobyH, txtWatermarkObj1, basicData);\n\n      let finalText = resList[0]; // text 1 watermark\n\n      let finalText1 = resList[1]; // text 2 watermark\n\n      let finalLogo1 = resLogoList[0]; // logo 1 watermark\n\n      if (finalLogo1) {\n        let fW = finalLogo1.fW;\n        let fH = finalLogo1.fH;\n        let finalX = finalLogo1.finalX;\n        let finalY = finalLogo1.finalY;\n        let finalLogoOpacity = finalLogo1.opacity;\n        let logoRotatation = finalLogo1.rotationAngle; // let finalTextX = aspRatiobyW * xyMovesText.xMove;\n        // let finalTextY = aspRatiobyH * xyMovesText.yMove + (0.018 * perviewCoverH); // 0.018 y move per 1px \n        // let textFper = (this.state.fontSize / previewCoverW) * 100;\n        // let finalTextF = (textFper * originalCoverW) / 100;\n        // finalTextX,finalTextY,finalTextF\n        // let url = `ffmpeg -i gridOrg.jpg -i box.jpg -filter_complex \"[1]scale=${fW}:${fH}[a];[a]lut=a=val*0.9[b];[0][b] overlay=${finalX}:${finalY}\" -y watermarkLogo.jpg`\n        //let txtUrl = `ffmpeg -i gridOrg1.jpg -filter_complex \"[0]drawtext=fontfile=cour.ttf:text='${this.state.watermarkText}':fontcolor=${this.state.fontColor}:fontsize=${finalTextF}:x=${finalTextX}:y=${finalTextY}\" -y restextWatermark.jpg`\n        // console.log(txtUrl);\n        // let logoRotation = `ffmpeg -i gridOrg.jpg -i logoA.png -filter_complex \"[1]scale=${fW}:${fH}[a];[a]rotate='${this.state.logoRoatation}*PI/180:ow=hypot(iw,ih):oh=ow:c=none'[a];[0][a]overlay=${finalX}:${finalY}\" -y testRotation.jpg`\n        // let urlTextLogo = `ffmpeg -i gridOrg.jpg -i ${this.state.logoOriginalFile.name} -filter_complex \"[1]scale=${fW}:${fH}[t],[t]lut=a=val*0.${this.state.logoOpacity}[t],[t]rotate=${this.state.logoRoatation}*PI/180[t],[0][t]overlay=${finalX}:${finalY}[i1];[i1]drawtext=fontfile='${finalText.textFontName}.ttf': text='${finalText.watermarkText}':fontcolor=${finalText.color}@0.${finalText.opacity}:fontsize=${finalText.finalTextF}:x=${finalText.finalTextX}:y=${finalText.finalTextY}\" -y res_logoText.jpg`;\n        // console.log(urlTextLogo);\n        // let multiLoogSinglelogUrl = `ffmpeg -i gridOrg.jpg  -i ${this.state.logoOriginalFile.name} -i ${this.state.logoOriginalFile.name} -filter_complex \"[1]scale=${fW}:${fH}[t],[t]lut=a=val*0.${this.state.logoOpacity}[t],\n        // [t]rotate=${this.state.logoRoatation}*PI/180[t],[0][t]overlay=${finalX}:${finalY}[i1];\n        //  [2]scale=${fW}:${fH}[t],[t]lut=a=val*0.${this.state.logoOpacity}[t],[t]rotate=${this.state.logoRoatation}*PI/180[t],[i1][t]overlay=${finalX + 200}:${finalY}[i2];\n        //  [i2]drawtext=fontfile=cour.ttf: text='India':fontcolor=red@0.8:fontsize=20:x=300:y=20\" -preset ultrafast -y multiLogo.jpg\n        // `\n        // (finalText , finalText1);\n\n        let multiTextsingeLogo = `ffmpeg -i gridOrg.jpg -i logoA.png\n         -filter_complex \"[1]scale=${fW}:${fH}[t],[t]lut=a=val*${finalLogoOpacity}[t],[t]rotate=${logoRotatation}*PI/180[t],[0][t]overlay=${finalX}:${finalY}[i1];\n        [i1]drawtext=fontfile=${finalText.textFontName}.ttf: text='${finalText.watermarkText}':fontcolor=${finalText.color}@${finalText.opacity}:fontsize=${finalText.finalTextF}:x=${finalText.finalTextX}:y=${finalText.finalTextY}[i2];\n        [i2]drawtext=fontfile=${finalText1.textFontName}.ttf: text='${finalText1.watermarkText}':fontcolor=${finalText1.color}@${finalText1.opacity}:fontsize=${finalText1.finalTextF}:x=${finalText1.finalTextX}:y=${finalText1.finalTextY}\" -preset ultrafast -y res_multy_text.jpg`;\n        console.log(multiTextsingeLogo);\n      }\n    };\n\n    this.addLogoWatermark = () => {\n      let vm = this;\n      let logoList = vm.state.logoWatermarkList;\n      let lastIndex = logoList.length - 1; // let logoStyle = {\n      //     width: this.state.logoSize,\n      //     opacity: `0.${this.state.logoOpacity}`,\n      //     transform: `rotate(${this.state.logoRoatation}deg)`\n      // }\n\n      if (logoList[lastIndex]) {\n        let logoPreviewUrl = URL.createObjectURL(logoList[lastIndex]); // URL.createObjectURL(\n        // <div className=\"draggable-logo\"\n        // id=\"watermarkLogo\"\n        // style={{ position: \"absolute\" }} >\n        // <img src={this.state.logoFile}\n        //     id=\"watermarkLogoImg\"\n        //     style={logoStyle}\n        //     className=\"resizable-logo\"\n        //     />\n        // </div>\n        //     let vm = this;\n\n        let defaultLogo = {\n          watermarkID: `logo-watermark-${vm.logoWatermarkCount}`,\n          opacity: 9,\n          position: \"absolute\",\n          // keep same for all\n          logoRotatation: 0\n        };\n        let logoOne = defaultLogo;\n        let logoStyle = `opacity:0.${logoOne.opacity};  position: absolute; `;\n        let newLogoWatermark = document.createElement('div'); // is a node\n\n        newLogoWatermark.setAttribute(\"class\", \"draggable-logo\");\n        newLogoWatermark.setAttribute(\"style\", logoStyle);\n        newLogoWatermark.setAttribute(\"id\", `${logoOne.watermarkID}`);\n        let subImgDiv = document.createElement('IMG');\n        subImgDiv.setAttribute(\"src\", logoPreviewUrl);\n        subImgDiv.setAttribute(\"width\", \"80\");\n        subImgDiv.setAttribute(\"height\", \"80\");\n        subImgDiv.setAttribute(\"alt\", `img-${logoOne.watermarkID}`); //     subImgDiv.setAttribute(\"style\", `transform : rotate(${logoOne.logoRotatation}deg)`);\n        //     // subImgDiv.innerHTML = `${logoOne.watermarkText}`;\n\n        newLogoWatermark.appendChild(subImgDiv);\n        console.log(newLogoWatermark);\n\n        newLogoWatermark.onclick = function () {\n          vm.setState({\n            currentEementId: `${logoOne.watermarkID}`\n          });\n          console.log(\"ele changed \", newLogoWatermark, vm.state);\n        }; //     // add to dom \n\n\n        document.getElementById(\"cover\").prepend(newLogoWatermark);\n        vm.logoWatermarkCount++;\n        console.log(\"img added\");\n      }\n    };\n\n    this.addTextWatermark = () => {\n      let vm = this;\n      let defaultText = {\n        fontSize: 20,\n        watermarkID: `txt-watermark-${vm.textWatermarkCount}`,\n        opacity: 9,\n        fontFamily: \"Courier New\",\n        position: \"absolute\",\n        // keep same for all\n        color: \"red\",\n        watermarkText: \"New Watermark\",\n        textRotatation: 0\n      };\n\n      if (vm.state.logoWatermarkList.length > 0) {\n        let textOne = defaultText;\n        let textOneStyle = `font-size: ${textOne.fontSize}px; opacity:0.${textOne.opacity}; font-family: ${textOne.fontFamily}; position: absolute; color:${textOne.color}`;\n        let newTextWatermark = document.createElement('div'); // is a node\n\n        newTextWatermark.setAttribute(\"class\", \"draggable-text\");\n        newTextWatermark.setAttribute(\"style\", textOneStyle);\n        newTextWatermark.setAttribute(\"id\", `${textOne.watermarkID}`);\n        console.log(newTextWatermark);\n        let subTextdiv = document.createElement('div');\n        subTextdiv.setAttribute(\"style\", `transform : rotate(${textOne.textRotatation}deg)`);\n        subTextdiv.innerHTML = `${textOne.watermarkText}`;\n        newTextWatermark.appendChild(subTextdiv);\n\n        newTextWatermark.onclick = function () {\n          vm.setState({\n            currentEementId: `${textOne.watermarkID}`\n          });\n          console.log(\"ele changed \", newTextWatermark, vm.state);\n        }; // add to dom \n\n\n        document.getElementById(\"cover\").appendChild(newTextWatermark);\n        vm.textWatermarkCount++;\n      }\n    };\n\n    this.state = {\n      currentEementId: null,\n      logoWatermarkList: [],\n      fontSize: 20,\n      fontColor: \"red\",\n      rotate: 20,\n      textRotatation: 45,\n      logoRoatation: 180,\n      opacity: 9,\n      logoOpacity: 9,\n      logoSize: 80,\n      watermarkText: \"© free style\",\n      BackgroundImgUrl: \"\",\n      file: \"\",\n      logoFile: \"\",\n      logoOriginalFile: null,\n      originalFile: null,\n      // image parameters\n      actualImgWidth: 1000,\n      actualImgHeight: 750\n    };\n    this.textRotationAngle = 10;\n    this.textWatermarkCount = 0;\n    this.logoWatermarkCount = 0;\n  }\n\n  componentDidMount() {\n    let vm = this; // drag the element on page \n\n    const position = {\n      x: 0,\n      y: 0\n    };\n    interact('.draggable-logo').draggable({\n      listeners: {\n        start(event) {// console.log(event.type, event.target)\n        },\n\n        move(event) {\n          position.x += event.dx;\n          position.y += event.dy;\n          event.target.style.transform = `translate(${position.x}px, ${position.y}px)`;\n          console.log(event.type, event.target);\n        }\n\n      }\n    }); // resize the element \n\n    interact(\".resizable-logo\").resizable({\n      edges: {\n        left: false,\n        right: false,\n        bottom: false,\n        top: false\n      },\n      // modifiers: [\n      //   interact.modifiers.restrictEdges({\n      //     outer: \"parent\",\n      //     endOnly: true\n      //   })\n      // ],\n      inertia: true,\n      modifiers: [// keep the edges inside the parent\n      // interact.modifiers.restrictEdges({\n      //   outer: 'parent'\n      // }),\n      // minimum size\n      interact.modifiers.restrictSize({\n        min: {\n          width: 20,\n          height: 20\n        }\n      })]\n    }).on(\"resizemove\", function (event) {\n      var target = event.target;\n      console.log(target);\n      target.style.width = event.rect.width + \"px\";\n      target.style.height = event.rect.height + \"px\";\n    }); // text drag(move)\n\n    interact('.draggable-text').draggable({\n      listeners: {\n        start(event) {},\n\n        move(event) {\n          position.x += event.dx;\n          position.y += event.dy;\n          console.log(event.target.style.transform);\n          event.target.style.transform = `translate(${position.x}px, ${position.y}px)`;\n        }\n\n      }\n    }); // resize the element \n    // interact(\".resizable-text\")\n    // .resizable({\n    //         edges: { left: false, right: true, bottom: true, top: false },\n    //         // modifiers: [\n    //         //   interact.modifiers.restrictEdges({\n    //         //     outer: \"parent\",\n    //         //     endOnly: true\n    //         //   })\n    //         // ],\n    //         inertia: true\n    //     })\n    //     .on(\"resizemove\", function(event) {\n    //         var target = event.target\n    //         console.log(event);\n    //         target.style.width = event.rect.width + \"px\"\n    //         target.style.height = event.rect.height + \"px\"\n    //     })\n  }\n\n  render() {\n    let editorConsole = {\n      position: \"relative\",\n      backgroundImage: `url(${this.state.file})`,\n      width: \"500px\",\n      height: \"375px\"\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556\n      },\n      __self: this\n    }, \"User Inputs\"), \"cover: \", React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557\n      },\n      __self: this\n    }), \"logo : \", React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleLogoFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => {\n        this.addLogoWatermark();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559\n      },\n      __self: this\n    }, \"Add Logo\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561\n      },\n      __self: this\n    }), \"text Editor : text : \", React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.domChangeHandler(\"watermarkText\", e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      id: \"textColors\",\n      onChange: e => this.domChangeHandler(\"color\", e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566\n      },\n      __self: this\n    }, \"red\"), React.createElement(\"option\", {\n      value: \"yellow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567\n      },\n      __self: this\n    }, \"yellow\"), React.createElement(\"option\", {\n      value: \"pink\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568\n      },\n      __self: this\n    }, \"pink\"), React.createElement(\"option\", {\n      value: \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569\n      },\n      __self: this\n    }, \"green\"), React.createElement(\"option\", {\n      value: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570\n      },\n      __self: this\n    }, \"blue\")), React.createElement(\"select\", {\n      id: \"logoRotate\",\n      onChange: e => this.domChangeHandler(\"logoRotate\", e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574\n      },\n      __self: this\n    }, \"0\"), React.createElement(\"option\", {\n      value: 90,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575\n      },\n      __self: this\n    }, \"90\"), React.createElement(\"option\", {\n      value: 180,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576\n      },\n      __self: this\n    }, \"180\"), React.createElement(\"option\", {\n      value: 270,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577\n      },\n      __self: this\n    }, \"270\")), \"Opacity : \", React.createElement(\"input\", {\n      type: \"range\",\n      name: \"points\",\n      min: \"1\",\n      max: \"9\",\n      onChange: e => this.domChangeHandler(\"opacity\", e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580\n      },\n      __self: this\n    }), \"Size : \", React.createElement(\"input\", {\n      type: \"range\",\n      name: \"points\",\n      min: \"5\",\n      max: \"100\",\n      onChange: e => this.domChangeHandler(\"textRange\", e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.checkImg(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595\n      },\n      __self: this\n    }, \" check Img\"), React.createElement(\"button\", {\n      onClick: () => this.addTextWatermark(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596\n      },\n      __self: this\n    }, \" Add Text\"), React.createElement(\"button\", {\n      onClick: () => this.removeDomElement(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597\n      },\n      __self: this\n    }, \"Remove Ele\")), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"watermark-playground\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"editor-console\",\n      id: \"cover\",\n      style: editorConsole,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default WatermarkPosition;","map":{"version":3,"sources":["C:/audi_/ESPL_projects/facebook/src/components/watermarks/updatedEditor.js"],"names":["React","Component","interact","require","WatermarkPosition","constructor","props","handleChange","event","target","files","setState","file","URL","createObjectURL","originalFile","handleLogoFile","oldList","state","logoWatermarkList","push","removeDomElement","e","id","currentEementId","document","getElementById","remove","handleChangeText","watermarkText","value","domChangeHandler","changeParameter","modifingElement","console","log","ele","childNodes","innerText","style","color","includes","transform","opacity","children","width","height","fontSize","finalLogoXY","aspRatiobyW","aspRatiobyH","vm","finalLogoWatermarkList","index","logoWatermarkCount","watermarkLogo","wmLogoImgcurrWidth","clientWidth","wmLogoImgcurrHeight","clientHeight","xyMovesLogo","objectMoment","rotationAngle","parseInt","replace","finalX","xMove","finalY","yMove","fW","fH","finalTextXY","basicData","finalTextWatermarkList","textWatermarkCount","textElement","watermarkObj","watermarkID","fontFamily","position","textRotatation","xyMovesText","finalTextX","finalTextY","perviewCoverH","textFper","previewCoverW","finalTextF","originalCoverW","textFontName","xyMove","movement","split","positiveX","positiveY","checkImg","actualImgWidth","originalCoverH","actualImgHeight","cover","querySelector","resList","resLogoList","finalText","finalText1","finalLogo1","finalLogoOpacity","logoRotatation","multiTextsingeLogo","addLogoWatermark","logoList","lastIndex","length","logoPreviewUrl","defaultLogo","logoOne","logoStyle","newLogoWatermark","createElement","setAttribute","subImgDiv","appendChild","onclick","prepend","addTextWatermark","defaultText","textOne","textOneStyle","newTextWatermark","subTextdiv","innerHTML","fontColor","rotate","logoRoatation","logoOpacity","logoSize","BackgroundImgUrl","logoFile","logoOriginalFile","textRotationAngle","componentDidMount","x","y","draggable","listeners","start","move","dx","dy","type","resizable","edges","left","right","bottom","top","inertia","modifiers","restrictSize","min","on","rect","render","editorConsole","backgroundImage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport \"./index.css\";\r\nconst interact = require('interactjs')\r\n\r\n\r\nclass WatermarkPosition extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentEementId: null,\r\n            logoWatermarkList: [],\r\n            fontSize: 20,\r\n            fontColor: \"red\",\r\n            rotate: 20,\r\n            textRotatation: 45,\r\n            logoRoatation: 180,\r\n            opacity: 9,\r\n            logoOpacity: 9,\r\n            logoSize: 80,\r\n            watermarkText: \"© free style\",\r\n            BackgroundImgUrl: \"\",\r\n            file: \"\",\r\n            logoFile: \"\",\r\n\r\n            logoOriginalFile: null,\r\n            originalFile: null,\r\n\r\n            // image parameters\r\n            actualImgWidth: 1000,\r\n            actualImgHeight: 750\r\n        }\r\n\r\n        this.textRotationAngle = 10;\r\n        this.textWatermarkCount = 0;\r\n        this.logoWatermarkCount = 0;\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        let vm = this;\r\n\r\n        // drag the element on page \r\n        const position = { x: 0, y: 0 }\r\n        interact('.draggable-logo').draggable({\r\n            listeners: {\r\n                start(event) {\r\n                    // console.log(event.type, event.target)\r\n                },\r\n                move(event) {\r\n                    position.x += event.dx\r\n                    position.y += event.dy\r\n\r\n                    event.target.style.transform =\r\n                        `translate(${position.x}px, ${position.y}px)`\r\n\r\n                    console.log(event.type, event.target)\r\n                },\r\n\r\n            }\r\n        })\r\n\r\n        // resize the element \r\n        interact(\".resizable-logo\")\r\n            .resizable({\r\n                edges: { left: false, right: false, bottom: false, top: false },\r\n                // modifiers: [\r\n                //   interact.modifiers.restrictEdges({\r\n                //     outer: \"parent\",\r\n                //     endOnly: true\r\n                //   })\r\n                // ],\r\n                inertia: true,\r\n                modifiers: [\r\n                    // keep the edges inside the parent\r\n                    // interact.modifiers.restrictEdges({\r\n                    //   outer: 'parent'\r\n                    // }),\r\n\r\n                    // minimum size\r\n                    interact.modifiers.restrictSize({\r\n                        min: { width: 20, height: 20 }\r\n                    })\r\n                ],\r\n            })\r\n            .on(\"resizemove\", function (event) {\r\n                var target = event.target\r\n                console.log(target);\r\n                target.style.width = event.rect.width + \"px\"\r\n                target.style.height = event.rect.height + \"px\"\r\n            })\r\n\r\n\r\n        // text drag(move)\r\n        interact('.draggable-text').draggable({\r\n            listeners: {\r\n                start(event) {\r\n                },\r\n                move(event) {\r\n                    position.x += event.dx\r\n                    position.y += event.dy\r\n                    console.log(event.target.style.transform);\r\n                    event.target.style.transform =\r\n                        `translate(${position.x}px, ${position.y}px)`\r\n                },\r\n\r\n            }\r\n        })\r\n\r\n        // resize the element \r\n        // interact(\".resizable-text\")\r\n        // .resizable({\r\n        //         edges: { left: false, right: true, bottom: true, top: false },\r\n        //         // modifiers: [\r\n        //         //   interact.modifiers.restrictEdges({\r\n        //         //     outer: \"parent\",\r\n        //         //     endOnly: true\r\n        //         //   })\r\n        //         // ],\r\n        //         inertia: true\r\n        //     })\r\n        //     .on(\"resizemove\", function(event) {\r\n        //         var target = event.target\r\n        //         console.log(event);\r\n        //         target.style.width = event.rect.width + \"px\"\r\n        //         target.style.height = event.rect.height + \"px\"\r\n        //     })\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    handleChange = (event) => {\r\n\r\n        if (event.target.files[0]) {\r\n            this.setState({\r\n                file: URL.createObjectURL(event.target.files[0]),\r\n                originalFile: event.target.files[0]\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    handleLogoFile = (event) => {\r\n        if (event.target.files[0]) {\r\n            let oldList = this.state.logoWatermarkList\r\n            oldList.push(event.target.files[0]);\r\n            this.setState({\r\n                logoWatermarkList: oldList\r\n            })\r\n        }\r\n    }\r\n\r\n    removeDomElement = (e) => {\r\n\r\n       let id = this.state.currentEementId;\r\n\r\n     \r\n       if(id) document.getElementById(id).remove();\r\n    }\r\n\r\n    \r\n\r\n    handleChangeText = (e) => {\r\n        this.setState(\r\n            { watermarkText: e.target.value }\r\n        )\r\n    }\r\n\r\n\r\n    domChangeHandler = (changeParameter, value) => {\r\n\r\n        // update the element \r\n\r\n        let modifingElement = this.state.currentEementId;\r\n        console.log(\"changing element \", modifingElement)\r\n        let ele = document.getElementById(modifingElement);\r\n        console.log(document.getElementById(modifingElement).childNodes[0].innerText);\r\n\r\n        if (changeParameter === \"color\") {\r\n            ele.style.color = value ? value : \"black\";\r\n        }\r\n\r\n        if (changeParameter === \"logoRotate\") {\r\n\r\n            if (modifingElement.includes(\"logo\")) {\r\n                ele.childNodes[0].style.transform = `rotate(${value}deg)` // only logo rotation\r\n            }\r\n        }\r\n\r\n\r\n        if (changeParameter === \"opacity\") {\r\n            ele.style.opacity = value ? `0.${value}` : \"0.9\";\r\n        }\r\n\r\n        if (changeParameter === \"textRange\") {\r\n\r\n            if (modifingElement.includes(\"logo\")) {\r\n                ele.children[0].width = value;\r\n                ele.children[0].height = value;\r\n            } else {\r\n                console.log(value);\r\n                ele.style.fontSize = `${value}px`;\r\n            }\r\n        }\r\n\r\n        if (changeParameter === \"watermarkText\") {\r\n            if (value) {\r\n                document.getElementById(modifingElement).childNodes[0].innerText = value\r\n            } else {\r\n                document.getElementById(modifingElement).childNodes[0].innerText = \"Click To Edit\"\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    finalLogoXY = (aspRatiobyW, aspRatiobyH) => {\r\n        let vm = this;\r\n        let finalLogoWatermarkList = [];\r\n        for (let index = 0; index < vm.logoWatermarkCount; index++) {\r\n\r\n            let watermarkLogo = document.getElementById(`logo-watermark-${index}`);\r\n\r\n            if (watermarkLogo) {\r\n\r\n                let wmLogoImgcurrWidth = watermarkLogo.clientWidth;\r\n                let wmLogoImgcurrHeight = watermarkLogo.clientHeight - 4;\r\n\r\n                let xyMovesLogo = this.objectMoment(watermarkLogo.style.transform);\r\n\r\n                let rotationAngle = parseInt(watermarkLogo.childNodes[0].style.transform.replace(/\\D/g, \"\"), 10);\r\n                //  console.log(\"LLL chck\", watermarkLogo, rotationAngle);\r\n                // xy on original img \r\n                let finalX = aspRatiobyW * xyMovesLogo.xMove;\r\n                let finalY = aspRatiobyH * xyMovesLogo.yMove;\r\n\r\n                // final height and with of logo img and opacity\r\n                let fW = wmLogoImgcurrWidth * aspRatiobyW;\r\n                let fH = wmLogoImgcurrHeight * aspRatiobyH;\r\n                let opacity = watermarkLogo.style.opacity;\r\n\r\n                finalLogoWatermarkList.push({\r\n                    finalX, finalY, fW, fH, opacity,\r\n                    rotationAngle: rotationAngle ? rotationAngle : 0\r\n                })\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return finalLogoWatermarkList;\r\n\r\n\r\n    }\r\n\r\n\r\n    finalTextXY = (aspRatiobyW, aspRatiobyH, basicData) => {\r\n\r\n        let vm = this;\r\n        let finalTextWatermarkList = [];\r\n\r\n        for (let index = 0; index < vm.textWatermarkCount; index++) {\r\n\r\n            let textElement = document.getElementById(`txt-watermark-${index}`);\r\n            if (textElement) {\r\n                console.log(textElement);\r\n\r\n                let watermarkObj = {\r\n                    fontSize: parseInt(textElement.style.fontSize, 10),\r\n                    watermarkID: textElement.id,\r\n                    opacity: textElement.style.opacity,\r\n                    fontFamily: textElement.style.fontFamily,\r\n                    position: \"absolute\",  // keep same for all\r\n                    color: textElement.style.color,\r\n                    watermarkText: textElement.childNodes[0].innerText,\r\n                    textRotatation: 0\r\n                    // transformOrigin: \"0 0\"\r\n                }\r\n\r\n                //let waterMarkText = document.getElementById(txtObj.watermarkID);\r\n                let xyMovesText = this.objectMoment(textElement.style.transform);\r\n                let finalTextX = aspRatiobyW * xyMovesText.xMove;\r\n                let finalTextY = aspRatiobyH * xyMovesText.yMove + (0.018 * basicData.perviewCoverH); // 0.018 y move per 1px \r\n                let textFper = (watermarkObj.fontSize / basicData.previewCoverW) * 100;\r\n                let finalTextF = (textFper * basicData.originalCoverW) / 100;\r\n\r\n                let textFontName = \"cour\";  //\r\n                finalTextWatermarkList.push({\r\n                    finalTextX,\r\n                    finalTextY,\r\n                    finalTextF,\r\n                    textFontName,\r\n                    opacity: watermarkObj.opacity,\r\n                    color: watermarkObj.color,\r\n                    watermarkText: watermarkObj.watermarkText\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        console.log(finalTextWatermarkList);\r\n        return finalTextWatermarkList;\r\n    }\r\n\r\n    objectMoment = (xyMove) => {\r\n        if (xyMove) {\r\n            let movement = xyMove.split(\",\");\r\n            let positiveX = !movement[0].includes(\"-\");\r\n            let positiveY = !movement[1].includes(\"-\");\r\n            let xMove = parseInt(movement[0].replace(/\\D/g, \"\"), 10);\r\n            xMove = positiveX ? xMove * 1 : xMove * -1;\r\n            let yMove = parseInt(movement[1].replace(/\\D/g, \"\"), 10);\r\n            yMove = positiveY ? yMove * 1 : yMove * -1;\r\n\r\n            return {\r\n                xMove,\r\n                yMove\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkImg = () => {\r\n\r\n        console.log(\"final State\", this.state);\r\n\r\n        // original img height and width\r\n        // let originalCoverW = 1000; \r\n        // let originalCoverH = 750;\r\n\r\n        let originalCoverW = this.state.actualImgWidth;\r\n        let originalCoverH = this.state.actualImgHeight;\r\n\r\n        // bg img wh  --> preivew img height widht \r\n        let cover = document.querySelector(\"#cover\");\r\n        let previewCoverW = cover.clientWidth;\r\n        let perviewCoverH = cover.clientHeight;\r\n\r\n\r\n\r\n        let basicData = {\r\n            originalCoverW,\r\n            originalCoverH,\r\n            previewCoverW,\r\n            perviewCoverH\r\n        }\r\n\r\n        console.log(\"details- \", basicData);\r\n        // for watermark text \r\n\r\n\r\n\r\n        // distance  x y \r\n        let aspRatiobyW = originalCoverW / previewCoverW;  // by width \r\n        let aspRatiobyH = originalCoverH / perviewCoverH; // by h\r\n\r\n\r\n\r\n        let resList = this.finalTextXY(aspRatiobyW, aspRatiobyH, basicData);\r\n        let resLogoList = this.finalLogoXY(aspRatiobyW, aspRatiobyH, basicData);\r\n\r\n\r\n        console.log(resList, resLogoList);\r\n\r\n        //  let finalText1 = this.finalTextXY(aspRatiobyW, aspRatiobyH, txtWatermarkObj1, basicData);\r\n\r\n        let finalText = resList[0];  // text 1 watermark\r\n        let finalText1 = resList[1]; // text 2 watermark\r\n        let finalLogo1 = resLogoList[0]; // logo 1 watermark\r\n\r\n        if (finalLogo1) {\r\n\r\n            let fW = finalLogo1.fW;\r\n            let fH = finalLogo1.fH;\r\n            let finalX = finalLogo1.finalX;\r\n            let finalY = finalLogo1.finalY;\r\n            let finalLogoOpacity = finalLogo1.opacity;\r\n            let logoRotatation = finalLogo1.rotationAngle;\r\n\r\n\r\n            // let finalTextX = aspRatiobyW * xyMovesText.xMove;\r\n            // let finalTextY = aspRatiobyH * xyMovesText.yMove + (0.018 * perviewCoverH); // 0.018 y move per 1px \r\n\r\n\r\n            // let textFper = (this.state.fontSize / previewCoverW) * 100;\r\n            // let finalTextF = (textFper * originalCoverW) / 100;\r\n\r\n            // finalTextX,finalTextY,finalTextF\r\n\r\n\r\n            // let url = `ffmpeg -i gridOrg.jpg -i box.jpg -filter_complex \"[1]scale=${fW}:${fH}[a];[a]lut=a=val*0.9[b];[0][b] overlay=${finalX}:${finalY}\" -y watermarkLogo.jpg`\r\n            //let txtUrl = `ffmpeg -i gridOrg1.jpg -filter_complex \"[0]drawtext=fontfile=cour.ttf:text='${this.state.watermarkText}':fontcolor=${this.state.fontColor}:fontsize=${finalTextF}:x=${finalTextX}:y=${finalTextY}\" -y restextWatermark.jpg`\r\n\r\n            // console.log(txtUrl);\r\n\r\n            // let logoRotation = `ffmpeg -i gridOrg.jpg -i logoA.png -filter_complex \"[1]scale=${fW}:${fH}[a];[a]rotate='${this.state.logoRoatation}*PI/180:ow=hypot(iw,ih):oh=ow:c=none'[a];[0][a]overlay=${finalX}:${finalY}\" -y testRotation.jpg`\r\n\r\n            // let urlTextLogo = `ffmpeg -i gridOrg.jpg -i ${this.state.logoOriginalFile.name} -filter_complex \"[1]scale=${fW}:${fH}[t],[t]lut=a=val*0.${this.state.logoOpacity}[t],[t]rotate=${this.state.logoRoatation}*PI/180[t],[0][t]overlay=${finalX}:${finalY}[i1];[i1]drawtext=fontfile='${finalText.textFontName}.ttf': text='${finalText.watermarkText}':fontcolor=${finalText.color}@0.${finalText.opacity}:fontsize=${finalText.finalTextF}:x=${finalText.finalTextX}:y=${finalText.finalTextY}\" -y res_logoText.jpg`;\r\n\r\n            // console.log(urlTextLogo);\r\n\r\n            // let multiLoogSinglelogUrl = `ffmpeg -i gridOrg.jpg  -i ${this.state.logoOriginalFile.name} -i ${this.state.logoOriginalFile.name} -filter_complex \"[1]scale=${fW}:${fH}[t],[t]lut=a=val*0.${this.state.logoOpacity}[t],\r\n            // [t]rotate=${this.state.logoRoatation}*PI/180[t],[0][t]overlay=${finalX}:${finalY}[i1];\r\n            //  [2]scale=${fW}:${fH}[t],[t]lut=a=val*0.${this.state.logoOpacity}[t],[t]rotate=${this.state.logoRoatation}*PI/180[t],[i1][t]overlay=${finalX + 200}:${finalY}[i2];\r\n            //  [i2]drawtext=fontfile=cour.ttf: text='India':fontcolor=red@0.8:fontsize=20:x=300:y=20\" -preset ultrafast -y multiLogo.jpg\r\n            // `\r\n\r\n            // (finalText , finalText1);\r\n            let multiTextsingeLogo = `ffmpeg -i gridOrg.jpg -i logoA.png\r\n         -filter_complex \"[1]scale=${fW}:${fH}[t],[t]lut=a=val*${finalLogoOpacity}[t],[t]rotate=${logoRotatation}*PI/180[t],[0][t]overlay=${finalX}:${finalY}[i1];\r\n        [i1]drawtext=fontfile=${finalText.textFontName}.ttf: text='${finalText.watermarkText}':fontcolor=${finalText.color}@${finalText.opacity}:fontsize=${finalText.finalTextF}:x=${finalText.finalTextX}:y=${finalText.finalTextY}[i2];\r\n        [i2]drawtext=fontfile=${finalText1.textFontName}.ttf: text='${finalText1.watermarkText}':fontcolor=${finalText1.color}@${finalText1.opacity}:fontsize=${finalText1.finalTextF}:x=${finalText1.finalTextX}:y=${finalText1.finalTextY}\" -preset ultrafast -y res_multy_text.jpg`\r\n\r\n            console.log(multiTextsingeLogo);\r\n        }\r\n    }\r\n\r\n\r\n    addLogoWatermark = () => {\r\n\r\n        let vm = this;\r\n        let logoList = vm.state.logoWatermarkList;\r\n        let lastIndex = logoList.length - 1;\r\n\r\n        // let logoStyle = {\r\n        //     width: this.state.logoSize,\r\n        //     opacity: `0.${this.state.logoOpacity}`,\r\n        //     transform: `rotate(${this.state.logoRoatation}deg)`\r\n        // }\r\n\r\n\r\n\r\n        if (logoList[lastIndex]) {\r\n\r\n            let logoPreviewUrl = URL.createObjectURL(logoList[lastIndex]);\r\n            // URL.createObjectURL(\r\n\r\n            // <div className=\"draggable-logo\"\r\n            // id=\"watermarkLogo\"\r\n            // style={{ position: \"absolute\" }} >\r\n            // <img src={this.state.logoFile}\r\n            //     id=\"watermarkLogoImg\"\r\n            //     style={logoStyle}\r\n\r\n            //     className=\"resizable-logo\"\r\n            //     />\r\n            // </div>\r\n\r\n\r\n\r\n            //     let vm = this;\r\n            let defaultLogo = {\r\n                watermarkID: `logo-watermark-${vm.logoWatermarkCount}`,\r\n                opacity: 9,\r\n                position: \"absolute\",  // keep same for all\r\n                logoRotatation: 0\r\n            }\r\n\r\n            let logoOne = defaultLogo;\r\n            let logoStyle = `opacity:0.${logoOne.opacity};  position: absolute; `;\r\n            let newLogoWatermark = document.createElement('div'); // is a node\r\n            newLogoWatermark.setAttribute(\"class\", \"draggable-logo\");\r\n            newLogoWatermark.setAttribute(\"style\", logoStyle);\r\n            newLogoWatermark.setAttribute(\"id\", `${logoOne.watermarkID}`);\r\n            let subImgDiv = document.createElement('IMG');\r\n            subImgDiv.setAttribute(\"src\", logoPreviewUrl);\r\n            subImgDiv.setAttribute(\"width\", \"80\");\r\n            subImgDiv.setAttribute(\"height\", \"80\");\r\n            subImgDiv.setAttribute(\"alt\", `img-${logoOne.watermarkID}`);\r\n\r\n            //     subImgDiv.setAttribute(\"style\", `transform : rotate(${logoOne.logoRotatation}deg)`);\r\n            //     // subImgDiv.innerHTML = `${logoOne.watermarkText}`;\r\n            newLogoWatermark.appendChild(subImgDiv);\r\n            console.log(newLogoWatermark);\r\n\r\n            newLogoWatermark.onclick = function () {\r\n                vm.setState({ currentEementId: `${logoOne.watermarkID}` })\r\n                console.log(\"ele changed \", newLogoWatermark, vm.state);\r\n            };\r\n\r\n            //     // add to dom \r\n            document.getElementById(\"cover\").prepend(newLogoWatermark);\r\n            vm.logoWatermarkCount++;\r\n\r\n            console.log(\"img added\");\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    addTextWatermark = () => {\r\n\r\n        let vm = this;\r\n        let defaultText = {\r\n            fontSize: 20,\r\n            watermarkID: `txt-watermark-${vm.textWatermarkCount}`,\r\n            opacity: 9,\r\n            fontFamily: \"Courier New\",\r\n            position: \"absolute\",  // keep same for all\r\n            color: \"red\",\r\n            watermarkText: \"New Watermark\",\r\n            textRotatation: 0\r\n        }\r\n        if (vm.state.logoWatermarkList.length > 0) {\r\n\r\n            let textOne = defaultText\r\n\r\n            let textOneStyle = `font-size: ${textOne.fontSize}px; opacity:0.${textOne.opacity}; font-family: ${textOne.fontFamily}; position: absolute; color:${textOne.color}`;\r\n            let newTextWatermark = document.createElement('div'); // is a node\r\n\r\n            newTextWatermark.setAttribute(\"class\", \"draggable-text\");\r\n            newTextWatermark.setAttribute(\"style\", textOneStyle);\r\n            newTextWatermark.setAttribute(\"id\", `${textOne.watermarkID}`);\r\n            console.log(newTextWatermark);\r\n\r\n            let subTextdiv = document.createElement('div');\r\n            subTextdiv.setAttribute(\"style\", `transform : rotate(${textOne.textRotatation}deg)`);\r\n            subTextdiv.innerHTML = `${textOne.watermarkText}`;\r\n            newTextWatermark.appendChild(subTextdiv);\r\n\r\n            newTextWatermark.onclick = function () {\r\n                vm.setState({ currentEementId: `${textOne.watermarkID}` })\r\n                console.log(\"ele changed \", newTextWatermark, vm.state);\r\n            };\r\n\r\n            // add to dom \r\n            document.getElementById(\"cover\").appendChild(newTextWatermark);\r\n            vm.textWatermarkCount++;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let editorConsole = {\r\n            position: \"relative\",\r\n            backgroundImage: `url(${this.state.file})`,\r\n            width: \"500px\",\r\n            height: \"375px\",\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n\r\n                <div>\r\n                    <h4>User Inputs</h4>\r\n                    cover: <input type=\"file\" onChange={this.handleChange} />\r\n                    logo : <input type=\"file\" onChange={this.handleLogoFile} />\r\n                    <button onClick={() => { this.addLogoWatermark() }}>Add Logo</button>\r\n\r\n                    <br />\r\n\r\n                    text Editor :\r\n                    text : <input type=\"text\" onChange={e => this.domChangeHandler(\"watermarkText\", e.target.value)} />\r\n                    <select id=\"textColors\" onChange={e => this.domChangeHandler(\"color\", e.target.value)}>\r\n                        <option value=\"red\">red</option>\r\n                        <option value=\"yellow\">yellow</option>\r\n                        <option value=\"pink\">pink</option>\r\n                        <option value=\"green\">green</option>\r\n                        <option value=\"blue\">blue</option>\r\n                    </select>\r\n\r\n                    <select id=\"logoRotate\" onChange={e => this.domChangeHandler(\"logoRotate\", e.target.value)}>\r\n                        <option value={0}>0</option>\r\n                        <option value={90}>90</option>\r\n                        <option value={180}>180</option>\r\n                        <option value={270}>270</option>\r\n                    </select>\r\n\r\n                    Opacity : <input type=\"range\" name=\"points\" min=\"1\" max=\"9\"\r\n                        onChange={e => this.domChangeHandler(\"opacity\", e.target.value)} />\r\n                    Size : <input type=\"range\" name=\"points\" min=\"5\" max=\"100\"\r\n                        onChange={e => this.domChangeHandler(\"textRange\", e.target.value)} />\r\n                    <br />\r\n\r\n\r\n                    {/* logoRotate <input type=\"number\" onChange={ (e) => this.setState({ textRotatation : parseInt(e.target.value, 10)})} />  */}\r\n\r\n\r\n\r\n                </div>\r\n\r\n                <span>\r\n\r\n                    <button onClick={() => this.checkImg()}> check Img</button>\r\n                    <button onClick={() => this.addTextWatermark()} > Add Text</button>\r\n                    <button onClick={ () => this.removeDomElement()} >Remove Ele</button>\r\n\r\n                </span>\r\n                <hr />\r\n\r\n                <div className=\"watermark-playground\">\r\n\r\n                    <div className=\"editor-console\"\r\n                        id=\"cover\"\r\n                        style={editorConsole}\r\n                    >\r\n\r\n                        {/* <div className=\"draggable-logo\"\r\n                            id=\"watermarkLogo\"\r\n                            style={{ position: \"absolute\" }} >\r\n                            <img src={this.state.logoFile}\r\n                                id=\"watermarkLogoImg\"\r\n                                style={logoStyle}\r\n\r\n                                className=\"resizable-logo\"\r\n                            />\r\n                        </div> */}\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n                <br />\r\n                <br />\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WatermarkPosition;"]},"metadata":{},"sourceType":"module"}