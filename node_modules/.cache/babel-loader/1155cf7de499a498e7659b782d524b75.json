{"ast":null,"code":"var _jsxFileName = \"C:\\\\audi_\\\\ESPL_projects\\\\facebook\\\\src\\\\components\\\\watermarks\\\\fixedImg.js\";\nimport React, { Component } from 'react';\nimport \"./index.css\";\n\nconst interact = require('interactjs');\n\nclass WatermarkPosition extends Component {\n  constructor(props) {\n    super(props);\n\n    this.FontHandler = e => {\n      console.log(e.target.value);\n      this.setState({\n        fontSize: e.target.value\n      });\n      console.log(this.state);\n    };\n\n    this.handleChange = event => {\n      if (event.target.files[0]) {\n        this.setState({\n          file: URL.createObjectURL(event.target.files[0]),\n          originalFile: event.target.files[0]\n        });\n      }\n    };\n\n    this.handleLogoFile = event => {\n      if (event.target.files[0]) {\n        let oldList = this.state.logoWatermarkList;\n        oldList.push(event.target.files[0]);\n        this.setState({\n          logoWatermarkList: oldList\n        });\n      }\n    };\n\n    this.handleChangeText = e => {\n      this.setState({\n        watermarkText: e.target.value\n      });\n    };\n\n    this.domChangeHandler = (changeParameter, value) => {\n      // update the element \n      let modifingElement = this.state.currentEementId;\n      console.log(\"changing element \", modifingElement);\n      let ele = document.getElementById(modifingElement);\n      console.log(document.getElementById(modifingElement).childNodes[0].innerText);\n\n      if (changeParameter === \"color\") {\n        ele.style.color = value ? value : \"black\";\n      }\n\n      if (changeParameter === \"opacity\") {\n        ele.style.opacity = value ? `0.${value}` : \"0.9\";\n      }\n\n      if (changeParameter === \"textRange\") {\n        console.log(value);\n        ele.style.fontSize = `${value}px`;\n      }\n\n      if (changeParameter === \"watermarkText\") {\n        if (value) {\n          document.getElementById(modifingElement).childNodes[0].innerText = value;\n        } else {\n          document.getElementById(modifingElement).childNodes[0].innerText = \"Click To Edit\";\n        }\n      }\n    };\n\n    this.finalTextXY = (aspRatiobyW, aspRatiobyH, basicData) => {\n      let vm = this;\n      let finalWatermarksList = [];\n\n      for (let index = 0; index < vm.textWatermarkCount; index++) {\n        let textElement = document.getElementById(`txt-watermark-${index}`);\n\n        if (textElement) {\n          console.log(textElement);\n          let watermarkObj = {\n            fontSize: parseInt(textElement.style.fontSize, 10),\n            watermarkID: textElement.id,\n            opacity: textElement.style.opacity,\n            fontFamily: textElement.style.fontFamily,\n            position: \"absolute\",\n            // keep same for all\n            color: textElement.style.color,\n            watermarkText: textElement.childNodes[0].innerText,\n            textRotatation: 0 // transformOrigin: \"0 0\"\n\n          }; //let waterMarkText = document.getElementById(txtObj.watermarkID);\n\n          let xyMovesText = this.objectMoment(textElement.style.transform);\n          let finalTextX = aspRatiobyW * xyMovesText.xMove;\n          let finalTextY = aspRatiobyH * xyMovesText.yMove + 0.018 * basicData.perviewCoverH; // 0.018 y move per 1px \n\n          let textFper = watermarkObj.fontSize / basicData.previewCoverW * 100;\n          let finalTextF = textFper * basicData.originalCoverW / 100;\n          let textFontName = \"cour\"; //\n\n          finalWatermarksList.push({\n            finalTextX,\n            finalTextY,\n            finalTextF,\n            textFontName,\n            opacity: watermarkObj.opacity,\n            color: watermarkObj.color,\n            watermarkText: watermarkObj.watermarkText\n          });\n        }\n      }\n\n      console.log(finalWatermarksList);\n      return finalWatermarksList;\n    };\n\n    this.objectMoment = xyMove => {\n      if (xyMove) {\n        let movement = xyMove.split(\",\");\n        let positiveX = !movement[0].includes(\"-\");\n        let positiveY = !movement[1].includes(\"-\");\n        let xMove = parseInt(movement[0].replace(/\\D/g, \"\"), 10);\n        xMove = positiveX ? xMove * 1 : xMove * -1;\n        let yMove = parseInt(movement[1].replace(/\\D/g, \"\"), 10);\n        yMove = positiveY ? yMove * 1 : yMove * -1;\n        return {\n          xMove,\n          yMove\n        };\n      }\n    };\n\n    this.checkImg = () => {\n      console.log(\"final State\", this.state); // original img height and width\n      // let originalCoverW = 1000; \n      // let originalCoverH = 750;\n\n      let originalCoverW = this.state.actualImgWidth;\n      let originalCoverH = this.state.actualImgHeight; // bg img wh  --> preivew img height widht \n\n      let cover = document.querySelector(\"#cover\");\n      let previewCoverW = cover.clientWidth;\n      let perviewCoverH = cover.clientHeight; // logo w h  ==> logo height and width on preview img \n\n      let wmLogoImg = document.querySelector(\"#logo-watermark-0\");\n      let wmLogoImgcurrWidth = wmLogoImg.clientWidth;\n      let wmLogoImgcurrHeight = wmLogoImg.clientHeight - 4;\n      console.log(\"details- \");\n      console.log(\"original w-h- \", originalCoverW, originalCoverH);\n      console.log(\"preview w-h- \", previewCoverW, perviewCoverH);\n      console.log(\"logo preivew w-h- \", wmLogoImgcurrWidth, wmLogoImgcurrHeight);\n      let basicData = {\n        originalCoverW,\n        originalCoverH,\n        previewCoverW,\n        perviewCoverH\n      }; // for watermark text \n\n      let watermarkLogo = document.getElementById('logo-watermark-0');\n      let xyMovesLogo = this.objectMoment(watermarkLogo.style.transform); // distance  x y \n\n      let aspRatiobyW = originalCoverW / previewCoverW; // by width \n\n      let aspRatiobyH = originalCoverH / perviewCoverH; // by h\n      // xy on original img \n\n      let finalX = aspRatiobyW * xyMovesLogo.xMove;\n      let finalY = aspRatiobyH * xyMovesLogo.yMove;\n      let fW = wmLogoImgcurrWidth * aspRatiobyW;\n      let fH = wmLogoImgcurrHeight * aspRatiobyH;\n      let resList = this.finalTextXY(aspRatiobyW, aspRatiobyH, basicData); //  let finalText1 = this.finalTextXY(aspRatiobyW, aspRatiobyH, txtWatermarkObj1, basicData);\n\n      let finalText = resList[0];\n      let finalText1 = resList[1]; // let finalTextX = aspRatiobyW * xyMovesText.xMove;\n      // let finalTextY = aspRatiobyH * xyMovesText.yMove + (0.018 * perviewCoverH); // 0.018 y move per 1px \n      // let textFper = (this.state.fontSize / previewCoverW) * 100;\n      // let finalTextF = (textFper * originalCoverW) / 100;\n      // finalTextX,finalTextY,finalTextF\n      // let url = `ffmpeg -i gridOrg.jpg -i box.jpg -filter_complex \"[1]scale=${fW}:${fH}[a];[a]lut=a=val*0.9[b];[0][b] overlay=${finalX}:${finalY}\" -y watermarkLogo.jpg`\n      //let txtUrl = `ffmpeg -i gridOrg1.jpg -filter_complex \"[0]drawtext=fontfile=cour.ttf:text='${this.state.watermarkText}':fontcolor=${this.state.fontColor}:fontsize=${finalTextF}:x=${finalTextX}:y=${finalTextY}\" -y restextWatermark.jpg`\n      // console.log(txtUrl);\n      // let logoRotation = `ffmpeg -i gridOrg.jpg -i logoA.png -filter_complex \"[1]scale=${fW}:${fH}[a];[a]rotate='${this.state.logoRoatation}*PI/180:ow=hypot(iw,ih):oh=ow:c=none'[a];[0][a]overlay=${finalX}:${finalY}\" -y testRotation.jpg`\n      // let urlTextLogo = `ffmpeg -i gridOrg.jpg -i ${this.state.logoOriginalFile.name} -filter_complex \"[1]scale=${fW}:${fH}[t],[t]lut=a=val*0.${this.state.logoOpacity}[t],[t]rotate=${this.state.logoRoatation}*PI/180[t],[0][t]overlay=${finalX}:${finalY}[i1];[i1]drawtext=fontfile='${finalText.textFontName}.ttf': text='${finalText.watermarkText}':fontcolor=${finalText.color}@0.${finalText.opacity}:fontsize=${finalText.finalTextF}:x=${finalText.finalTextX}:y=${finalText.finalTextY}\" -y res_logoText.jpg`;\n      // console.log(urlTextLogo);\n      // let multiLoogSinglelogUrl = `ffmpeg -i gridOrg.jpg  -i ${this.state.logoOriginalFile.name} -i ${this.state.logoOriginalFile.name} -filter_complex \"[1]scale=${fW}:${fH}[t],[t]lut=a=val*0.${this.state.logoOpacity}[t],\n      // [t]rotate=${this.state.logoRoatation}*PI/180[t],[0][t]overlay=${finalX}:${finalY}[i1];\n      //  [2]scale=${fW}:${fH}[t],[t]lut=a=val*0.${this.state.logoOpacity}[t],[t]rotate=${this.state.logoRoatation}*PI/180[t],[i1][t]overlay=${finalX + 200}:${finalY}[i2];\n      //  [i2]drawtext=fontfile=cour.ttf: text='India':fontcolor=red@0.8:fontsize=20:x=300:y=20\" -preset ultrafast -y multiLogo.jpg\n      // `\n      // (finalText , finalText1);\n\n      let multiTextsingeLogo = `ffmpeg -i gridOrg.jpg -i box.jpg\n         -filter_complex \"[1]scale=${fW}:${fH}[t],[t]lut=a=val*0.${this.state.logoOpacity}[t],[t]rotate=${this.state.logoRoatation}*PI/180[t],[0][t]overlay=${finalX}:${finalY}[i1];\n        [i1]drawtext=fontfile=${finalText.textFontName}.ttf: text='${finalText.watermarkText}':fontcolor=${finalText.color}@${finalText.opacity}:fontsize=${finalText.finalTextF}:x=${finalText.finalTextX}:y=${finalText.finalTextY}[i2];\n        [i2]drawtext=fontfile=${finalText1.textFontName}.ttf: text='${finalText1.watermarkText}':fontcolor=${finalText1.color}@${finalText1.opacity}:fontsize=${finalText1.finalTextF}:x=${finalText1.finalTextX}:y=${finalText1.finalTextY}\" -preset ultrafast -y res_multy_text.jpg`;\n      console.log(multiTextsingeLogo);\n    };\n\n    this.addLogoWatermark = () => {\n      let vm = this;\n      let logoList = vm.state.logoWatermarkList; // let logoStyle = {\n      //     width: this.state.logoSize,\n      //     opacity: `0.${this.state.logoOpacity}`,\n      //     transform: `rotate(${this.state.logoRoatation}deg)`\n      // }\n\n      let logoPreviewUrl = URL.createObjectURL(logoList[0]); // URL.createObjectURL(\n      // <div className=\"draggable-logo\"\n      // id=\"watermarkLogo\"\n      // style={{ position: \"absolute\" }} >\n      // <img src={this.state.logoFile}\n      //     id=\"watermarkLogoImg\"\n      //     style={logoStyle}\n      //     className=\"resizable-logo\"\n      //     />\n      // </div>\n      //     let vm = this;\n\n      let defaultLogo = {\n        watermarkID: `logo-watermark-${vm.logoWatermarkCount}`,\n        opacity: 9,\n        position: \"absolute\",\n        // keep same for all\n        logoRotatation: 0\n      };\n      let logoOne = defaultLogo;\n      let logoStyle = `opacity:0.${logoOne.opacity};  position: absolute; `;\n      let newLogoWatermark = document.createElement('div'); // is a node\n\n      newLogoWatermark.setAttribute(\"class\", \"draggable-logo\");\n      newLogoWatermark.setAttribute(\"style\", logoStyle);\n      newLogoWatermark.setAttribute(\"id\", `${logoOne.watermarkID}`);\n      let subImgDiv = document.createElement('IMG');\n      subImgDiv.setAttribute(\"src\", logoPreviewUrl);\n      subImgDiv.setAttribute(\"width\", \"80\");\n      subImgDiv.setAttribute(\"height\", \"80\");\n      subImgDiv.setAttribute(\"alt\", `logo-${logoOne.watermarkID}`); //     subImgDiv.setAttribute(\"style\", `transform : rotate(${logoOne.logoRotatation}deg)`);\n      //     // subImgDiv.innerHTML = `${logoOne.watermarkText}`;\n\n      newLogoWatermark.appendChild(subImgDiv);\n      console.log(newLogoWatermark);\n\n      newLogoWatermark.onclick = function () {\n        vm.setState({\n          currentEementId: `${logoOne.watermarkID}`\n        });\n        console.log(\"ele changed \", newLogoWatermark, vm.state);\n      }; //     // add to dom \n\n\n      document.getElementById(\"cover\").prepend(newLogoWatermark);\n      vm.logoWatermarkCount++;\n      console.log(\"img added\");\n    };\n\n    this.addTextWatermark = () => {\n      let vm = this;\n      let defaultText = {\n        fontSize: 20,\n        watermarkID: `txt-watermark-${vm.textWatermarkCount}`,\n        opacity: 9,\n        fontFamily: \"Courier New\",\n        position: \"absolute\",\n        // keep same for all\n        color: \"red\",\n        watermarkText: \"New Watermark\",\n        textRotatation: 0\n      };\n\n      if (vm.state.logoWatermarkList.length > 0) {\n        let textOne = defaultText;\n        let textOneStyle = `font-size: ${textOne.fontSize}px; opacity:0.${textOne.opacity}; font-family: ${textOne.fontFamily}; position: absolute; color:${textOne.color}`;\n        let newTextWatermark = document.createElement('div'); // is a node\n\n        newTextWatermark.setAttribute(\"class\", \"draggable-text\");\n        newTextWatermark.setAttribute(\"style\", textOneStyle);\n        newTextWatermark.setAttribute(\"id\", `${textOne.watermarkID}`);\n        console.log(newTextWatermark);\n        let subTextdiv = document.createElement('div');\n        subTextdiv.setAttribute(\"style\", `transform : rotate(${textOne.textRotatation}deg)`);\n        subTextdiv.innerHTML = `${textOne.watermarkText}`;\n        newTextWatermark.appendChild(subTextdiv);\n\n        newTextWatermark.onclick = function () {\n          vm.setState({\n            currentEementId: `${textOne.watermarkID}`\n          });\n          console.log(\"ele changed \", newTextWatermark, vm.state);\n        }; // add to dom \n\n\n        document.getElementById(\"cover\").appendChild(newTextWatermark);\n        vm.textWatermarkCount++;\n      }\n    };\n\n    this.state = {\n      currentEementId: null,\n      logoWatermarkList: [],\n      textWatermarkList: [{\n        fontSize: 20,\n        watermarkID: \"watermarkText_0\",\n        opacity: 9,\n        fontFamily: \"Courier New\",\n        position: \"absolute\",\n        // keep same for all\n        color: \"red\",\n        watermarkText: \"@ style 2020\",\n        textRotatation: 0 // transformOrigin: \"0 0\"\n\n      }, {\n        fontSize: 20,\n        watermarkID: \"watermarkText_1\",\n        opacity: 9,\n        fontFamily: \"Courier New\",\n        position: \"absolute\",\n        color: \"green\",\n        watermarkText: \"@ style watermark2\",\n        textRotatation: 0 // transformOrigin: \"0 0\"\n\n      }],\n      fontSize: 20,\n      fontColor: \"red\",\n      rotate: 20,\n      textRotatation: 45,\n      logoRoatation: 180,\n      opacity: 9,\n      logoOpacity: 9,\n      logoSize: 80,\n      watermarkText: \"© free style\",\n      BackgroundImgUrl: \"\",\n      file: \"\",\n      logoFile: \"\",\n      logoOriginalFile: null,\n      originalFile: null,\n      // image parameters\n      actualImgWidth: 1000,\n      actualImgHeight: 750\n    };\n    this.textRotationAngle = 10;\n    this.textWatermarkCount = 0;\n    this.logoWatermarkCount = 0;\n  }\n\n  componentDidMount() {\n    let vm = this; // drag the element on page \n\n    const position = {\n      x: 0,\n      y: 0\n    };\n    interact('.draggable-logo').draggable({\n      listeners: {\n        start(event) {// console.log(event.type, event.target)\n        },\n\n        move(event) {\n          position.x += event.dx;\n          position.y += event.dy;\n          event.target.style.transform = `translate(${position.x}px, ${position.y}px)`;\n          console.log(event.type, event.target);\n        }\n\n      }\n    }); // resize the element \n\n    interact(\".resizable-logo\").resizable({\n      edges: {\n        left: false,\n        right: false,\n        bottom: false,\n        top: false\n      },\n      // modifiers: [\n      //   interact.modifiers.restrictEdges({\n      //     outer: \"parent\",\n      //     endOnly: true\n      //   })\n      // ],\n      inertia: true,\n      modifiers: [// keep the edges inside the parent\n      // interact.modifiers.restrictEdges({\n      //   outer: 'parent'\n      // }),\n      // minimum size\n      interact.modifiers.restrictSize({\n        min: {\n          width: 20,\n          height: 20\n        }\n      })]\n    }).on(\"resizemove\", function (event) {\n      var target = event.target;\n      console.log(target);\n      target.style.width = event.rect.width + \"px\";\n      target.style.height = event.rect.height + \"px\";\n    }); // text drag(move)\n\n    interact('.draggable-text').draggable({\n      listeners: {\n        start(event) {},\n\n        move(event) {\n          position.x += event.dx;\n          position.y += event.dy;\n          console.log(event.target.style.transform);\n          event.target.style.transform = `translate(${position.x}px, ${position.y}px)`;\n        }\n\n      }\n    }); // resize the element \n    // interact(\".resizable-text\")\n    // .resizable({\n    //         edges: { left: false, right: true, bottom: true, top: false },\n    //         // modifiers: [\n    //         //   interact.modifiers.restrictEdges({\n    //         //     outer: \"parent\",\n    //         //     endOnly: true\n    //         //   })\n    //         // ],\n    //         inertia: true\n    //     })\n    //     .on(\"resizemove\", function(event) {\n    //         var target = event.target\n    //         console.log(event);\n    //         target.style.width = event.rect.width + \"px\"\n    //         target.style.height = event.rect.height + \"px\"\n    //     })\n  }\n\n  render() {\n    let editorConsole = {\n      position: \"relative\",\n      backgroundImage: `url(${this.state.file})`,\n      width: \"500px\",\n      height: \"375px\"\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532\n      },\n      __self: this\n    }, \"User Inputs\"), \"cover: \", React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533\n      },\n      __self: this\n    }), \"logo : \", React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleLogoFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => {\n        this.addLogoWatermark();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535\n      },\n      __self: this\n    }, \"Add Logo\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    }), \"text Editor : text : \", React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.domChangeHandler(\"watermarkText\", e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      id: \"textColors\",\n      onChange: e => this.domChangeHandler(\"color\", e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542\n      },\n      __self: this\n    }, \"red\"), React.createElement(\"option\", {\n      value: \"yellow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543\n      },\n      __self: this\n    }, \"yellow\"), React.createElement(\"option\", {\n      value: \"pink\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544\n      },\n      __self: this\n    }, \"pink\"), React.createElement(\"option\", {\n      value: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545\n      },\n      __self: this\n    }, \"blue\")), \"text Opacity : \", React.createElement(\"input\", {\n      type: \"range\",\n      name: \"points\",\n      min: \"1\",\n      max: \"9\",\n      onChange: e => this.domChangeHandler(\"opacity\", e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548\n      },\n      __self: this\n    }), \"text FontSize : \", React.createElement(\"input\", {\n      type: \"range\",\n      name: \"points\",\n      min: \"5\",\n      max: \"100\",\n      onChange: e => this.domChangeHandler(\"textRange\", e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.checkImg(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563\n      },\n      __self: this\n    }, \" check Img\"), React.createElement(\"button\", {\n      onClick: () => this.addTextWatermark(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564\n      },\n      __self: this\n    }, \" Add Text\")), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"watermark-playground\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"editor-console\",\n      id: \"cover\",\n      style: editorConsole,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default WatermarkPosition;","map":{"version":3,"sources":["C:/audi_/ESPL_projects/facebook/src/components/watermarks/fixedImg.js"],"names":["React","Component","interact","require","WatermarkPosition","constructor","props","FontHandler","e","console","log","target","value","setState","fontSize","state","handleChange","event","files","file","URL","createObjectURL","originalFile","handleLogoFile","oldList","logoWatermarkList","push","handleChangeText","watermarkText","domChangeHandler","changeParameter","modifingElement","currentEementId","ele","document","getElementById","childNodes","innerText","style","color","opacity","finalTextXY","aspRatiobyW","aspRatiobyH","basicData","vm","finalWatermarksList","index","textWatermarkCount","textElement","watermarkObj","parseInt","watermarkID","id","fontFamily","position","textRotatation","xyMovesText","objectMoment","transform","finalTextX","xMove","finalTextY","yMove","perviewCoverH","textFper","previewCoverW","finalTextF","originalCoverW","textFontName","xyMove","movement","split","positiveX","includes","positiveY","replace","checkImg","actualImgWidth","originalCoverH","actualImgHeight","cover","querySelector","clientWidth","clientHeight","wmLogoImg","wmLogoImgcurrWidth","wmLogoImgcurrHeight","watermarkLogo","xyMovesLogo","finalX","finalY","fW","fH","resList","finalText","finalText1","multiTextsingeLogo","logoOpacity","logoRoatation","addLogoWatermark","logoList","logoPreviewUrl","defaultLogo","logoWatermarkCount","logoRotatation","logoOne","logoStyle","newLogoWatermark","createElement","setAttribute","subImgDiv","appendChild","onclick","prepend","addTextWatermark","defaultText","length","textOne","textOneStyle","newTextWatermark","subTextdiv","innerHTML","textWatermarkList","fontColor","rotate","logoSize","BackgroundImgUrl","logoFile","logoOriginalFile","textRotationAngle","componentDidMount","x","y","draggable","listeners","start","move","dx","dy","type","resizable","edges","left","right","bottom","top","inertia","modifiers","restrictSize","min","width","height","on","rect","render","editorConsole","backgroundImage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport \"./index.css\";\r\nconst interact = require('interactjs')\r\n\r\n\r\n\r\nclass WatermarkPosition extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentEementId: null,\r\n            logoWatermarkList : [],\r\n            textWatermarkList: [\r\n                {\r\n                    fontSize: 20,\r\n                    watermarkID: \"watermarkText_0\",\r\n                    opacity: 9,\r\n                    fontFamily: \"Courier New\",\r\n                    position: \"absolute\",  // keep same for all\r\n                    color: \"red\",\r\n                    watermarkText: \"@ style 2020\",\r\n                    textRotatation: 0\r\n                    // transformOrigin: \"0 0\"\r\n                },\r\n                {\r\n                    fontSize: 20,\r\n                    watermarkID: \"watermarkText_1\",\r\n                    opacity: 9,\r\n                    fontFamily: \"Courier New\",\r\n                    position: \"absolute\",\r\n                    color: \"green\",\r\n                    watermarkText: \"@ style watermark2\",\r\n                    textRotatation: 0\r\n                    // transformOrigin: \"0 0\"\r\n                }\r\n            ],\r\n            fontSize: 20,\r\n            fontColor: \"red\",\r\n            rotate: 20,\r\n            textRotatation: 45,\r\n            logoRoatation: 180,\r\n            opacity: 9,\r\n            logoOpacity: 9,\r\n            logoSize: 80,\r\n            watermarkText: \"© free style\",\r\n            BackgroundImgUrl: \"\",\r\n            file: \"\",\r\n            logoFile: \"\",\r\n\r\n            logoOriginalFile: null,\r\n            originalFile: null,\r\n\r\n            // image parameters\r\n            actualImgWidth: 1000,\r\n            actualImgHeight: 750\r\n        }\r\n\r\n        this.textRotationAngle = 10;\r\n        this.textWatermarkCount = 0;\r\n        this.logoWatermarkCount = 0; \r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        let vm = this;\r\n\r\n        // drag the element on page \r\n        const position = { x: 0, y: 0 }\r\n        interact('.draggable-logo').draggable({\r\n            listeners: {\r\n                start(event) {\r\n                    // console.log(event.type, event.target)\r\n                },\r\n                move(event) {\r\n                    position.x += event.dx\r\n                    position.y += event.dy\r\n\r\n                    event.target.style.transform =\r\n                        `translate(${position.x}px, ${position.y}px)`\r\n\r\n                    console.log(event.type, event.target)\r\n                },\r\n\r\n            }\r\n        })\r\n\r\n        // resize the element \r\n        interact(\".resizable-logo\")\r\n            .resizable({\r\n                edges: { left: false, right: false, bottom: false, top: false },\r\n                // modifiers: [\r\n                //   interact.modifiers.restrictEdges({\r\n                //     outer: \"parent\",\r\n                //     endOnly: true\r\n                //   })\r\n                // ],\r\n                inertia: true,\r\n                modifiers: [\r\n                    // keep the edges inside the parent\r\n                    // interact.modifiers.restrictEdges({\r\n                    //   outer: 'parent'\r\n                    // }),\r\n\r\n                    // minimum size\r\n                    interact.modifiers.restrictSize({\r\n                        min: { width: 20, height: 20 }\r\n                    })\r\n                ],\r\n            })\r\n            .on(\"resizemove\", function (event) {\r\n                var target = event.target\r\n                console.log(target);\r\n                target.style.width = event.rect.width + \"px\"\r\n                target.style.height = event.rect.height + \"px\"\r\n            })\r\n\r\n\r\n        // text drag(move)\r\n        interact('.draggable-text').draggable({\r\n            listeners: {\r\n                start(event) {\r\n                },\r\n                move(event) {\r\n                    position.x += event.dx\r\n                    position.y += event.dy\r\n                    console.log(event.target.style.transform);\r\n                    event.target.style.transform =\r\n                        `translate(${position.x}px, ${position.y}px)`\r\n                },\r\n\r\n            }\r\n        })\r\n\r\n        // resize the element \r\n        // interact(\".resizable-text\")\r\n        // .resizable({\r\n        //         edges: { left: false, right: true, bottom: true, top: false },\r\n        //         // modifiers: [\r\n        //         //   interact.modifiers.restrictEdges({\r\n        //         //     outer: \"parent\",\r\n        //         //     endOnly: true\r\n        //         //   })\r\n        //         // ],\r\n        //         inertia: true\r\n        //     })\r\n        //     .on(\"resizemove\", function(event) {\r\n        //         var target = event.target\r\n        //         console.log(event);\r\n        //         target.style.width = event.rect.width + \"px\"\r\n        //         target.style.height = event.rect.height + \"px\"\r\n        //     })\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    FontHandler = (e) => {\r\n        console.log(e.target.value);\r\n        this.setState({\r\n            fontSize: e.target.value\r\n        })\r\n\r\n        console.log(this.state);\r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n\r\n        \r\n        if( event.target.files[0]){\r\n        this.setState({\r\n            file: URL.createObjectURL(event.target.files[0]),\r\n            originalFile: event.target.files[0]\r\n        })\r\n      }\r\n    }\r\n\r\n\r\n    handleLogoFile = (event) => {\r\n        if(event.target.files[0]){\r\n            let oldList = this.state.logoWatermarkList\r\n            oldList.push( event.target.files[0]);\r\n        this.setState({\r\n            logoWatermarkList : oldList\r\n        })\r\n       }\r\n    }\r\n\r\n\r\n    handleChangeText = (e) => {\r\n        this.setState(\r\n            { watermarkText: e.target.value }\r\n        )\r\n    }\r\n\r\n\r\n    domChangeHandler = (changeParameter, value) => {\r\n\r\n        // update the element \r\n\r\n        let modifingElement = this.state.currentEementId;\r\n        console.log(\"changing element \", modifingElement)\r\n        let ele = document.getElementById(modifingElement);\r\n        console.log(document.getElementById(modifingElement).childNodes[0].innerText);\r\n\r\n        if (changeParameter === \"color\") {\r\n            ele.style.color = value ? value : \"black\";\r\n        }\r\n        if (changeParameter === \"opacity\") {\r\n            ele.style.opacity = value ? `0.${value}` : \"0.9\";\r\n        }\r\n\r\n        if (changeParameter === \"textRange\") {\r\n            console.log(value);\r\n            ele.style.fontSize = `${value}px`;\r\n        }\r\n\r\n        if (changeParameter === \"watermarkText\") {\r\n            if (value) {\r\n                document.getElementById(modifingElement).childNodes[0].innerText = value\r\n            } else {\r\n                document.getElementById(modifingElement).childNodes[0].innerText = \"Click To Edit\"\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    finalTextXY = (aspRatiobyW, aspRatiobyH, basicData) => {\r\n \r\n        let vm = this;\r\n        let finalWatermarksList = [];\r\n\r\n         for (let index = 0; index < vm.textWatermarkCount ; index++) {\r\n\r\n            let textElement = document.getElementById(`txt-watermark-${index}`);\r\n             if(textElement){\r\n                 console.log(textElement);\r\n\r\n                let watermarkObj = {\r\n                    fontSize: parseInt(textElement.style.fontSize, 10),\r\n                    watermarkID: textElement.id,\r\n                    opacity: textElement.style.opacity,\r\n                    fontFamily: textElement.style.fontFamily,\r\n                    position: \"absolute\",  // keep same for all\r\n                    color:textElement.style.color,\r\n                    watermarkText: textElement.childNodes[0].innerText,\r\n                    textRotatation: 0\r\n                    // transformOrigin: \"0 0\"\r\n                }\r\n\r\n                //let waterMarkText = document.getElementById(txtObj.watermarkID);\r\n                let xyMovesText = this.objectMoment(textElement.style.transform);\r\n                let finalTextX = aspRatiobyW * xyMovesText.xMove;\r\n                let finalTextY = aspRatiobyH * xyMovesText.yMove + (0.018 * basicData.perviewCoverH); // 0.018 y move per 1px \r\n                let textFper = (watermarkObj.fontSize / basicData.previewCoverW) * 100;\r\n                let finalTextF = (textFper * basicData.originalCoverW) / 100;\r\n        \r\n                let textFontName = \"cour\";  //\r\n                finalWatermarksList.push({\r\n                    finalTextX,\r\n                    finalTextY,\r\n                    finalTextF,\r\n                    textFontName,\r\n                    opacity: watermarkObj.opacity,\r\n                    color: watermarkObj.color,\r\n                    watermarkText: watermarkObj.watermarkText\r\n                });\r\n\r\n             }\r\n             \r\n         }\r\n\r\n         console.log(finalWatermarksList);\r\n         return finalWatermarksList;\r\n    }\r\n\r\n    objectMoment = (xyMove) => {\r\n        if (xyMove) {\r\n            let movement = xyMove.split(\",\");\r\n            let positiveX = !movement[0].includes(\"-\");\r\n            let positiveY = !movement[1].includes(\"-\");\r\n            let xMove = parseInt(movement[0].replace(/\\D/g, \"\"), 10);\r\n            xMove = positiveX ? xMove * 1 : xMove * -1;\r\n            let yMove = parseInt(movement[1].replace(/\\D/g, \"\"), 10);\r\n            yMove = positiveY ? yMove * 1 : yMove * -1;\r\n\r\n            return {\r\n                xMove,\r\n                yMove\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkImg = () => {\r\n\r\n        console.log(\"final State\", this.state);\r\n\r\n\r\n        // original img height and width\r\n        // let originalCoverW = 1000; \r\n        // let originalCoverH = 750;\r\n\r\n        let originalCoverW = this.state.actualImgWidth;\r\n        let originalCoverH = this.state.actualImgHeight;\r\n\r\n        // bg img wh  --> preivew img height widht \r\n        let cover = document.querySelector(\"#cover\");\r\n        let previewCoverW = cover.clientWidth;\r\n        let perviewCoverH = cover.clientHeight;\r\n\r\n        // logo w h  ==> logo height and width on preview img \r\n        let wmLogoImg = document.querySelector(\"#logo-watermark-0\");\r\n        let wmLogoImgcurrWidth = wmLogoImg.clientWidth;\r\n        let wmLogoImgcurrHeight = wmLogoImg.clientHeight - 4;\r\n\r\n        console.log(\"details- \");\r\n        console.log(\"original w-h- \", originalCoverW, originalCoverH);\r\n        console.log(\"preview w-h- \", previewCoverW, perviewCoverH);\r\n        console.log(\"logo preivew w-h- \", wmLogoImgcurrWidth, wmLogoImgcurrHeight);\r\n\r\n        let basicData = {\r\n            originalCoverW,\r\n            originalCoverH,\r\n            previewCoverW,\r\n            perviewCoverH\r\n        }\r\n\r\n        // for watermark text \r\n\r\n        let watermarkLogo = document.getElementById('logo-watermark-0');\r\n        let xyMovesLogo = this.objectMoment(watermarkLogo.style.transform);\r\n\r\n        // distance  x y \r\n        let aspRatiobyW = originalCoverW / previewCoverW;  // by width \r\n        let aspRatiobyH = originalCoverH / perviewCoverH; // by h\r\n\r\n        // xy on original img \r\n        let finalX = aspRatiobyW * xyMovesLogo.xMove;\r\n        let finalY = aspRatiobyH * xyMovesLogo.yMove;\r\n\r\n        let fW = wmLogoImgcurrWidth * aspRatiobyW;\r\n        let fH = wmLogoImgcurrHeight * aspRatiobyH;\r\n\r\n        let resList = this.finalTextXY(aspRatiobyW, aspRatiobyH, basicData);\r\n\r\n      //  let finalText1 = this.finalTextXY(aspRatiobyW, aspRatiobyH, txtWatermarkObj1, basicData);\r\n\r\n        let finalText = resList[0];\r\n        let finalText1 =  resList[1];\r\n\r\n\r\n        // let finalTextX = aspRatiobyW * xyMovesText.xMove;\r\n        // let finalTextY = aspRatiobyH * xyMovesText.yMove + (0.018 * perviewCoverH); // 0.018 y move per 1px \r\n\r\n\r\n        // let textFper = (this.state.fontSize / previewCoverW) * 100;\r\n        // let finalTextF = (textFper * originalCoverW) / 100;\r\n\r\n        // finalTextX,finalTextY,finalTextF\r\n\r\n\r\n        // let url = `ffmpeg -i gridOrg.jpg -i box.jpg -filter_complex \"[1]scale=${fW}:${fH}[a];[a]lut=a=val*0.9[b];[0][b] overlay=${finalX}:${finalY}\" -y watermarkLogo.jpg`\r\n        //let txtUrl = `ffmpeg -i gridOrg1.jpg -filter_complex \"[0]drawtext=fontfile=cour.ttf:text='${this.state.watermarkText}':fontcolor=${this.state.fontColor}:fontsize=${finalTextF}:x=${finalTextX}:y=${finalTextY}\" -y restextWatermark.jpg`\r\n\r\n        // console.log(txtUrl);\r\n\r\n        // let logoRotation = `ffmpeg -i gridOrg.jpg -i logoA.png -filter_complex \"[1]scale=${fW}:${fH}[a];[a]rotate='${this.state.logoRoatation}*PI/180:ow=hypot(iw,ih):oh=ow:c=none'[a];[0][a]overlay=${finalX}:${finalY}\" -y testRotation.jpg`\r\n\r\n        // let urlTextLogo = `ffmpeg -i gridOrg.jpg -i ${this.state.logoOriginalFile.name} -filter_complex \"[1]scale=${fW}:${fH}[t],[t]lut=a=val*0.${this.state.logoOpacity}[t],[t]rotate=${this.state.logoRoatation}*PI/180[t],[0][t]overlay=${finalX}:${finalY}[i1];[i1]drawtext=fontfile='${finalText.textFontName}.ttf': text='${finalText.watermarkText}':fontcolor=${finalText.color}@0.${finalText.opacity}:fontsize=${finalText.finalTextF}:x=${finalText.finalTextX}:y=${finalText.finalTextY}\" -y res_logoText.jpg`;\r\n\r\n        // console.log(urlTextLogo);\r\n\r\n        // let multiLoogSinglelogUrl = `ffmpeg -i gridOrg.jpg  -i ${this.state.logoOriginalFile.name} -i ${this.state.logoOriginalFile.name} -filter_complex \"[1]scale=${fW}:${fH}[t],[t]lut=a=val*0.${this.state.logoOpacity}[t],\r\n        // [t]rotate=${this.state.logoRoatation}*PI/180[t],[0][t]overlay=${finalX}:${finalY}[i1];\r\n        //  [2]scale=${fW}:${fH}[t],[t]lut=a=val*0.${this.state.logoOpacity}[t],[t]rotate=${this.state.logoRoatation}*PI/180[t],[i1][t]overlay=${finalX + 200}:${finalY}[i2];\r\n        //  [i2]drawtext=fontfile=cour.ttf: text='India':fontcolor=red@0.8:fontsize=20:x=300:y=20\" -preset ultrafast -y multiLogo.jpg\r\n        // `\r\n\r\n        // (finalText , finalText1);\r\n        let multiTextsingeLogo = `ffmpeg -i gridOrg.jpg -i box.jpg\r\n         -filter_complex \"[1]scale=${fW}:${fH}[t],[t]lut=a=val*0.${this.state.logoOpacity}[t],[t]rotate=${this.state.logoRoatation}*PI/180[t],[0][t]overlay=${finalX}:${finalY}[i1];\r\n        [i1]drawtext=fontfile=${finalText.textFontName}.ttf: text='${finalText.watermarkText}':fontcolor=${finalText.color}@${finalText.opacity}:fontsize=${finalText.finalTextF}:x=${finalText.finalTextX}:y=${finalText.finalTextY}[i2];\r\n        [i2]drawtext=fontfile=${finalText1.textFontName}.ttf: text='${finalText1.watermarkText}':fontcolor=${finalText1.color}@${finalText1.opacity}:fontsize=${finalText1.finalTextF}:x=${finalText1.finalTextX}:y=${finalText1.finalTextY}\" -preset ultrafast -y res_multy_text.jpg`\r\n\r\n        console.log(multiTextsingeLogo);\r\n    }\r\n\r\n\r\n    addLogoWatermark = () => {\r\n\r\n\r\n        let vm = this;\r\n\r\n        let logoList = vm.state.logoWatermarkList;\r\n\r\n        // let logoStyle = {\r\n        //     width: this.state.logoSize,\r\n        //     opacity: `0.${this.state.logoOpacity}`,\r\n        //     transform: `rotate(${this.state.logoRoatation}deg)`\r\n        // }\r\n\r\n       let logoPreviewUrl = URL.createObjectURL(logoList[0]);\r\n\r\n\r\n        // URL.createObjectURL(\r\n\r\n        // <div className=\"draggable-logo\"\r\n        // id=\"watermarkLogo\"\r\n        // style={{ position: \"absolute\" }} >\r\n        // <img src={this.state.logoFile}\r\n        //     id=\"watermarkLogoImg\"\r\n        //     style={logoStyle}\r\n\r\n        //     className=\"resizable-logo\"\r\n        //     />\r\n        // </div>\r\n\r\n\r\n\r\n    //     let vm = this;\r\n        let defaultLogo = {\r\n           \r\n            watermarkID: `logo-watermark-${vm.logoWatermarkCount}`,\r\n            opacity: 9,\r\n    \r\n            position: \"absolute\",  // keep same for all\r\n        \r\n            logoRotatation: 0\r\n        }\r\n\r\n        let logoOne = defaultLogo;\r\n\r\n        let logoStyle = `opacity:0.${logoOne.opacity};  position: absolute; `;\r\n        let newLogoWatermark = document.createElement('div'); // is a node\r\n            newLogoWatermark.setAttribute(\"class\", \"draggable-logo\");\r\n            newLogoWatermark.setAttribute(\"style\", logoStyle);\r\n            newLogoWatermark.setAttribute(\"id\", `${logoOne.watermarkID}`);\r\n\r\n\r\n        let subImgDiv = document.createElement('IMG');\r\n        \r\n        subImgDiv.setAttribute(\"src\", logoPreviewUrl);\r\n        subImgDiv.setAttribute(\"width\", \"80\");\r\n        subImgDiv.setAttribute(\"height\", \"80\");\r\n        subImgDiv.setAttribute(\"alt\", `logo-${logoOne.watermarkID}`);\r\n\r\n    //     subImgDiv.setAttribute(\"style\", `transform : rotate(${logoOne.logoRotatation}deg)`);\r\n    //     // subImgDiv.innerHTML = `${logoOne.watermarkText}`;\r\n          newLogoWatermark.appendChild(subImgDiv);\r\n          console.log(newLogoWatermark);\r\n\r\n            newLogoWatermark.onclick = function () {\r\n                vm.setState({ currentEementId: `${logoOne.watermarkID}` })\r\n                console.log(\"ele changed \", newLogoWatermark, vm.state);\r\n            };\r\n\r\n    //     // add to dom \r\n             document.getElementById(\"cover\").prepend(newLogoWatermark);\r\n             vm.logoWatermarkCount++;\r\n\r\n\r\n    console.log(\"img added\");\r\n\r\n    }\r\n\r\n\r\n\r\n    addTextWatermark = () => {\r\n\r\n        let vm = this;\r\n        let defaultText = {\r\n            fontSize: 20,\r\n            watermarkID: `txt-watermark-${vm.textWatermarkCount}`,\r\n            opacity: 9,\r\n            fontFamily: \"Courier New\",\r\n            position: \"absolute\",  // keep same for all\r\n            color: \"red\",\r\n            watermarkText: \"New Watermark\",\r\n            textRotatation: 0\r\n        }\r\n        if(vm.state.logoWatermarkList.length > 0) { \r\n\r\n        let textOne = defaultText\r\n\r\n        let textOneStyle = `font-size: ${textOne.fontSize}px; opacity:0.${textOne.opacity}; font-family: ${textOne.fontFamily}; position: absolute; color:${textOne.color}`;\r\n        let newTextWatermark = document.createElement('div'); // is a node\r\n\r\n        newTextWatermark.setAttribute(\"class\", \"draggable-text\");\r\n        newTextWatermark.setAttribute(\"style\", textOneStyle);\r\n        newTextWatermark.setAttribute(\"id\", `${textOne.watermarkID}`);\r\n        console.log(newTextWatermark);\r\n\r\n        let subTextdiv = document.createElement('div');\r\n        subTextdiv.setAttribute(\"style\", `transform : rotate(${textOne.textRotatation}deg)`);\r\n        subTextdiv.innerHTML = `${textOne.watermarkText}`;\r\n        newTextWatermark.appendChild(subTextdiv);\r\n\r\n        newTextWatermark.onclick = function () {\r\n            vm.setState({ currentEementId: `${textOne.watermarkID}` })\r\n            console.log(\"ele changed \", newTextWatermark, vm.state);\r\n        };\r\n\r\n        // add to dom \r\n        document.getElementById(\"cover\").appendChild(newTextWatermark);\r\n        vm.textWatermarkCount++;\r\n     }\r\n    }\r\n\r\n    render() {\r\n\r\n        let editorConsole = {\r\n            position: \"relative\",\r\n            backgroundImage: `url(${this.state.file})`,\r\n            width: \"500px\",\r\n            height: \"375px\",\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n\r\n                <div>\r\n                    <h4>User Inputs</h4>\r\n                    cover: <input type=\"file\" onChange={this.handleChange} />\r\n                    logo : <input type=\"file\" onChange={this.handleLogoFile} />\r\n                    <button onClick={ () => {this.addLogoWatermark()}}>Add Logo</button>\r\n        \r\n                    <br />\r\n\r\n                    text Editor :\r\n                    text : <input type=\"text\" onChange={e => this.domChangeHandler(\"watermarkText\", e.target.value)} />\r\n                    <select id=\"textColors\" onChange={e => this.domChangeHandler(\"color\", e.target.value)}>\r\n                        <option value=\"red\">red</option>\r\n                        <option value=\"yellow\">yellow</option>\r\n                        <option value=\"pink\">pink</option>\r\n                        <option value=\"blue\">blue</option>\r\n                    </select>\r\n\r\n                    text Opacity : <input type=\"range\" name=\"points\" min=\"1\" max=\"9\"\r\n                        onChange={e => this.domChangeHandler(\"opacity\", e.target.value)} />\r\n                    text FontSize : <input type=\"range\" name=\"points\" min=\"5\" max=\"100\"\r\n                        onChange={e => this.domChangeHandler(\"textRange\", e.target.value)} />\r\n                    <br />\r\n\r\n\r\n                    {/* logoRotate <input type=\"number\" onChange={ (e) => this.setState({ textRotatation : parseInt(e.target.value, 10)})} />  */}\r\n\r\n\r\n\r\n                </div>\r\n\r\n                <span>\r\n        \r\n                    <button onClick={() => this.checkImg()}> check Img</button>\r\n                    <button onClick={() => this.addTextWatermark()} > Add Text</button>\r\n\r\n                </span>\r\n                <hr />\r\n\r\n                <div className=\"watermark-playground\">\r\n\r\n                    <div className=\"editor-console\"\r\n                        id=\"cover\"\r\n                        style={editorConsole}\r\n                    >\r\n\r\n                        {/* <div className=\"draggable-logo\"\r\n                            id=\"watermarkLogo\"\r\n                            style={{ position: \"absolute\" }} >\r\n                            <img src={this.state.logoFile}\r\n                                id=\"watermarkLogoImg\"\r\n                                style={logoStyle}\r\n\r\n                                className=\"resizable-logo\"\r\n                            />\r\n                        </div> */}\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WatermarkPosition;"]},"metadata":{},"sourceType":"module"}