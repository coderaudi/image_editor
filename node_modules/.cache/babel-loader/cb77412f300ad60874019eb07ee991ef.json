{"ast":null,"code":"var _jsxFileName = \"C:\\\\audi_\\\\ESPL_projects\\\\facebook\\\\src\\\\components\\\\watermarks\\\\updatedEditorWithCropImg.js\";\nimport React, { Component } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport \"./index.css\";\n\nconst interact = require('interactjs');\n\nclass WatermarkPosition extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onImageLoaded = image => {\n      this.imageRef = image;\n    };\n\n    this.onCropComplete = crop => {\n      this.makeClientCrop(crop);\n    };\n\n    this.onCropChange = (crop, percentCrop) => {\n      // You could also use percentCrop:\n      // this.setState({ crop: percentCrop });\n      this.setState({\n        crop\n      });\n    };\n\n    this.getCroppedImg = (image, crop, fileName) => {\n      const canvas = document.createElement('canvas');\n      const scaleX = image.naturalWidth / image.width;\n      const scaleY = image.naturalHeight / image.height;\n      canvas.width = crop.width;\n      canvas.height = crop.height;\n      const ctx = canvas.getContext('2d');\n      ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height);\n    };\n\n    this.handleChange = event => {\n      if (event.target.files[0]) {\n        this.setState({\n          file: URL.createObjectURL(event.target.files[0]),\n          originalFile: event.target.files[0]\n        });\n      }\n    };\n\n    this.handleLogoFile = event => {\n      if (event.target.files[0]) {\n        let oldList = this.state.logoWatermarkList;\n        oldList.push(event.target.files[0]);\n        this.setState({\n          logoWatermarkList: oldList\n        });\n      }\n    };\n\n    this.removeDomElement = e => {\n      let id = this.state.currentEementId;\n      if (id && document.getElementById(id)) document.getElementById(id).remove(); // remove from logo array also \n    };\n\n    this.domChangeHandler = (changeParameter, value) => {\n      // update the element \n      let modifingElement = this.state.currentEementId;\n\n      if (modifingElement) {\n        console.log(\"changing element \", modifingElement);\n        let ele = document.getElementById(modifingElement);\n        console.log(document.getElementById(modifingElement).childNodes[0].innerText);\n\n        if (changeParameter === \"color\") {\n          ele.style.color = value ? value : \"black\";\n        }\n\n        if (changeParameter === \"fontWeight\") {\n          ele.style.fontWeight = value ? value : \"normal\";\n\n          if (value == \"italic\") {\n            ele.style.fontStyle = value ? value : \"normal\";\n          }\n\n          if (value == \"normal\") {\n            ele.style.fontStyle = \"normal\";\n          }\n        }\n\n        if (changeParameter === \"logoRotate\") {\n          if (modifingElement.includes(\"logo\")) {\n            ele.childNodes[0].style.transform = `rotate(${value}deg)`; // only logo rotation\n          }\n        }\n\n        if (changeParameter === \"opacity\") {\n          ele.style.opacity = value ? `0.${value}` : \"0.9\";\n        }\n\n        if (changeParameter === \"textRange\") {\n          if (modifingElement.includes(\"logo\")) {\n            ele.children[0].width = value;\n            ele.children[0].height = value;\n          } else {\n            console.log(value);\n            ele.style.fontSize = `${value}px`;\n          }\n        }\n\n        if (changeParameter === \"watermarkText\") {\n          if (value) {\n            document.getElementById(modifingElement).childNodes[0].innerText = value;\n          } else {\n            document.getElementById(modifingElement).childNodes[0].innerText = \"Click To Edit\";\n          }\n        }\n      }\n    };\n\n    this.finalLogoXY = (aspRatiobyW, aspRatiobyH) => {\n      let vm = this;\n      let finalLogoWatermarkList = [];\n      let jsonArrayLogoWatermarkObj = [];\n\n      for (let index = 0; index < vm.logoWatermarkCount; index++) {\n        let watermarkLogo = document.getElementById(`logo-watermark-${index}`);\n\n        if (watermarkLogo) {\n          let wmLogoImgcurrWidth = watermarkLogo.clientWidth;\n          let wmLogoImgcurrHeight = watermarkLogo.clientHeight - 4;\n          let xyMovesLogo = this.objectMoment(watermarkLogo.style.transform);\n          let rotationAngle = parseInt(watermarkLogo.childNodes[0].style.transform.replace(/\\D/g, \"\"), 10); //  console.log(\"LLL chck\", watermarkLogo, rotationAngle);\n          // xy on original img \n\n          let finalX = aspRatiobyW * xyMovesLogo.xMove;\n          let finalY = aspRatiobyH * xyMovesLogo.yMove; // final height and with of logo img and opacity\n\n          let fW = wmLogoImgcurrWidth * aspRatiobyW;\n          let fH = wmLogoImgcurrHeight * aspRatiobyH;\n          let opacity = watermarkLogo.style.opacity;\n          finalLogoWatermarkList.push({\n            finalX,\n            finalY,\n            fW,\n            fH,\n            opacity,\n            rotationAngle: rotationAngle ? rotationAngle : 0\n          });\n          jsonArrayLogoWatermarkObj.push({\n            watermarkPath: 'C:/Users/purushottam.rajdev/Documents/Watermark/testing/logoA.png',\n            positionX: finalX,\n            positionY: finalY,\n            width: fW,\n            hieght: fH,\n            opacity: opacity,\n            isLogo: 1,\n            rotation: rotationAngle ? rotationAngle : 0\n          });\n        }\n      }\n\n      return jsonArrayLogoWatermarkObj;\n    };\n\n    this.finalTextXY = (aspRatiobyW, aspRatiobyH, basicData) => {\n      let vm = this;\n      let finalTextWatermarkList = [];\n      let jsonArrayTextWatermarkObj = [];\n\n      for (let index = 0; index < vm.textWatermarkCount; index++) {\n        let textElement = document.getElementById(`txt-watermark-${index}`);\n\n        if (textElement) {\n          console.log(textElement);\n          let watermarkObj = {\n            fontSize: parseInt(textElement.style.fontSize, 10),\n            watermarkID: textElement.id,\n            opacity: textElement.style.opacity,\n            fontFamily: textElement.style.fontFamily,\n            position: \"absolute\",\n            // keep same for all\n            color: textElement.style.color,\n            watermarkText: textElement.childNodes[0].innerText,\n            textRotatation: 0 // transformOrigin: \"0 0\"\n\n          }; //let waterMarkText = document.getElementById(txtObj.watermarkID);\n\n          let xyMovesText = this.objectMoment(textElement.style.transform);\n          let finalTextX = aspRatiobyW * xyMovesText.xMove;\n          let finalTextY = aspRatiobyH * xyMovesText.yMove; // 0.018 y move per 1px   + (0.018 * basicData.perviewCoverH)\n\n          let textFper = watermarkObj.fontSize / basicData.previewCoverW * 100;\n          let finalTextF = textFper * basicData.originalCoverW / 100;\n          let textFontName = \"cour\"; //\n\n          finalTextWatermarkList.push({\n            finalTextX,\n            finalTextY,\n            finalTextF,\n            textFontName,\n            opacity: watermarkObj.opacity,\n            color: watermarkObj.color,\n            watermarkText: watermarkObj.watermarkText\n          });\n          jsonArrayTextWatermarkObj.push({\n            \"isLogo\": 0,\n            \"positionX\": finalTextX,\n            \"positionY\": finalTextY,\n            \"opacity\": watermarkObj.opacity,\n            \"watermarkText\": watermarkObj.watermarkText,\n            \"fontColor\": watermarkObj.color,\n            \"fontSize\": finalTextF,\n            \"font\": textFontName\n          });\n        }\n      }\n\n      console.log(finalTextWatermarkList);\n      return jsonArrayTextWatermarkObj;\n    };\n\n    this.objectMoment = xyMove => {\n      if (xyMove) {\n        let movement = xyMove.split(\",\");\n        let positiveX = !movement[0].includes(\"-\");\n        let positiveY = !movement[1].includes(\"-\");\n        let xMove = parseInt(movement[0].replace(/\\D/g, \"\"), 10);\n        xMove = positiveX ? xMove * 1 : xMove * -1;\n        let yMove = parseInt(movement[1].replace(/\\D/g, \"\"), 10);\n        yMove = positiveY ? yMove * 1 : yMove * -1;\n        return {\n          xMove,\n          yMove\n        };\n      }\n    };\n\n    this.checkImg = () => {\n      console.log(\"final State\", this.state); // original img height and width\n      // let originalCoverW = 1000; \n      // let originalCoverH = 750;\n\n      let originalCoverW = this.state.actualImgWidth;\n      let originalCoverH = this.state.actualImgHeight; // bg img wh  --> preivew img height widht \n\n      let cover = document.querySelector(\"#cover\");\n      let previewCoverW = cover.clientWidth;\n      let perviewCoverH = cover.clientHeight;\n      let basicData = {\n        originalCoverW,\n        originalCoverH,\n        previewCoverW,\n        perviewCoverH\n      };\n      console.log(\"details- \", basicData); // for watermark text \n      // distance  x y \n\n      let aspRatiobyW = originalCoverW / previewCoverW; // by width \n\n      let aspRatiobyH = originalCoverH / perviewCoverH; // by h\n\n      let resList = this.finalTextXY(aspRatiobyW, aspRatiobyH, basicData);\n      let resLogoList = this.finalLogoXY(aspRatiobyW, aspRatiobyH, basicData);\n      console.log(resList, resLogoList); //  let finalText1 = this.finalTextXY(aspRatiobyW, aspRatiobyH, txtWatermarkObj1, basicData);\n\n      let jsonReq = {\n        originalResoursePath: 'C:/Users/purushottam.rajdev/Documents/Watermark/testing/gridOrg.jpg',\n        watermarkList: [...resList, ...resLogoList]\n      };\n      console.log(JSON.stringify(jsonReq)); // let finalText = resList[0];  // text 1 watermark\n      // let finalText1 = resList[1]; // text 2 watermark\n      // let finalLogo1 = resLogoList[0]; // logo 1 watermark\n      // if (finalLogo1) {\n      //     let fW = finalLogo1.fW;\n      //     let fH = finalLogo1.fH;\n      //     let finalX = finalLogo1.finalX;\n      //     let finalY = finalLogo1.finalY;\n      //     let finalLogoOpacity = finalLogo1.opacity;\n      //     let logoRotatation = finalLogo1.rotationAngle;\n      // let finalTextX = aspRatiobyW * xyMovesText.xMove;\n      // let finalTextY = aspRatiobyH * xyMovesText.yMove + (0.018 * perviewCoverH); // 0.018 y move per 1px \n      // let textFper = (this.state.fontSize / previewCoverW) * 100;\n      // let finalTextF = (textFper * originalCoverW) / 100;\n      // finalTextX,finalTextY,finalTextF\n      // let url = `ffmpeg -i gridOrg.jpg -i box.jpg -filter_complex \"[1]scale=${fW}:${fH}[a];[a]lut=a=val*0.9[b];[0][b] overlay=${finalX}:${finalY}\" -y watermarkLogo.jpg`\n      //let txtUrl = `ffmpeg -i gridOrg1.jpg -filter_complex \"[0]drawtext=fontfile=cour.ttf:text='${this.state.watermarkText}':fontcolor=${this.state.fontColor}:fontsize=${finalTextF}:x=${finalTextX}:y=${finalTextY}\" -y restextWatermark.jpg`\n      // console.log(txtUrl);\n      // let logoRotation = `ffmpeg -i gridOrg.jpg -i logoA.png -filter_complex \"[1]scale=${fW}:${fH}[a];[a]rotate='${this.state.logoRoatation}*PI/180:ow=hypot(iw,ih):oh=ow:c=none'[a];[0][a]overlay=${finalX}:${finalY}\" -y testRotation.jpg`\n      // let urlTextLogo = `ffmpeg -i gridOrg.jpg -i ${this.state.logoOriginalFile.name} -filter_complex \"[1]scale=${fW}:${fH}[t],[t]lut=a=val*0.${this.state.logoOpacity}[t],[t]rotate=${this.state.logoRoatation}*PI/180[t],[0][t]overlay=${finalX}:${finalY}[i1];[i1]drawtext=fontfile='${finalText.textFontName}.ttf': text='${finalText.watermarkText}':fontcolor=${finalText.color}@0.${finalText.opacity}:fontsize=${finalText.finalTextF}:x=${finalText.finalTextX}:y=${finalText.finalTextY}\" -y res_logoText.jpg`;\n      // console.log(urlTextLogo);\n      // let multiLoogSinglelogUrl = `ffmpeg -i gridOrg.jpg  -i ${this.state.logoOriginalFile.name} -i ${this.state.logoOriginalFile.name} -filter_complex \"[1]scale=${fW}:${fH}[t],[t]lut=a=val*0.${this.state.logoOpacity}[t],\n      // [t]rotate=${this.state.logoRoatation}*PI/180[t],[0][t]overlay=${finalX}:${finalY}[i1];\n      //  [2]scale=${fW}:${fH}[t],[t]lut=a=val*0.${this.state.logoOpacity}[t],[t]rotate=${this.state.logoRoatation}*PI/180[t],[i1][t]overlay=${finalX + 200}:${finalY}[i2];\n      //  [i2]drawtext=fontfile=cour.ttf: text='India':fontcolor=red@0.8:fontsize=20:x=300:y=20\" -preset ultrafast -y multiLogo.jpg\n      // `\n      // (finalText , finalText1);\n      //     let multiTextsingeLogo = `ffmpeg -i gridOrg.jpg -i logoA.png\n      //  -filter_complex \"[1]scale=${fW}:${fH}[t],[t]lut=a=val*${finalLogoOpacity}[t],[t]rotate=${logoRotatation}*PI/180[t],[0][t]overlay=${finalX}:${finalY}[i1];\n      // [i1]drawtext=fontfile=${finalText.textFontName}.ttf: text='${finalText.watermarkText}':fontcolor=${finalText.color}@${finalText.opacity}:fontsize=${finalText.finalTextF}:x=${finalText.finalTextX}:y=${finalText.finalTextY}[i2];\n      // [i2]drawtext=fontfile=${finalText1.textFontName}.ttf: text='${finalText1.watermarkText}':fontcolor=${finalText1.color}@${finalText1.opacity}:fontsize=${finalText1.finalTextF}:x=${finalText1.finalTextX}:y=${finalText1.finalTextY}\" -preset ultrafast -y res_multy_text.jpg`\n      //console.log(multiTextsingeLogo);\n      // let logoRotate_url = `ffmpeg -y -i gridOrg.jpg -i logoA.png -filter_complex \"[1]scale=${fW}:${fH}[scale];[scale]lut=a=val*${finalLogoOpacity}[scale];[scale]rotate=${logoRotatation}*PI/180:ow='rotw(${logoRotatation}*PI/180)':oh='roth(${logoRotatation}*PI/180):c=black@0'[rotate];[0][rotate]overlay=${finalX}-((overlay_w-${fW})/2):${finalY}-((overlay_h-${fH})/2)\" testRotation.jpg`;\n      //console.log(\"rotate url \", logoRotate_url);\n      // }\n    };\n\n    this.addLogoWatermark = () => {\n      let vm = this;\n      let logoList = vm.state.logoWatermarkList;\n      let lastIndex = logoList.length - 1; // let logoStyle = {\n      //     width: this.state.logoSize,\n      //     opacity: `0.${this.state.logoOpacity}`,\n      //     transform: `rotate(${this.state.logoRoatation}deg)`\n      // }\n\n      if (logoList[lastIndex]) {\n        let logoPreviewUrl = URL.createObjectURL(logoList[lastIndex]); // URL.createObjectURL(\n        // <div className=\"draggable-logo\"\n        // id=\"watermarkLogo\"\n        // style={{ position: \"absolute\" }} >\n        // <img src={this.state.logoFile}\n        //     id=\"watermarkLogoImg\"\n        //     style={logoStyle}\n        //     className=\"resizable-logo\"\n        //     />\n        // </div>\n        //     let vm = this;\n\n        let defaultLogo = {\n          watermarkID: `logo-watermark-${vm.logoWatermarkCount}`,\n          opacity: 9,\n          position: \"absolute\",\n          // keep same for all\n          logoRotatation: 0\n        };\n        let logoOne = defaultLogo;\n        let logoStyle = `opacity:0.${logoOne.opacity};  position: absolute; `;\n        let newLogoWatermark = document.createElement('div'); // is a node\n\n        newLogoWatermark.setAttribute(\"class\", \"draggable-logo\");\n        newLogoWatermark.setAttribute(\"style\", logoStyle);\n        newLogoWatermark.setAttribute(\"id\", `${logoOne.watermarkID}`);\n        let subImgDiv = document.createElement('IMG');\n        subImgDiv.setAttribute(\"src\", logoPreviewUrl);\n        subImgDiv.setAttribute(\"width\", \"80\");\n        subImgDiv.setAttribute(\"height\", \"80\");\n        subImgDiv.setAttribute(\"class\", \"resizable-logo\");\n        subImgDiv.setAttribute(\"alt\", `img-${logoOne.watermarkID}`); //     subImgDiv.setAttribute(\"style\", `transform : rotate(${logoOne.logoRotatation}deg)`);\n        //     // subImgDiv.innerHTML = `${logoOne.watermarkText}`;\n\n        newLogoWatermark.appendChild(subImgDiv);\n        console.log(newLogoWatermark);\n\n        newLogoWatermark.onclick = function () {\n          vm.setState({\n            currentEementId: `${logoOne.watermarkID}`\n          });\n          console.log(\"ele changed \", newLogoWatermark, vm.state);\n        }; //     // add to dom \n\n\n        document.getElementById(\"cover\").prepend(newLogoWatermark);\n        vm.logoWatermarkCount++;\n        console.log(\"img added\");\n      }\n    };\n\n    this.addTextWatermark = () => {\n      let vm = this;\n      let defaultText = {\n        fontSize: 20,\n        watermarkID: `txt-watermark-${vm.textWatermarkCount}`,\n        opacity: 9,\n        fontFamily: \"arial\",\n        position: \"absolute\",\n        // keep same for all\n        color: \"red\",\n        watermarkText: \"New Watermark\",\n        textRotatation: 0\n      };\n      let textOne = defaultText;\n      let textOneStyle = `font-size: ${textOne.fontSize}px; opacity:0.${textOne.opacity}; font-family: ${textOne.fontFamily}; position: absolute; color:${textOne.color}; font-weight: bold`;\n      let newTextWatermark = document.createElement('div'); // is a node\n\n      newTextWatermark.setAttribute(\"class\", \"draggable-text\");\n      newTextWatermark.setAttribute(\"style\", textOneStyle);\n      newTextWatermark.setAttribute(\"id\", `${textOne.watermarkID}`);\n      console.log(newTextWatermark);\n      let subTextdiv = document.createElement('div');\n      subTextdiv.setAttribute(\"style\", `transform : rotate(${textOne.textRotatation}deg); line-height: 0.75em;`);\n      subTextdiv.innerHTML = `${textOne.watermarkText}`;\n      newTextWatermark.appendChild(subTextdiv);\n\n      newTextWatermark.onclick = function () {\n        vm.setState({\n          currentEementId: `${textOne.watermarkID}`\n        });\n        console.log(\"ele changed \", newTextWatermark, vm.state);\n      }; // add to dom \n\n\n      document.getElementById(\"cover\").appendChild(newTextWatermark);\n      vm.textWatermarkCount++;\n    };\n\n    this.state = {\n      currentEementId: null,\n      logoWatermarkList: [],\n      fontSize: 20,\n      fontColor: \"red\",\n      rotate: 20,\n      textRotatation: 45,\n      logoRoatation: 180,\n      opacity: 9,\n      logoOpacity: 9,\n      logoSize: 80,\n      watermarkText: \"© free style\",\n      BackgroundImgUrl: \"\",\n      file: \"\",\n      logoFile: \"\",\n      logoOriginalFile: null,\n      originalFile: null,\n      // image parameters\n      actualImgWidth: 1000,\n      actualImgHeight: 750,\n      crop: {\n        unit: '%',\n        width: 30,\n        aspect: 16 / 9\n      }\n    };\n    this.textRotationAngle = 10;\n    this.textWatermarkCount = 0;\n    this.logoWatermarkCount = 0;\n  }\n\n  componentDidMount() {\n    let vm = this; // drag the element on page \n\n    const position = {\n      x: 0,\n      y: 0\n    };\n    interact('.draggable-logo').draggable({\n      listeners: {\n        start(event) {// console.log(event.type, event.target)\n        },\n\n        move(event) {\n          position.x += event.dx;\n          position.y += event.dy;\n          event.target.style.transform = `translate(${position.x}px, ${position.y}px)`;\n          console.log(event.type, event.target);\n        }\n\n      }\n    }); // resize the element \n\n    interact(\".resizable-logo\").resizable({\n      edges: {\n        left: false,\n        right: true,\n        bottom: true,\n        top: false\n      },\n      // modifiers: [\n      //   interact.modifiers.restrictEdges({\n      //     outer: \"parent\",\n      //     endOnly: true\n      //   })\n      // ],\n      inertia: true,\n      modifiers: [// keep the edges inside the parent\n      // interact.modifiers.restrictEdges({\n      //   outer: 'parent'\n      // }),\n      // minimum size\n      interact.modifiers.restrictSize({\n        min: {\n          width: 20,\n          height: 20\n        }\n      })]\n    }).on(\"resizemove\", function (event) {\n      var target = event.target;\n      console.log(target);\n      target.style.width = event.rect.width + \"px\";\n      target.style.height = event.rect.height + \"px\";\n    }); // text drag(move)\n\n    interact('.draggable-text').draggable({\n      listeners: {\n        start(event) {},\n\n        move(event) {\n          position.x += event.dx;\n          position.y += event.dy;\n          console.log(event.target.style.transform);\n          event.target.style.transform = `translate(${position.x}px, ${position.y}px)`;\n        }\n\n      }\n    }); // resize the element \n    // interact(\".resizable-text\")\n    // .resizable({\n    //         edges: { left: false, right: true, bottom: true, top: false },\n    //         // modifiers: [\n    //         //   interact.modifiers.restrictEdges({\n    //         //     outer: \"parent\",\n    //         //     endOnly: true\n    //         //   })\n    //         // ],\n    //         inertia: true\n    //     })\n    //     .on(\"resizemove\", function(event) {\n    //         var target = event.target\n    //         console.log(event);\n    //         target.style.width = event.rect.width + \"px\"\n    //         target.style.height = event.rect.height + \"px\"\n    //     })\n  } // img crop start \n\n\n  async makeClientCrop(crop) {\n    if (this.imageRef && crop.width && crop.height) {\n      const croppedImageUrl = await this.getCroppedImg(this.imageRef, crop, 'newFile.jpeg');\n      this.setState({\n        croppedImageUrl\n      });\n    }\n  }\n\n  render() {\n    let editorConsole = {\n      position: \"relative\",\n      backgroundImage: `url(${this.state.file})`,\n      width: \"500px\",\n      height: \"375px\"\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665\n      },\n      __self: this\n    }, \"User Inputs\"), \"cover: \", React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666\n      },\n      __self: this\n    }), \"logo : \", React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleLogoFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => {\n        this.addLogoWatermark();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668\n      },\n      __self: this\n    }, \"Add Logo\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670\n      },\n      __self: this\n    }), \"text Editor : text : \", React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.domChangeHandler(\"watermarkText\", e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      id: \"textColors\",\n      onChange: e => this.domChangeHandler(\"color\", e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675\n      },\n      __self: this\n    }, \"red\"), React.createElement(\"option\", {\n      value: \"yellow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676\n      },\n      __self: this\n    }, \"yellow\"), React.createElement(\"option\", {\n      value: \"pink\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677\n      },\n      __self: this\n    }, \"pink\"), React.createElement(\"option\", {\n      value: \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 678\n      },\n      __self: this\n    }, \"green\"), React.createElement(\"option\", {\n      value: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679\n      },\n      __self: this\n    }, \"blue\")), \"font Weight :\", React.createElement(\"select\", {\n      id: \"textColors\",\n      onChange: e => this.domChangeHandler(\"fontWeight\", e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683\n      },\n      __self: this\n    }, \"normal\"), React.createElement(\"option\", {\n      value: \"bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684\n      },\n      __self: this\n    }, \"bold\"), React.createElement(\"option\", {\n      value: \"italic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685\n      },\n      __self: this\n    }, \"italic\")), \"Logo Rotation \", React.createElement(\"input\", {\n      type: \"range\",\n      name: \"logoRotate\",\n      min: 0,\n      max: 360,\n      onChange: e => this.domChangeHandler(\"logoRotate\", e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689\n      },\n      __self: this\n    }), \"Opacity : \", React.createElement(\"input\", {\n      type: \"range\",\n      name: \"points\",\n      min: \"1\",\n      max: \"9\",\n      onChange: e => this.domChangeHandler(\"opacity\", e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692\n      },\n      __self: this\n    }), \"Size : \", React.createElement(\"input\", {\n      type: \"range\",\n      name: \"points\",\n      min: \"5\",\n      max: \"100\",\n      onChange: e => this.domChangeHandler(\"textRange\", e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.checkImg(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707\n      },\n      __self: this\n    }, \" check Img\"), React.createElement(\"button\", {\n      onClick: () => this.addTextWatermark(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708\n      },\n      __self: this\n    }, \" Add Text\"), React.createElement(\"button\", {\n      onClick: () => this.removeDomElement(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 709\n      },\n      __self: this\n    }, \"Remove Ele\")), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 712\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"watermark-playground\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"editor-console\",\n      id: \"cover\",\n      style: editorConsole,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716\n      },\n      __self: this\n    }, React.createElement(ReactCrop, {\n      src: this.state.file,\n      crop: this.state.crop,\n      ruleOfThirds: true,\n      onImageLoaded: this.onImageLoaded,\n      onComplete: this.onCropComplete,\n      onChange: this.onCropChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 732\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 747\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 748\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default WatermarkPosition;","map":{"version":3,"sources":["C:/audi_/ESPL_projects/facebook/src/components/watermarks/updatedEditorWithCropImg.js"],"names":["React","Component","ReactCrop","interact","require","WatermarkPosition","constructor","props","onImageLoaded","image","imageRef","onCropComplete","crop","makeClientCrop","onCropChange","percentCrop","setState","getCroppedImg","fileName","canvas","document","createElement","scaleX","naturalWidth","width","scaleY","naturalHeight","height","ctx","getContext","drawImage","x","y","handleChange","event","target","files","file","URL","createObjectURL","originalFile","handleLogoFile","oldList","state","logoWatermarkList","push","removeDomElement","e","id","currentEementId","getElementById","remove","domChangeHandler","changeParameter","value","modifingElement","console","log","ele","childNodes","innerText","style","color","fontWeight","fontStyle","includes","transform","opacity","children","fontSize","finalLogoXY","aspRatiobyW","aspRatiobyH","vm","finalLogoWatermarkList","jsonArrayLogoWatermarkObj","index","logoWatermarkCount","watermarkLogo","wmLogoImgcurrWidth","clientWidth","wmLogoImgcurrHeight","clientHeight","xyMovesLogo","objectMoment","rotationAngle","parseInt","replace","finalX","xMove","finalY","yMove","fW","fH","watermarkPath","positionX","positionY","hieght","isLogo","rotation","finalTextXY","basicData","finalTextWatermarkList","jsonArrayTextWatermarkObj","textWatermarkCount","textElement","watermarkObj","watermarkID","fontFamily","position","watermarkText","textRotatation","xyMovesText","finalTextX","finalTextY","textFper","previewCoverW","finalTextF","originalCoverW","textFontName","xyMove","movement","split","positiveX","positiveY","checkImg","actualImgWidth","originalCoverH","actualImgHeight","cover","querySelector","perviewCoverH","resList","resLogoList","jsonReq","originalResoursePath","watermarkList","JSON","stringify","addLogoWatermark","logoList","lastIndex","length","logoPreviewUrl","defaultLogo","logoRotatation","logoOne","logoStyle","newLogoWatermark","setAttribute","subImgDiv","appendChild","onclick","prepend","addTextWatermark","defaultText","textOne","textOneStyle","newTextWatermark","subTextdiv","innerHTML","fontColor","rotate","logoRoatation","logoOpacity","logoSize","BackgroundImgUrl","logoFile","logoOriginalFile","unit","aspect","textRotationAngle","componentDidMount","draggable","listeners","start","move","dx","dy","type","resizable","edges","left","right","bottom","top","inertia","modifiers","restrictSize","min","on","rect","croppedImageUrl","render","editorConsole","backgroundImage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\n\r\nimport \"./index.css\";\r\nconst interact = require('interactjs')\r\n\r\n\r\nclass WatermarkPosition extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentEementId: null,\r\n            logoWatermarkList: [],\r\n            fontSize: 20,\r\n            fontColor: \"red\",\r\n            rotate: 20,\r\n            textRotatation: 45,\r\n            logoRoatation: 180,\r\n            opacity: 9,\r\n            logoOpacity: 9,\r\n            logoSize: 80,\r\n            watermarkText: \"© free style\",\r\n            BackgroundImgUrl: \"\",\r\n            file: \"\",\r\n            logoFile: \"\",\r\n\r\n            logoOriginalFile: null,\r\n            originalFile: null,\r\n\r\n            // image parameters\r\n            actualImgWidth: 1000,\r\n            actualImgHeight: 750,\r\n\r\n            crop: {\r\n                unit: '%',\r\n                width: 30,\r\n                aspect: 16 / 9,\r\n            },\r\n        }\r\n\r\n        this.textRotationAngle = 10;\r\n        this.textWatermarkCount = 0;\r\n        this.logoWatermarkCount = 0;\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        let vm = this;\r\n\r\n        // drag the element on page \r\n        const position = { x: 0, y: 0 }\r\n        interact('.draggable-logo').draggable({\r\n            listeners: {\r\n                start(event) {\r\n                    // console.log(event.type, event.target)\r\n                },\r\n                move(event) {\r\n                    position.x += event.dx\r\n                    position.y += event.dy\r\n\r\n                    event.target.style.transform =\r\n                        `translate(${position.x}px, ${position.y}px)`\r\n\r\n                    console.log(event.type, event.target)\r\n                },\r\n\r\n            }\r\n        })\r\n\r\n        // resize the element \r\n        interact(\".resizable-logo\")\r\n            .resizable({\r\n                edges: { left: false, right: true, bottom: true, top: false },\r\n                // modifiers: [\r\n                //   interact.modifiers.restrictEdges({\r\n                //     outer: \"parent\",\r\n                //     endOnly: true\r\n                //   })\r\n                // ],\r\n                inertia: true,\r\n                modifiers: [\r\n                    // keep the edges inside the parent\r\n                    // interact.modifiers.restrictEdges({\r\n                    //   outer: 'parent'\r\n                    // }),\r\n\r\n                    // minimum size\r\n                    interact.modifiers.restrictSize({\r\n                        min: { width: 20, height: 20 }\r\n                    })\r\n                ],\r\n            })\r\n            .on(\"resizemove\", function (event) {\r\n                var target = event.target\r\n                console.log(target);\r\n                target.style.width = event.rect.width + \"px\"\r\n                target.style.height = event.rect.height + \"px\"\r\n            })\r\n\r\n\r\n        // text drag(move)\r\n        interact('.draggable-text').draggable({\r\n            listeners: {\r\n                start(event) {\r\n                },\r\n                move(event) {\r\n                    position.x += event.dx\r\n                    position.y += event.dy\r\n                    console.log(event.target.style.transform);\r\n                    event.target.style.transform =\r\n                        `translate(${position.x}px, ${position.y}px)`\r\n                },\r\n\r\n            }\r\n        })\r\n\r\n        // resize the element \r\n        // interact(\".resizable-text\")\r\n        // .resizable({\r\n        //         edges: { left: false, right: true, bottom: true, top: false },\r\n        //         // modifiers: [\r\n        //         //   interact.modifiers.restrictEdges({\r\n        //         //     outer: \"parent\",\r\n        //         //     endOnly: true\r\n        //         //   })\r\n        //         // ],\r\n        //         inertia: true\r\n        //     })\r\n        //     .on(\"resizemove\", function(event) {\r\n        //         var target = event.target\r\n        //         console.log(event);\r\n        //         target.style.width = event.rect.width + \"px\"\r\n        //         target.style.height = event.rect.height + \"px\"\r\n        //     })\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    // img crop start \r\n\r\n    onImageLoaded = image => {\r\n        this.imageRef = image;\r\n      };\r\n    \r\n      onCropComplete = crop => {\r\n        this.makeClientCrop(crop);\r\n      };\r\n    \r\n      onCropChange = (crop, percentCrop) => {\r\n        // You could also use percentCrop:\r\n        // this.setState({ crop: percentCrop });\r\n        this.setState({ crop });\r\n      };\r\n\r\n      async makeClientCrop(crop) {\r\n        if (this.imageRef && crop.width && crop.height) {\r\n          const croppedImageUrl = await this.getCroppedImg(\r\n            this.imageRef,\r\n            crop,\r\n            'newFile.jpeg'\r\n          );\r\n          this.setState({ croppedImageUrl });\r\n        }\r\n      }\r\n\r\n      getCroppedImg = (image, crop, fileName) => {\r\n        const canvas = document.createElement('canvas');\r\n        const scaleX = image.naturalWidth / image.width;\r\n        const scaleY = image.naturalHeight / image.height;\r\n        canvas.width = crop.width;\r\n        canvas.height = crop.height;\r\n        const ctx = canvas.getContext('2d');\r\n    \r\n        ctx.drawImage(\r\n          image,\r\n          crop.x * scaleX,\r\n          crop.y * scaleY,\r\n          crop.width * scaleX,\r\n          crop.height * scaleY,\r\n          0,\r\n          0,\r\n          crop.width,\r\n          crop.height\r\n        );\r\n\r\n      }\r\n      \r\n    // img crop end\r\n\r\n\r\n\r\n    handleChange = (event) => {\r\n\r\n        if (event.target.files[0]) {\r\n            this.setState({\r\n                file: URL.createObjectURL(event.target.files[0]),\r\n                originalFile: event.target.files[0]\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    handleLogoFile = (event) => {\r\n        if (event.target.files[0]) {\r\n            let oldList = this.state.logoWatermarkList\r\n            oldList.push(event.target.files[0]);\r\n            this.setState({\r\n                logoWatermarkList: oldList\r\n            })\r\n        }\r\n    }\r\n\r\n    removeDomElement = (e) => {\r\n        let id = this.state.currentEementId;\r\n        if (id && document.getElementById(id)) document.getElementById(id).remove();\r\n\r\n        // remove from logo array also \r\n    }\r\n\r\n\r\n    domChangeHandler = (changeParameter, value) => {\r\n\r\n        // update the element \r\n\r\n        let modifingElement = this.state.currentEementId;\r\n\r\n        if (modifingElement) {\r\n            console.log(\"changing element \", modifingElement)\r\n            let ele = document.getElementById(modifingElement);\r\n            console.log(document.getElementById(modifingElement).childNodes[0].innerText);\r\n\r\n            if (changeParameter === \"color\") {\r\n                ele.style.color = value ? value : \"black\";\r\n            }\r\n\r\n            if (changeParameter === \"fontWeight\") {\r\n                ele.style.fontWeight = value ? value : \"normal\";\r\n                if (value == \"italic\") {\r\n                    ele.style.fontStyle = value ? value : \"normal\"\r\n                }\r\n\r\n                if (value == \"normal\") {\r\n                    ele.style.fontStyle = \"normal\"\r\n                }\r\n            }\r\n\r\n            if (changeParameter === \"logoRotate\") {\r\n\r\n                if (modifingElement.includes(\"logo\")) {\r\n                    ele.childNodes[0].style.transform = `rotate(${value}deg)` // only logo rotation\r\n                }\r\n            }\r\n\r\n\r\n            if (changeParameter === \"opacity\") {\r\n                ele.style.opacity = value ? `0.${value}` : \"0.9\";\r\n            }\r\n\r\n            if (changeParameter === \"textRange\") {\r\n\r\n                if (modifingElement.includes(\"logo\")) {\r\n                    ele.children[0].width = value;\r\n                    ele.children[0].height = value;\r\n                } else {\r\n                    console.log(value);\r\n                    ele.style.fontSize = `${value}px`;\r\n                }\r\n            }\r\n\r\n            if (changeParameter === \"watermarkText\") {\r\n                if (value) {\r\n                    document.getElementById(modifingElement).childNodes[0].innerText = value\r\n                } else {\r\n                    document.getElementById(modifingElement).childNodes[0].innerText = \"Click To Edit\"\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    finalLogoXY = (aspRatiobyW, aspRatiobyH) => {\r\n        let vm = this;\r\n        let finalLogoWatermarkList = [];\r\n        let jsonArrayLogoWatermarkObj = [];\r\n        for (let index = 0; index < vm.logoWatermarkCount; index++) {\r\n\r\n            let watermarkLogo = document.getElementById(`logo-watermark-${index}`);\r\n\r\n            if (watermarkLogo) {\r\n\r\n                let wmLogoImgcurrWidth = watermarkLogo.clientWidth;\r\n                let wmLogoImgcurrHeight = watermarkLogo.clientHeight - 4;\r\n\r\n                let xyMovesLogo = this.objectMoment(watermarkLogo.style.transform);\r\n\r\n                let rotationAngle = parseInt(watermarkLogo.childNodes[0].style.transform.replace(/\\D/g, \"\"), 10);\r\n                //  console.log(\"LLL chck\", watermarkLogo, rotationAngle);\r\n                // xy on original img \r\n                let finalX = aspRatiobyW * xyMovesLogo.xMove;\r\n                let finalY = aspRatiobyH * xyMovesLogo.yMove;\r\n\r\n                // final height and with of logo img and opacity\r\n                let fW = wmLogoImgcurrWidth * aspRatiobyW;\r\n                let fH = wmLogoImgcurrHeight * aspRatiobyH;\r\n                let opacity = watermarkLogo.style.opacity;\r\n\r\n                finalLogoWatermarkList.push({\r\n                    finalX, finalY, fW, fH, opacity,\r\n                    rotationAngle: rotationAngle ? rotationAngle : 0\r\n                })\r\n\r\n                jsonArrayLogoWatermarkObj.push({\r\n                    watermarkPath: 'C:/Users/purushottam.rajdev/Documents/Watermark/testing/logoA.png',\r\n                    positionX: finalX,\r\n                    positionY: finalY,\r\n                    width: fW,\r\n                    hieght: fH,\r\n                    opacity: opacity,\r\n                    isLogo: 1,\r\n                    rotation: rotationAngle ? rotationAngle : 0\r\n                })\r\n\r\n\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return jsonArrayLogoWatermarkObj;\r\n\r\n\r\n    }\r\n\r\n\r\n    finalTextXY = (aspRatiobyW, aspRatiobyH, basicData) => {\r\n\r\n        let vm = this;\r\n        let finalTextWatermarkList = [];\r\n\r\n        let jsonArrayTextWatermarkObj = []\r\n\r\n        for (let index = 0; index < vm.textWatermarkCount; index++) {\r\n\r\n            let textElement = document.getElementById(`txt-watermark-${index}`);\r\n            if (textElement) {\r\n                console.log(textElement);\r\n\r\n                let watermarkObj = {\r\n                    fontSize: parseInt(textElement.style.fontSize, 10),\r\n                    watermarkID: textElement.id,\r\n                    opacity: textElement.style.opacity,\r\n                    fontFamily: textElement.style.fontFamily,\r\n                    position: \"absolute\",  // keep same for all\r\n                    color: textElement.style.color,\r\n                    watermarkText: textElement.childNodes[0].innerText,\r\n                    textRotatation: 0\r\n                    // transformOrigin: \"0 0\"\r\n                }\r\n\r\n                //let waterMarkText = document.getElementById(txtObj.watermarkID);\r\n                let xyMovesText = this.objectMoment(textElement.style.transform);\r\n                let finalTextX = aspRatiobyW * xyMovesText.xMove;\r\n                let finalTextY = aspRatiobyH * xyMovesText.yMove; // 0.018 y move per 1px   + (0.018 * basicData.perviewCoverH)\r\n                let textFper = (watermarkObj.fontSize / basicData.previewCoverW) * 100;\r\n                let finalTextF = (textFper * basicData.originalCoverW) / 100;\r\n\r\n                let textFontName = \"cour\";  //\r\n                finalTextWatermarkList.push({\r\n                    finalTextX,\r\n                    finalTextY,\r\n                    finalTextF,\r\n                    textFontName,\r\n                    opacity: watermarkObj.opacity,\r\n                    color: watermarkObj.color,\r\n                    watermarkText: watermarkObj.watermarkText\r\n                });\r\n\r\n                jsonArrayTextWatermarkObj.push({\r\n                    \"isLogo\": 0,\r\n                    \"positionX\": finalTextX,\r\n                    \"positionY\": finalTextY,\r\n                    \"opacity\": watermarkObj.opacity,\r\n                    \"watermarkText\": watermarkObj.watermarkText,\r\n                    \"fontColor\": watermarkObj.color,\r\n                    \"fontSize\": finalTextF,\r\n                    \"font\": textFontName,\r\n                })\r\n\r\n            }\r\n\r\n        }\r\n\r\n        console.log(finalTextWatermarkList);\r\n        return jsonArrayTextWatermarkObj;\r\n    }\r\n\r\n    objectMoment = (xyMove) => {\r\n        if (xyMove) {\r\n            let movement = xyMove.split(\",\");\r\n            let positiveX = !movement[0].includes(\"-\");\r\n            let positiveY = !movement[1].includes(\"-\");\r\n            let xMove = parseInt(movement[0].replace(/\\D/g, \"\"), 10);\r\n            xMove = positiveX ? xMove * 1 : xMove * -1;\r\n            let yMove = parseInt(movement[1].replace(/\\D/g, \"\"), 10);\r\n            yMove = positiveY ? yMove * 1 : yMove * -1;\r\n\r\n            return {\r\n                xMove,\r\n                yMove\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkImg = () => {\r\n\r\n        console.log(\"final State\", this.state);\r\n\r\n        // original img height and width\r\n        // let originalCoverW = 1000; \r\n        // let originalCoverH = 750;\r\n\r\n        let originalCoverW = this.state.actualImgWidth;\r\n        let originalCoverH = this.state.actualImgHeight;\r\n\r\n        // bg img wh  --> preivew img height widht \r\n        let cover = document.querySelector(\"#cover\");\r\n        let previewCoverW = cover.clientWidth;\r\n        let perviewCoverH = cover.clientHeight;\r\n\r\n\r\n\r\n        let basicData = {\r\n            originalCoverW,\r\n            originalCoverH,\r\n            previewCoverW,\r\n            perviewCoverH\r\n        }\r\n\r\n        console.log(\"details- \", basicData);\r\n        // for watermark text \r\n\r\n\r\n        // distance  x y \r\n        let aspRatiobyW = originalCoverW / previewCoverW;  // by width \r\n        let aspRatiobyH = originalCoverH / perviewCoverH; // by h\r\n\r\n\r\n\r\n        let resList = this.finalTextXY(aspRatiobyW, aspRatiobyH, basicData);\r\n        let resLogoList = this.finalLogoXY(aspRatiobyW, aspRatiobyH, basicData);\r\n\r\n\r\n        console.log(resList, resLogoList);\r\n\r\n        //  let finalText1 = this.finalTextXY(aspRatiobyW, aspRatiobyH, txtWatermarkObj1, basicData);\r\n\r\n        let jsonReq = {\r\n            originalResoursePath: 'C:/Users/purushottam.rajdev/Documents/Watermark/testing/gridOrg.jpg',\r\n            watermarkList: [...resList, ...resLogoList]\r\n        }\r\n\r\n\r\n\r\n        console.log(JSON.stringify(jsonReq));\r\n\r\n        // let finalText = resList[0];  // text 1 watermark\r\n        // let finalText1 = resList[1]; // text 2 watermark\r\n        // let finalLogo1 = resLogoList[0]; // logo 1 watermark\r\n\r\n        // if (finalLogo1) {\r\n\r\n        //     let fW = finalLogo1.fW;\r\n        //     let fH = finalLogo1.fH;\r\n        //     let finalX = finalLogo1.finalX;\r\n        //     let finalY = finalLogo1.finalY;\r\n        //     let finalLogoOpacity = finalLogo1.opacity;\r\n        //     let logoRotatation = finalLogo1.rotationAngle;\r\n\r\n\r\n        // let finalTextX = aspRatiobyW * xyMovesText.xMove;\r\n        // let finalTextY = aspRatiobyH * xyMovesText.yMove + (0.018 * perviewCoverH); // 0.018 y move per 1px \r\n\r\n\r\n        // let textFper = (this.state.fontSize / previewCoverW) * 100;\r\n        // let finalTextF = (textFper * originalCoverW) / 100;\r\n\r\n        // finalTextX,finalTextY,finalTextF\r\n\r\n\r\n        // let url = `ffmpeg -i gridOrg.jpg -i box.jpg -filter_complex \"[1]scale=${fW}:${fH}[a];[a]lut=a=val*0.9[b];[0][b] overlay=${finalX}:${finalY}\" -y watermarkLogo.jpg`\r\n        //let txtUrl = `ffmpeg -i gridOrg1.jpg -filter_complex \"[0]drawtext=fontfile=cour.ttf:text='${this.state.watermarkText}':fontcolor=${this.state.fontColor}:fontsize=${finalTextF}:x=${finalTextX}:y=${finalTextY}\" -y restextWatermark.jpg`\r\n\r\n        // console.log(txtUrl);\r\n\r\n        // let logoRotation = `ffmpeg -i gridOrg.jpg -i logoA.png -filter_complex \"[1]scale=${fW}:${fH}[a];[a]rotate='${this.state.logoRoatation}*PI/180:ow=hypot(iw,ih):oh=ow:c=none'[a];[0][a]overlay=${finalX}:${finalY}\" -y testRotation.jpg`\r\n\r\n        // let urlTextLogo = `ffmpeg -i gridOrg.jpg -i ${this.state.logoOriginalFile.name} -filter_complex \"[1]scale=${fW}:${fH}[t],[t]lut=a=val*0.${this.state.logoOpacity}[t],[t]rotate=${this.state.logoRoatation}*PI/180[t],[0][t]overlay=${finalX}:${finalY}[i1];[i1]drawtext=fontfile='${finalText.textFontName}.ttf': text='${finalText.watermarkText}':fontcolor=${finalText.color}@0.${finalText.opacity}:fontsize=${finalText.finalTextF}:x=${finalText.finalTextX}:y=${finalText.finalTextY}\" -y res_logoText.jpg`;\r\n\r\n        // console.log(urlTextLogo);\r\n\r\n        // let multiLoogSinglelogUrl = `ffmpeg -i gridOrg.jpg  -i ${this.state.logoOriginalFile.name} -i ${this.state.logoOriginalFile.name} -filter_complex \"[1]scale=${fW}:${fH}[t],[t]lut=a=val*0.${this.state.logoOpacity}[t],\r\n        // [t]rotate=${this.state.logoRoatation}*PI/180[t],[0][t]overlay=${finalX}:${finalY}[i1];\r\n        //  [2]scale=${fW}:${fH}[t],[t]lut=a=val*0.${this.state.logoOpacity}[t],[t]rotate=${this.state.logoRoatation}*PI/180[t],[i1][t]overlay=${finalX + 200}:${finalY}[i2];\r\n        //  [i2]drawtext=fontfile=cour.ttf: text='India':fontcolor=red@0.8:fontsize=20:x=300:y=20\" -preset ultrafast -y multiLogo.jpg\r\n        // `\r\n\r\n        // (finalText , finalText1);\r\n        //     let multiTextsingeLogo = `ffmpeg -i gridOrg.jpg -i logoA.png\r\n        //  -filter_complex \"[1]scale=${fW}:${fH}[t],[t]lut=a=val*${finalLogoOpacity}[t],[t]rotate=${logoRotatation}*PI/180[t],[0][t]overlay=${finalX}:${finalY}[i1];\r\n        // [i1]drawtext=fontfile=${finalText.textFontName}.ttf: text='${finalText.watermarkText}':fontcolor=${finalText.color}@${finalText.opacity}:fontsize=${finalText.finalTextF}:x=${finalText.finalTextX}:y=${finalText.finalTextY}[i2];\r\n        // [i2]drawtext=fontfile=${finalText1.textFontName}.ttf: text='${finalText1.watermarkText}':fontcolor=${finalText1.color}@${finalText1.opacity}:fontsize=${finalText1.finalTextF}:x=${finalText1.finalTextX}:y=${finalText1.finalTextY}\" -preset ultrafast -y res_multy_text.jpg`\r\n\r\n        //console.log(multiTextsingeLogo);\r\n\r\n\r\n        // let logoRotate_url = `ffmpeg -y -i gridOrg.jpg -i logoA.png -filter_complex \"[1]scale=${fW}:${fH}[scale];[scale]lut=a=val*${finalLogoOpacity}[scale];[scale]rotate=${logoRotatation}*PI/180:ow='rotw(${logoRotatation}*PI/180)':oh='roth(${logoRotatation}*PI/180):c=black@0'[rotate];[0][rotate]overlay=${finalX}-((overlay_w-${fW})/2):${finalY}-((overlay_h-${fH})/2)\" testRotation.jpg`;\r\n        //console.log(\"rotate url \", logoRotate_url);\r\n\r\n\r\n\r\n        // }\r\n    }\r\n\r\n\r\n    addLogoWatermark = () => {\r\n\r\n        let vm = this;\r\n        let logoList = vm.state.logoWatermarkList;\r\n        let lastIndex = logoList.length - 1;\r\n\r\n        // let logoStyle = {\r\n        //     width: this.state.logoSize,\r\n        //     opacity: `0.${this.state.logoOpacity}`,\r\n        //     transform: `rotate(${this.state.logoRoatation}deg)`\r\n        // }\r\n\r\n\r\n\r\n        if (logoList[lastIndex]) {\r\n\r\n            let logoPreviewUrl = URL.createObjectURL(logoList[lastIndex]);\r\n            // URL.createObjectURL(\r\n\r\n            // <div className=\"draggable-logo\"\r\n            // id=\"watermarkLogo\"\r\n            // style={{ position: \"absolute\" }} >\r\n            // <img src={this.state.logoFile}\r\n            //     id=\"watermarkLogoImg\"\r\n            //     style={logoStyle}\r\n\r\n            //     className=\"resizable-logo\"\r\n            //     />\r\n            // </div>\r\n\r\n\r\n\r\n            //     let vm = this;\r\n            let defaultLogo = {\r\n                watermarkID: `logo-watermark-${vm.logoWatermarkCount}`,\r\n                opacity: 9,\r\n                position: \"absolute\",  // keep same for all\r\n                logoRotatation: 0\r\n            }\r\n\r\n            let logoOne = defaultLogo;\r\n            let logoStyle = `opacity:0.${logoOne.opacity};  position: absolute; `;\r\n            let newLogoWatermark = document.createElement('div'); // is a node\r\n            newLogoWatermark.setAttribute(\"class\", \"draggable-logo\");\r\n            newLogoWatermark.setAttribute(\"style\", logoStyle);\r\n            newLogoWatermark.setAttribute(\"id\", `${logoOne.watermarkID}`);\r\n            let subImgDiv = document.createElement('IMG');\r\n            subImgDiv.setAttribute(\"src\", logoPreviewUrl);\r\n            subImgDiv.setAttribute(\"width\", \"80\");\r\n            subImgDiv.setAttribute(\"height\", \"80\");\r\n            subImgDiv.setAttribute(\"class\", \"resizable-logo\");\r\n            subImgDiv.setAttribute(\"alt\", `img-${logoOne.watermarkID}`);\r\n\r\n            //     subImgDiv.setAttribute(\"style\", `transform : rotate(${logoOne.logoRotatation}deg)`);\r\n            //     // subImgDiv.innerHTML = `${logoOne.watermarkText}`;\r\n            newLogoWatermark.appendChild(subImgDiv);\r\n            console.log(newLogoWatermark);\r\n\r\n            newLogoWatermark.onclick = function () {\r\n                vm.setState({ currentEementId: `${logoOne.watermarkID}` })\r\n                console.log(\"ele changed \", newLogoWatermark, vm.state);\r\n            };\r\n\r\n            //     // add to dom \r\n            document.getElementById(\"cover\").prepend(newLogoWatermark);\r\n            vm.logoWatermarkCount++;\r\n\r\n            console.log(\"img added\");\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    addTextWatermark = () => {\r\n\r\n        let vm = this;\r\n        let defaultText = {\r\n            fontSize: 20,\r\n            watermarkID: `txt-watermark-${vm.textWatermarkCount}`,\r\n            opacity: 9,\r\n            fontFamily: \"arial\",\r\n            position: \"absolute\",  // keep same for all\r\n            color: \"red\",\r\n            watermarkText: \"New Watermark\",\r\n            textRotatation: 0\r\n        }\r\n\r\n        let textOne = defaultText\r\n\r\n        let textOneStyle = `font-size: ${textOne.fontSize}px; opacity:0.${textOne.opacity}; font-family: ${textOne.fontFamily}; position: absolute; color:${textOne.color}; font-weight: bold`;\r\n        let newTextWatermark = document.createElement('div'); // is a node\r\n\r\n        newTextWatermark.setAttribute(\"class\", \"draggable-text\");\r\n        newTextWatermark.setAttribute(\"style\", textOneStyle);\r\n        newTextWatermark.setAttribute(\"id\", `${textOne.watermarkID}`);\r\n        console.log(newTextWatermark);\r\n\r\n        let subTextdiv = document.createElement('div');\r\n        subTextdiv.setAttribute(\"style\", `transform : rotate(${textOne.textRotatation}deg); line-height: 0.75em;`);\r\n        subTextdiv.innerHTML = `${textOne.watermarkText}`;\r\n        newTextWatermark.appendChild(subTextdiv);\r\n\r\n        newTextWatermark.onclick = function () {\r\n            vm.setState({ currentEementId: `${textOne.watermarkID}` })\r\n            console.log(\"ele changed \", newTextWatermark, vm.state);\r\n        };\r\n\r\n        // add to dom \r\n        document.getElementById(\"cover\").appendChild(newTextWatermark);\r\n        vm.textWatermarkCount++;\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let editorConsole = {\r\n            position: \"relative\",\r\n            backgroundImage: `url(${this.state.file})`,\r\n            width: \"500px\",\r\n            height: \"375px\",\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n\r\n                <div>\r\n                    <h4>User Inputs</h4>\r\n                    cover: <input type=\"file\" onChange={this.handleChange} />\r\n                    logo : <input type=\"file\" onChange={this.handleLogoFile} />\r\n                    <button onClick={() => { this.addLogoWatermark() }}>Add Logo</button>\r\n\r\n                    <br />\r\n\r\n                    text Editor :\r\n                    text : <input type=\"text\" onChange={e => this.domChangeHandler(\"watermarkText\", e.target.value)} />\r\n                    <select id=\"textColors\" onChange={e => this.domChangeHandler(\"color\", e.target.value)}>\r\n                        <option value=\"red\">red</option>\r\n                        <option value=\"yellow\">yellow</option>\r\n                        <option value=\"pink\">pink</option>\r\n                        <option value=\"green\">green</option>\r\n                        <option value=\"blue\">blue</option>\r\n                    </select>\r\n                    font Weight :\r\n                    <select id=\"textColors\" onChange={e => this.domChangeHandler(\"fontWeight\", e.target.value)}>\r\n                        <option value=\"normal\">normal</option>\r\n                        <option value=\"bold\">bold</option>\r\n                        <option value=\"italic\">italic</option>\r\n\r\n                    </select>\r\n\r\n                    Logo Rotation <input type=\"range\" name=\"logoRotate\" min={0} max={360}\r\n                        onChange={e => this.domChangeHandler(\"logoRotate\", e.target.value)} />\r\n\r\n                    Opacity : <input type=\"range\" name=\"points\" min=\"1\" max=\"9\"\r\n                        onChange={e => this.domChangeHandler(\"opacity\", e.target.value)} />\r\n                    Size : <input type=\"range\" name=\"points\" min=\"5\" max=\"100\"\r\n                        onChange={e => this.domChangeHandler(\"textRange\", e.target.value)} />\r\n                    <br />\r\n\r\n\r\n                    {/* logoRotate <input type=\"number\" onChange={ (e) => this.setState({ textRotatation : parseInt(e.target.value, 10)})} />  */}\r\n\r\n\r\n\r\n                </div>\r\n\r\n                <span>\r\n\r\n                    <button onClick={() => this.checkImg()}> check Img</button>\r\n                    <button onClick={() => this.addTextWatermark()} > Add Text</button>\r\n                    <button onClick={() => this.removeDomElement()} >Remove Ele</button>\r\n\r\n                </span>\r\n                <hr />\r\n\r\n                <div className=\"watermark-playground\">\r\n\r\n                    <div className=\"editor-console\"\r\n                        id=\"cover\"\r\n                        style={editorConsole}\r\n                    >\r\n\r\n                        {/* <div className=\"draggable-logo\"\r\n                            id=\"watermarkLogo\"\r\n                            style={{ position: \"absolute\" }} >\r\n                            <img src={this.state.logoFile}\r\n                                id=\"watermarkLogoImg\"\r\n                                style={logoStyle}\r\n\r\n                                className=\"resizable-logo\"\r\n                            />\r\n                        </div> */}\r\n\r\n                        <ReactCrop\r\n                            src={this.state.file}\r\n                            crop={this.state.crop}\r\n                            ruleOfThirds\r\n                            onImageLoaded={this.onImageLoaded}\r\n                            onComplete={this.onCropComplete}\r\n                            onChange={this.onCropChange}\r\n                        />\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n                <br />\r\n                <br />\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WatermarkPosition;"]},"metadata":{},"sourceType":"module"}