{"ast":null,"code":"var _jsxFileName = \"C:\\\\audi_\\\\ESPL_projects\\\\facebook\\\\src\\\\components\\\\filter\\\\imageFilterSample.js\";\nimport React, { Component } from 'react';\n\nclass FilterSamples extends Component {\n  constructor(props) {\n    super(props);\n\n    this.filterSamples = () => {\n      let res = this.state.filterSamples;\n      res = res.map((ele, i) => {\n        return React.createElement(\"img\", {\n          src: ele.src,\n          alt: ele.filterName,\n          width: \"50px\",\n          height: \"50px\",\n          onClick: () => this.applyFilter(ele.filterName),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        });\n      });\n      return res;\n    };\n\n    this.applyFilter = filterName => {\n      this.props.filterEffect(\"filterCover\", filterName);\n    };\n\n    this.state = {\n      filterSamples: [{\n        src: \"testUrl\",\n        filterName: \"normal\"\n      }, {\n        src: \"testUrl\",\n        filterName: \"grayscale\"\n      }, {\n        src: \"testUrl\",\n        filterName: \"invert\"\n      }, {\n        src: \"testUrl\",\n        filterName: \"contrast\"\n      }, {\n        src: \"testUrl\",\n        filterName: \"blur\"\n      }, {\n        src: \"testUrl\",\n        filterName: \"brightness\"\n      }, {\n        src: \"testUrl\",\n        filterName: \"hue-rotate\"\n      }, {\n        src: \"testUrl\",\n        filterName: \"opacity\"\n      }, {\n        src: \"testUrl\",\n        filterName: \"saturate\"\n      }, {\n        src: \"testUrl\",\n        filterName: \"sepia\"\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"cover filter:  \", this.filterSamples());\n  }\n\n}\n\nexport default FilterSamples;","map":{"version":3,"sources":["C:/audi_/ESPL_projects/facebook/src/components/filter/imageFilterSample.js"],"names":["React","Component","FilterSamples","constructor","props","filterSamples","res","state","map","ele","i","src","filterName","applyFilter","filterEffect","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AAElCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA+CnBC,aA/CmB,GA+CH,MAAM;AAClB,UAAIC,GAAG,GAAG,KAAKC,KAAL,CAAWF,aAArB;AACAC,MAAAA,GAAG,GAAGA,GAAG,CAACE,GAAJ,CAAQ,CAACC,GAAD,EAAMC,CAAN,KAAY;AACtB,eAAO;AAAK,UAAA,GAAG,EAAED,GAAG,CAACE,GAAd;AACH,UAAA,GAAG,EAAEF,GAAG,CAACG,UADN;AAEH,UAAA,KAAK,EAAC,MAFH;AAEU,UAAA,MAAM,EAAC,MAFjB;AAGH,UAAA,OAAO,EAAE,MAAM,KAAKC,WAAL,CAAiBJ,GAAG,CAACG,UAArB,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH,OALK,CAAN;AAOA,aAAON,GAAP;AACH,KAzDkB;;AAAA,SA4DnBO,WA5DmB,GA4DJD,UAAD,IAAgB;AAC1B,WAAKR,KAAL,CAAWU,YAAX,CAAwB,aAAxB,EAAuCF,UAAvC;AACH,KA9DkB;;AAGf,SAAKL,KAAL,GAAa;AACTF,MAAAA,aAAa,EAAE,CAAC;AACZM,QAAAA,GAAG,EAAE,SADO;AAEZC,QAAAA,UAAU,EAAE;AAFA,OAAD,EAIf;AACID,QAAAA,GAAG,EAAE,SADT;AAEIC,QAAAA,UAAU,EAAE;AAFhB,OAJe,EAQf;AACID,QAAAA,GAAG,EAAE,SADT;AAEIC,QAAAA,UAAU,EAAE;AAFhB,OARe,EAYf;AACID,QAAAA,GAAG,EAAE,SADT;AAEIC,QAAAA,UAAU,EAAE;AAFhB,OAZe,EAgBf;AACID,QAAAA,GAAG,EAAE,SADT;AAEIC,QAAAA,UAAU,EAAE;AAFhB,OAhBe,EAoBf;AACID,QAAAA,GAAG,EAAE,SADT;AAEIC,QAAAA,UAAU,EAAE;AAFhB,OApBe,EAwBf;AACID,QAAAA,GAAG,EAAE,SADT;AAEIC,QAAAA,UAAU,EAAE;AAFhB,OAxBe,EA4Bf;AACID,QAAAA,GAAG,EAAE,SADT;AAEIC,QAAAA,UAAU,EAAE;AAFhB,OA5Be,EAgCf;AACID,QAAAA,GAAG,EAAE,SADT;AAEIC,QAAAA,UAAU,EAAE;AAFhB,OAhCe,EAoCf;AACID,QAAAA,GAAG,EAAE,SADT;AAEIC,QAAAA,UAAU,EAAE;AAFhB,OApCe;AADN,KAAb;AA0CH;;AAmBDG,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACkB,KAAKV,aAAL,EADlB,CADJ;AAKH;;AAxEiC;;AA2EtC,eAAeH,aAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass FilterSamples extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filterSamples: [{\r\n                src: \"testUrl\",\r\n                filterName: \"normal\"\r\n            },\r\n            {\r\n                src: \"testUrl\",\r\n                filterName: \"grayscale\"\r\n            },\r\n            {\r\n                src: \"testUrl\",\r\n                filterName: \"invert\"\r\n            },\r\n            {\r\n                src: \"testUrl\",\r\n                filterName: \"contrast\"\r\n            },\r\n            {\r\n                src: \"testUrl\",\r\n                filterName: \"blur\"\r\n            },\r\n            {\r\n                src: \"testUrl\",\r\n                filterName: \"brightness\"\r\n            },\r\n            {\r\n                src: \"testUrl\",\r\n                filterName: \"hue-rotate\"\r\n            },\r\n            {\r\n                src: \"testUrl\",\r\n                filterName: \"opacity\"\r\n            },\r\n            {\r\n                src: \"testUrl\",\r\n                filterName: \"saturate\"\r\n            },\r\n            {\r\n                src: \"testUrl\",\r\n                filterName: \"sepia\"\r\n            }]\r\n        }\r\n    }\r\n\r\n    filterSamples = () => {\r\n        let res = this.state.filterSamples;\r\n        res = res.map((ele, i) => {\r\n            return <img src={ele.src}\r\n                alt={ele.filterName}\r\n                width=\"50px\" height=\"50px\"\r\n                onClick={() => this.applyFilter(ele.filterName)} />\r\n        })\r\n\r\n        return res;\r\n    }\r\n\r\n\r\n    applyFilter = (filterName) => {\r\n        this.props.filterEffect(\"filterCover\", filterName);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n              cover filter:  {this.filterSamples()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilterSamples;"]},"metadata":{},"sourceType":"module"}