{"ast":null,"code":"var _jsxFileName = \"C:\\\\audi_\\\\ESPL_projects\\\\facebook\\\\src\\\\components\\\\watermarks\\\\editImg.js\";\nimport React, { Component } from 'react';\nimport demoImg from \"../../assets/ntr5.jpg\";\nimport waterMark from \"../../assets/logo3.jpg\";\n\nconst interact = require('interactjs');\n\nclass EditIMG extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addFont = () => {\n      console.log(this.state);\n      this.setState({\n        fontSize: this.state.fontSize + 1\n      });\n    };\n\n    this.removeFont = () => {\n      console.log(this.state);\n      this.setState({\n        fontSize: this.state.fontSize - 1\n      });\n    };\n\n    this.state = {\n      fontSize: 20\n    };\n  }\n\n  componentDidMount() {\n    // drag the element on page \n    const position = {\n      x: 0,\n      y: 0\n    };\n    interact('.draggable').draggable({\n      listeners: {\n        start(event) {// console.log(event.type, event.target)\n        },\n\n        move(event) {\n          position.x += event.dx;\n          position.y += event.dy;\n          event.target.style.transform = `translate(${position.x}px, ${position.y}px)`;\n          console.log(event.type, event.target);\n        }\n\n      }\n    }); // resize the element \n\n    interact(\".resizable\").resizable({\n      edges: {\n        left: false,\n        right: true,\n        bottom: true,\n        top: false\n      },\n      // modifiers: [\n      //   interact.modifiers.restrictEdges({\n      //     outer: \"parent\",\n      //     endOnly: true\n      //   })\n      // ],\n      inertia: true\n    }).on(\"resizemove\", function (event) {\n      var target = event.target;\n      console.log(target);\n      target.style.width = event.rect.width + \"px\";\n      target.style.height = event.rect.height + \"px\";\n    }); // text drag ing \n\n    interact('.draggable-text').draggable({\n      listeners: {\n        start(event) {// console.log(event.type, event.target)\n        },\n\n        move(event) {\n          position.x += event.dx;\n          position.y += event.dy;\n          console.log(event);\n          event.target.style.transform = `translate(${position.x}px, ${position.y}px)`; // console.log(event.type, event.target)\n        }\n\n      }\n    }); // resize the element \n    // interact(\".resizable-text\")\n    // .resizable({\n    //         edges: { left: false, right: true, bottom: true, top: false },\n    //         // modifiers: [\n    //         //   interact.modifiers.restrictEdges({\n    //         //     outer: \"parent\",\n    //         //     endOnly: true\n    //         //   })\n    //         // ],\n    //         inertia: true\n    //     })\n    //     .on(\"resizemove\", function(event) {\n    //         var target = event.target\n    //         console.log(event);\n    //         target.style.width = event.rect.width + \"px\"\n    //         target.style.height = event.rect.height + \"px\"\n    //     })\n  }\n\n  render() {\n    let textStyle = {\n      background: \"red\",\n      fontSize: this.state.fontSize\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.addFont(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Font+\"), \" \", React.createElement(\"button\", {\n      onClick: () => this.removeFont(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Font -\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"baseImg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: demoImg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"draggable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: waterMark,\n      width: \"150px\",\n      className: \"resizable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"draggable-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"resizable-text\",\n      style: textStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \" watermarkText_one \")));\n  }\n\n}\n\nexport default EditIMG;","map":{"version":3,"sources":["C:/audi_/ESPL_projects/facebook/src/components/watermarks/editImg.js"],"names":["React","Component","demoImg","waterMark","interact","require","EditIMG","constructor","props","addFont","console","log","state","setState","fontSize","removeFont","componentDidMount","position","x","y","draggable","listeners","start","event","move","dx","dy","target","style","transform","type","resizable","edges","left","right","bottom","top","inertia","on","width","rect","height","render","textStyle","background"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport demoImg from \"../../assets/ntr5.jpg\";\r\nimport waterMark from \"../../assets/logo3.jpg\";\r\n\r\n\r\nconst interact = require('interactjs')\r\n\r\n\r\n\r\nclass EditIMG extends Component {\r\n\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            fontSize : 20\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n\r\n        // drag the element on page \r\n        const position = { x: 0, y: 0 }\r\n        interact('.draggable').draggable({\r\n          listeners: {\r\n            start (event) {\r\n             // console.log(event.type, event.target)\r\n            },\r\n            move (event) {\r\n              position.x += event.dx\r\n              position.y += event.dy\r\n        \r\n              event.target.style.transform =\r\n                `translate(${position.x}px, ${position.y}px)`\r\n\r\n                console.log(event.type, event.target)\r\n            },\r\n            \r\n          }\r\n        })\r\n\r\n        // resize the element \r\n        interact(\".resizable\")\r\n        .resizable({\r\n                edges: { left: false, right: true, bottom: true, top: false },\r\n                // modifiers: [\r\n                //   interact.modifiers.restrictEdges({\r\n                //     outer: \"parent\",\r\n                //     endOnly: true\r\n                //   })\r\n                // ],\r\n                inertia: true\r\n            })\r\n            .on(\"resizemove\", function(event) {\r\n                var target = event.target\r\n                console.log(target);\r\n                target.style.width = event.rect.width + \"px\"\r\n                target.style.height = event.rect.height + \"px\"\r\n            })\r\n\r\n\r\n            // text drag ing \r\n\r\n       \r\n            interact('.draggable-text').draggable({\r\n              listeners: {\r\n                start (event) {\r\n                 // console.log(event.type, event.target)\r\n                },\r\n                move (event) {\r\n                  position.x += event.dx\r\n                  position.y += event.dy\r\n                  console.log(event)\r\n                  event.target.style.transform =\r\n                    `translate(${position.x}px, ${position.y}px)`\r\n    \r\n                    // console.log(event.type, event.target)\r\n                },\r\n                \r\n              }\r\n            })\r\n    \r\n            // resize the element \r\n            // interact(\".resizable-text\")\r\n            // .resizable({\r\n            //         edges: { left: false, right: true, bottom: true, top: false },\r\n            //         // modifiers: [\r\n            //         //   interact.modifiers.restrictEdges({\r\n            //         //     outer: \"parent\",\r\n            //         //     endOnly: true\r\n            //         //   })\r\n            //         // ],\r\n            //         inertia: true\r\n            //     })\r\n            //     .on(\"resizemove\", function(event) {\r\n            //         var target = event.target\r\n            //         console.log(event);\r\n            //         target.style.width = event.rect.width + \"px\"\r\n            //         target.style.height = event.rect.height + \"px\"\r\n            //     })\r\n    \r\n\r\n    }\r\n\r\n\r\n\r\n    addFont = () => {\r\n        console.log(this.state)\r\n        this.setState({\r\n            fontSize : this.state.fontSize + 1 \r\n        })\r\n    }\r\n\r\n    removeFont = () => {\r\n        console.log(this.state)\r\n        this.setState({\r\n            fontSize : this.state.fontSize - 1 \r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        let textStyle={\r\n            background : \"red\",\r\n            fontSize : this.state.fontSize\r\n        }\r\n\r\n        return (\r\n            <div>\r\n      \r\n            <button onClick={() => this.addFont()}>Font+</button> <button onClick={() => this.removeFont()}>Font -</button>\r\n             <hr />\r\n\r\n\r\n                            <div className=\"baseImg\">\r\n                            <img src={demoImg}  />\r\n                            </div>\r\n\r\n                            <div  className=\"draggable\"> \r\n                                <img src={waterMark}  width=\"150px\" className=\"resizable\" />\r\n                            </div>\r\n\r\n                \r\n                            <div  className=\"draggable-text\"> \r\n                                <span  className=\"resizable-text\" style={textStyle} > watermarkText_one </span>\r\n                            </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditIMG;"]},"metadata":{},"sourceType":"module"}