{"ast":null,"code":"// import React, { Component } from 'react';\n// import demoImg from \"../../assets/ntr5.jpg\";\n// import waterMark from \"../../assets/logo3.jpg\";\n// import resizeImg from \"../../assets/resize_img.jpg\";\n// import resizeLogo from \"../../assets/resize_logo.jpg\";\n// import \"./index.css\";\n// const interact = require('interactjs')\n// class WatermarkPosition extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             fontSize: 20,\n//             rotate: 20,\n//             opacity: 9,\n//             logoOpacity : 9,\n//             logoSize: 80,\n//             watermarkText: \"Â© dymmyImg\",\n//             BackgroundImgUrl : \"\",\n//             file : \"\"\n//         }\n//     }\n//     componentDidMount() {\n//         // drag the element on page \n//         const position = { x: 0, y: 0 }\n//         interact('.draggable-logo').draggable({\n//             listeners: {\n//                 start(event) {\n//                     // console.log(event.type, event.target)\n//                 },\n//                 move(event) {\n//                     position.x += event.dx\n//                     position.y += event.dy\n//                     event.target.style.transform =\n//                         `translate(${position.x}px, ${position.y}px)`\n//                     console.log(event.type, event.target)\n//                 },\n//             }\n//         })\n//         // resize the element \n//         interact(\".resizable-logo\")\n//             .resizable({\n//                 edges: { left: false, right: true, bottom: true, top: false },\n//                 // modifiers: [\n//                 //   interact.modifiers.restrictEdges({\n//                 //     outer: \"parent\",\n//                 //     endOnly: true\n//                 //   })\n//                 // ],\n//                 inertia: true,\n//                 modifiers: [\n//                     // keep the edges inside the parent\n//                     // interact.modifiers.restrictEdges({\n//                     //   outer: 'parent'\n//                     // }),\n//                     // minimum size\n//                     interact.modifiers.restrictSize({\n//                         min: { width: 100, height: 50 }\n//                     })\n//                 ],\n//             })\n//             .on(\"resizemove\", function (event) {\n//                 var target = event.target\n//                 console.log(target);\n//                 target.style.width = event.rect.width + \"px\"\n//                 target.style.height = event.rect.height + \"px\"\n//             })\n//         // text drag(move)\n//         interact('.draggable-text').draggable({\n//             listeners: {\n//                 start(event) {\n//                     // console.log(event.type, event.target)\n//                 },\n//                 move(event) {\n//                     position.x += event.dx\n//                     position.y += event.dy\n//                     console.log(event)\n//                     event.target.style.transform =\n//                         `translate(${position.x}px, ${position.y}px)`\n//                     // console.log(event.type, event.target)\n//                 },\n//             }\n//         })\n//         // resize the element \n//         // interact(\".resizable-text\")\n//         // .resizable({\n//         //         edges: { left: false, right: true, bottom: true, top: false },\n//         //         // modifiers: [\n//         //         //   interact.modifiers.restrictEdges({\n//         //         //     outer: \"parent\",\n//         //         //     endOnly: true\n//         //         //   })\n//         //         // ],\n//         //         inertia: true\n//         //     })\n//         //     .on(\"resizemove\", function(event) {\n//         //         var target = event.target\n//         //         console.log(event);\n//         //         target.style.width = event.rect.width + \"px\"\n//         //         target.style.height = event.rect.height + \"px\"\n//         //     })\n//     }\n//     handleChange = (event) => {\n//         console.log(event.target.files[0]);\n//         this.setState({\n//           file: URL.createObjectURL(event.target.files[0])\n//         })\n//       }\n//     addFont = () => {\n//         this.setState({\n//             fontSize: this.state.fontSize + 1\n//         })\n//     }\n//     removeFont = () => {\n//         this.setState({\n//             fontSize: this.state.fontSize - 1\n//         })\n//     }\n//     reduceOpacity = () => {\n//         this.setState({\n//             opacity: this.state.opacity - 1\n//         })\n//     }\n//     increaseOpacity = () => {\n//         this.setState({\n//             opacity: this.state.opacity + 1\n//         })\n//     }\n//     reduceLogoOpacity = () => {\n//         this.setState({\n//             logoOpacity: this.state.logoOpacity - 1\n//         })\n//     }\n//     increaseLogoOpacity = () => {\n//         this.setState({\n//             logoOpacity: this.state.logoOpacity + 1\n//         })\n//     }\n//     increaseLogo = () => {\n//         this.setState({\n//             logoSize: this.state.logoSize + 5\n//         })\n//     }\n//     reduceLogo = () => {\n//         this.setState({\n//             logoSize: this.state.logoSize - 5\n//         })\n//     }\n//     handleFileInput = () => {\n//     }\n//     saveImg = () => {\n//         let waterMarkText = document.getElementById('watermarkText');\n//         console.log(waterMarkText.style.transform);\n//         let watermarkLogo = document.getElementById('watermarkLogo');\n//         console.log(`logo movement : ${watermarkLogo.style.transform}`);  // er -40\n//         let movement = watermarkLogo.style.transform.split(\",\");\n//         let positiveX = !movement[0].includes(\"-\"); \n//         let positiveY = !movement[1].includes(\"-\");\n//         let xMove = parseInt(movement[0].replace(/\\D/g, \"\"),10);\n//         xMove = positiveX ? xMove * 1 : xMove * -1;\n//         let yMove = parseInt( movement[1].replace(/\\D/g, \"\"), 10);\n//         yMove = positiveY ? yMove * 1 : yMove * -1;\n//         yMove = yMove + 23;\n//         console.log(`logo movement : xMove = ${xMove}, yMove=${yMove}`);  // er -40\n//         let watermarkLogoImg = document.getElementById('watermarkLogoImg');\n//         let logoH = parseFloat(watermarkLogoImg.style.height);\n//         let logoW = parseFloat(watermarkLogoImg.style.width);\n//         console.log(` Logo width  : ${logoW} - Logo height : ${logoH} - logo opacity : ${this.state.logoOpacity}` );  // er -40\n//         let originalImgWidth = 1000;\n//         let originalImgHight = 667;\n//         let userImg = originalImgWidth > originalImgHight ? \"W\" : \"H\";\n//         let aspectRation =    userImg == \"W\" ?   originalImgWidth/1000 :  originalImgHight/600; \n//         let nLogoWidth = originalImgWidth * logoW/800 ;\n//         let nLogoHeight = originalImgHight * logoH /533.6 ;\n//         let nLogoOriginX = xMove * originalImgWidth /800 ;\n//         let nLogoOriginY = yMove * originalImgHight /533.6 ;\n//         console.log(aspectRation);\n//         console.log(userImg);\n//         console.log(`final logo movement : xMove = ${xMove * aspectRation}, yMove=${yMove * aspectRation}`); \n//         console.log(`final Logo width : ${logoW * aspectRation} - final Logo height : ${logoH  * aspectRation} - logo opacity : ${this.state.logoOpacity}` ); \n//          let url = `ffmpeg -i ntr5.jpg -i logo3.jpg -filter_complex \"[1]scale=${nLogoWidth}:${nLogoHeight}[a];[a]lut=a=val*0.9[b];[0][b] overlay=${nLogoOriginX}:${nLogoOriginY}\" -y watermarkLogo.jpg`\n//       // scale => width and h of logo \n//       // overlay => x y start position \n//         console.log(url);\n//     }\n//     checkImg = () =>{\n//         var myImg = document.querySelector(\"#sky\");\n//         var currWidth = myImg.clientWidth;\n//         var currHeight = myImg.clientHeight;\n//         var wmLogoImg = document.querySelector(\"#watermarkLogoImg\");\n//         var wmLogoImgcurrWidth = wmLogoImg.clientWidth;\n//         var wmLogoImgcurrHeight = wmLogoImg.clientHeight;\n//         // alert(\"Current width=\" + currWidth + \", \" + \"Original height=\" + currHeight );\n//         //  alert( \"Current Lwidth=\" + wmLogoImgcurrWidth + \", \" + \"Original L height=\" + currHeight);\n//     }\n//     getLogos = ()=>{\n//         let textStyle = {\n//             background: \"red\",\n//             fontSize: this.state.fontSize,\n//             opacity: `0.${this.state.opacity}`,\n//             fontFamily: \"Courier New\"\n//         }\n//         let logoStyle = {\n//             width: this.state.logoSize,\n//             opacity: `0.${this.state.logoOpacity}`,\n//         }\n//         return <div>\n//                        <div className=\"draggable-text\" id=\"watermarkText\" style={textStyle} >\n//                             {this.state.watermarkText}\n//                         </div>\n//                         <div className=\"draggable-logo\" id=\"watermarkLogo\" >\n//                             <img src={waterMark}\n//                                 id=\"watermarkLogoImg\"\n//                                 style={logoStyle}\n//                                 className=\"resizable-logo\"\n//                             />\n//                         </div>\n//                        </div>\n//     }\n//     render() {\n//         let logoStyle = {\n//             width: this.state.logoSize,\n//             opacity: `0.${this.state.logoOpacity}`,\n//         }\n//         let editorConsole = {\n//             backgroundImage: `url(${this.state.file})`,\n//             maxWidth:\"100%\",\n// \t\t\tdisplay: \"block\",\n// \t\t\tmargin: \"auto\",\n// \t\t\twidth: \"auto\",\n//         }\n//         return (\n//             <div>\n//                 <div>\n//                     <h4>User inputs </h4>\n//                     <input type=\"file\" onChange={this.handleChange}/>\n// {/* \n//                      <img src={this.state.file}/> */}\n//                 </div>\n//                 <span>\n//                     <button onClick={() => this.addFont()}>Font+</button>\n//                     <button onClick={() => this.removeFont()}>Font -</button>\n//                     <button onClick={() => this.reduceOpacity()}>Opacity -- </button>\n//                     <button onClick={() => this.increaseOpacity()}>Opacity ++</button>\n//                     <button onClick={() => this.increaseLogo()}>WaterMark logo ++</button>\n//                     <button onClick={() => this.reduceLogo()}>WaterMark logo -- </button>\n//                     <button onClick={() => this.saveImg()}> Save Img</button>\n//                     <button onClick={() => this.checkImg()}> check Img</button>\n//                     <button onClick={() => this.reduceLogoOpacity()}> logo Opacity -- </button>\n//                     <button onClick={() => this.increaseLogoOpacity()}> logo Opacity ++</button>\n//                 </span>\n//                 <hr />\n//                 <div className=\"watermark-playground\">\n//                     <div className=\"editor-console\">\n//                         <div>\n//                            <img src={this.state.file}  id=\"sky\" width=\"80%\" />\n//                            {this.getLogos()}\n//                         </div>\n//                         </div>\n//                 </div>\n//                 <br /><br /><br />\n//                 <hr />\n//                </div> \n//                 );\n//             }\n//         }\n// export default WatermarkPosition;","map":{"version":3,"sources":["C:/audi_/ESPL_projects/facebook/src/components/watermarks/watermarkPositions.js"],"names":[],"mappingssourcesContent":["// import React, { Component } from 'react';\r\n// import demoImg from \"../../assets/ntr5.jpg\";\r\n// import waterMark from \"../../assets/logo3.jpg\";\r\n\r\n// import resizeImg from \"../../assets/resize_img.jpg\";\r\n// import resizeLogo from \"../../assets/resize_logo.jpg\";\r\n\r\n\r\n\r\n// import \"./index.css\";\r\n// const interact = require('interactjs')\r\n\r\n\r\n\r\n// class WatermarkPosition extends Component {\r\n\r\n\r\n//     constructor(props) {\r\n//         super(props);\r\n\r\n//         this.state = {\r\n//             fontSize: 20,\r\n//             rotate: 20,\r\n//             opacity: 9,\r\n//             logoOpacity : 9,\r\n//             logoSize: 80,\r\n//             watermarkText: \"Â© dymmyImg\",\r\n//             BackgroundImgUrl : \"\",\r\n//             file : \"\"\r\n//         }\r\n//     }\r\n\r\n//     componentDidMount() {\r\n\r\n\r\n//         // drag the element on page \r\n//         const position = { x: 0, y: 0 }\r\n//         interact('.draggable-logo').draggable({\r\n//             listeners: {\r\n//                 start(event) {\r\n//                     // console.log(event.type, event.target)\r\n//                 },\r\n//                 move(event) {\r\n//                     position.x += event.dx\r\n//                     position.y += event.dy\r\n\r\n//                     event.target.style.transform =\r\n//                         `translate(${position.x}px, ${position.y}px)`\r\n\r\n//                     console.log(event.type, event.target)\r\n//                 },\r\n\r\n//             }\r\n//         })\r\n\r\n//         // resize the element \r\n//         interact(\".resizable-logo\")\r\n//             .resizable({\r\n//                 edges: { left: false, right: true, bottom: true, top: false },\r\n//                 // modifiers: [\r\n//                 //   interact.modifiers.restrictEdges({\r\n//                 //     outer: \"parent\",\r\n//                 //     endOnly: true\r\n//                 //   })\r\n//                 // ],\r\n//                 inertia: true,\r\n//                 modifiers: [\r\n//                     // keep the edges inside the parent\r\n//                     // interact.modifiers.restrictEdges({\r\n//                     //   outer: 'parent'\r\n//                     // }),\r\n\r\n//                     // minimum size\r\n//                     interact.modifiers.restrictSize({\r\n//                         min: { width: 100, height: 50 }\r\n//                     })\r\n//                 ],\r\n//             })\r\n//             .on(\"resizemove\", function (event) {\r\n//                 var target = event.target\r\n//                 console.log(target);\r\n//                 target.style.width = event.rect.width + \"px\"\r\n//                 target.style.height = event.rect.height + \"px\"\r\n//             })\r\n\r\n\r\n//         // text drag(move)\r\n//         interact('.draggable-text').draggable({\r\n//             listeners: {\r\n//                 start(event) {\r\n//                     // console.log(event.type, event.target)\r\n//                 },\r\n//                 move(event) {\r\n//                     position.x += event.dx\r\n//                     position.y += event.dy\r\n//                     console.log(event)\r\n//                     event.target.style.transform =\r\n//                         `translate(${position.x}px, ${position.y}px)`\r\n\r\n//                     // console.log(event.type, event.target)\r\n//                 },\r\n\r\n//             }\r\n//         })\r\n\r\n//         // resize the element \r\n//         // interact(\".resizable-text\")\r\n//         // .resizable({\r\n//         //         edges: { left: false, right: true, bottom: true, top: false },\r\n//         //         // modifiers: [\r\n//         //         //   interact.modifiers.restrictEdges({\r\n//         //         //     outer: \"parent\",\r\n//         //         //     endOnly: true\r\n//         //         //   })\r\n//         //         // ],\r\n//         //         inertia: true\r\n//         //     })\r\n//         //     .on(\"resizemove\", function(event) {\r\n//         //         var target = event.target\r\n//         //         console.log(event);\r\n//         //         target.style.width = event.rect.width + \"px\"\r\n//         //         target.style.height = event.rect.height + \"px\"\r\n//         //     })\r\n\r\n\r\n//     }\r\n\r\n\r\n//     handleChange = (event) => {\r\n\r\n//         console.log(event.target.files[0]);\r\n\r\n//         this.setState({\r\n//           file: URL.createObjectURL(event.target.files[0])\r\n//         })\r\n//       }\r\n\r\n\r\n\r\n//     addFont = () => {\r\n\r\n//         this.setState({\r\n//             fontSize: this.state.fontSize + 1\r\n//         })\r\n//     }\r\n\r\n//     removeFont = () => {\r\n\r\n//         this.setState({\r\n//             fontSize: this.state.fontSize - 1\r\n//         })\r\n//     }\r\n\r\n//     reduceOpacity = () => {\r\n\r\n//         this.setState({\r\n//             opacity: this.state.opacity - 1\r\n//         })\r\n//     }\r\n\r\n//     increaseOpacity = () => {\r\n\r\n//         this.setState({\r\n//             opacity: this.state.opacity + 1\r\n//         })\r\n//     }\r\n\r\n//     reduceLogoOpacity = () => {\r\n\r\n//         this.setState({\r\n//             logoOpacity: this.state.logoOpacity - 1\r\n//         })\r\n//     }\r\n\r\n//     increaseLogoOpacity = () => {\r\n\r\n//         this.setState({\r\n//             logoOpacity: this.state.logoOpacity + 1\r\n//         })\r\n//     }\r\n\r\n\r\n//     increaseLogo = () => {\r\n\r\n//         this.setState({\r\n//             logoSize: this.state.logoSize + 5\r\n//         })\r\n//     }\r\n\r\n//     reduceLogo = () => {\r\n\r\n//         this.setState({\r\n//             logoSize: this.state.logoSize - 5\r\n//         })\r\n//     }\r\n\r\n\r\n//     handleFileInput = () => {\r\n  \r\n//     }\r\n\r\n//     saveImg = () => {\r\n\r\n//         let waterMarkText = document.getElementById('watermarkText');\r\n//         console.log(waterMarkText.style.transform);\r\n\r\n//         let watermarkLogo = document.getElementById('watermarkLogo');\r\n    \r\n//         console.log(`logo movement : ${watermarkLogo.style.transform}`);  // er -40\r\n\r\n//         let movement = watermarkLogo.style.transform.split(\",\");\r\n       \r\n//         let positiveX = !movement[0].includes(\"-\"); \r\n//         let positiveY = !movement[1].includes(\"-\");\r\n//         let xMove = parseInt(movement[0].replace(/\\D/g, \"\"),10);\r\n//         xMove = positiveX ? xMove * 1 : xMove * -1;\r\n//         let yMove = parseInt( movement[1].replace(/\\D/g, \"\"), 10);\r\n//         yMove = positiveY ? yMove * 1 : yMove * -1;\r\n//         yMove = yMove + 23;\r\n//         console.log(`logo movement : xMove = ${xMove}, yMove=${yMove}`);  // er -40\r\n\r\n//         let watermarkLogoImg = document.getElementById('watermarkLogoImg');\r\n//         let logoH = parseFloat(watermarkLogoImg.style.height);\r\n//         let logoW = parseFloat(watermarkLogoImg.style.width);\r\n      \r\n//         console.log(` Logo width  : ${logoW} - Logo height : ${logoH} - logo opacity : ${this.state.logoOpacity}` );  // er -40\r\n       \r\n       \r\n//         let originalImgWidth = 1000;\r\n//         let originalImgHight = 667;\r\n\r\n//         let userImg = originalImgWidth > originalImgHight ? \"W\" : \"H\";\r\n//         let aspectRation =    userImg == \"W\" ?   originalImgWidth/1000 :  originalImgHight/600; \r\n\r\n\r\n//         let nLogoWidth = originalImgWidth * logoW/800 ;\r\n//         let nLogoHeight = originalImgHight * logoH /533.6 ;\r\n\r\n//         let nLogoOriginX = xMove * originalImgWidth /800 ;\r\n//         let nLogoOriginY = yMove * originalImgHight /533.6 ;\r\n\r\n\r\n//         console.log(aspectRation);\r\n//         console.log(userImg);\r\n\r\n//         console.log(`final logo movement : xMove = ${xMove * aspectRation}, yMove=${yMove * aspectRation}`); \r\n//         console.log(`final Logo width : ${logoW * aspectRation} - final Logo height : ${logoH  * aspectRation} - logo opacity : ${this.state.logoOpacity}` ); \r\n                                                              \r\n//          let url = `ffmpeg -i ntr5.jpg -i logo3.jpg -filter_complex \"[1]scale=${nLogoWidth}:${nLogoHeight}[a];[a]lut=a=val*0.9[b];[0][b] overlay=${nLogoOriginX}:${nLogoOriginY}\" -y watermarkLogo.jpg`\r\n//       // scale => width and h of logo \r\n//       // overlay => x y start position \r\n//         console.log(url);\r\n//     }\r\n\r\n\r\n//     checkImg = () =>{\r\n//         var myImg = document.querySelector(\"#sky\");\r\n//         var currWidth = myImg.clientWidth;\r\n//         var currHeight = myImg.clientHeight;\r\n\r\n//         var wmLogoImg = document.querySelector(\"#watermarkLogoImg\");\r\n//         var wmLogoImgcurrWidth = wmLogoImg.clientWidth;\r\n//         var wmLogoImgcurrHeight = wmLogoImg.clientHeight;\r\n        \r\n//         // alert(\"Current width=\" + currWidth + \", \" + \"Original height=\" + currHeight );\r\n//         //  alert( \"Current Lwidth=\" + wmLogoImgcurrWidth + \", \" + \"Original L height=\" + currHeight);\r\n//     }\r\n\r\n//     getLogos = ()=>{\r\n\r\n//         let textStyle = {\r\n//             background: \"red\",\r\n//             fontSize: this.state.fontSize,\r\n//             opacity: `0.${this.state.opacity}`,\r\n//             fontFamily: \"Courier New\"\r\n//         }\r\n\r\n\r\n//         let logoStyle = {\r\n//             width: this.state.logoSize,\r\n//             opacity: `0.${this.state.logoOpacity}`,\r\n//         }\r\n\r\n\r\n//         return <div>\r\n\r\n//                        <div className=\"draggable-text\" id=\"watermarkText\" style={textStyle} >\r\n//                             {this.state.watermarkText}\r\n//                         </div>\r\n\r\n//                         <div className=\"draggable-logo\" id=\"watermarkLogo\" >\r\n//                             <img src={waterMark}\r\n//                                 id=\"watermarkLogoImg\"\r\n//                                 style={logoStyle}\r\n\r\n//                                 className=\"resizable-logo\"\r\n//                             />\r\n//                         </div>\r\n\r\n                        \r\n                       \r\n//                        </div>\r\n//     }\r\n\r\n\r\n//     render() {\r\n\r\n      \r\n//         let logoStyle = {\r\n//             width: this.state.logoSize,\r\n//             opacity: `0.${this.state.logoOpacity}`,\r\n//         }\r\n\r\n//         let editorConsole = {\r\n\r\n//             backgroundImage: `url(${this.state.file})`,\r\n//             maxWidth:\"100%\",\r\n// \t\t\tdisplay: \"block\",\r\n// \t\t\tmargin: \"auto\",\r\n// \t\t\twidth: \"auto\",\r\n\r\n//         }\r\n\r\n//         return (\r\n//             <div>\r\n\r\n//                 <div>\r\n//                     <h4>User inputs </h4>\r\n//                     <input type=\"file\" onChange={this.handleChange}/>\r\n\r\n// {/* \r\n//                      <img src={this.state.file}/> */}\r\n//                 </div>\r\n\r\n//                 <span>\r\n//                     <button onClick={() => this.addFont()}>Font+</button>\r\n//                     <button onClick={() => this.removeFont()}>Font -</button>\r\n//                     <button onClick={() => this.reduceOpacity()}>Opacity -- </button>\r\n//                     <button onClick={() => this.increaseOpacity()}>Opacity ++</button>\r\n//                     <button onClick={() => this.increaseLogo()}>WaterMark logo ++</button>\r\n//                     <button onClick={() => this.reduceLogo()}>WaterMark logo -- </button>\r\n//                     <button onClick={() => this.saveImg()}> Save Img</button>\r\n//                     <button onClick={() => this.checkImg()}> check Img</button>\r\n//                     <button onClick={() => this.reduceLogoOpacity()}> logo Opacity -- </button>\r\n//                     <button onClick={() => this.increaseLogoOpacity()}> logo Opacity ++</button>\r\n                    \r\n//                 </span>\r\n//                 <hr />\r\n\r\n\r\n//                 <div className=\"watermark-playground\">\r\n\r\n//                     <div className=\"editor-console\">\r\n\r\n             \r\n\r\n                        \r\n\r\n//                         <div>\r\n//                            <img src={this.state.file}  id=\"sky\" width=\"80%\" />\r\n//                            {this.getLogos()}\r\n//                         </div>\r\n\r\n                         \r\n\r\n//                         </div>\r\n\r\n//                 </div>\r\n\r\n//                 <br /><br /><br />\r\n\r\n//                 <hr />\r\n\r\n//                </div> \r\n//                 );\r\n//             }\r\n//         }\r\n        \r\n// export default WatermarkPosition;"]},"metadata":{},"sourceType":"module"}