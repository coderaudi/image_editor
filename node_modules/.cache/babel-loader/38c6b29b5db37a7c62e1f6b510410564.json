{"ast":null,"code":"var _jsxFileName = \"C:\\\\audi_\\\\ESPL_projects\\\\facebook\\\\src\\\\components\\\\watermarks\\\\resize-drag.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Interactable from \"../../helper/Interactable\";\nconst draggableOptions = {\n  onmove: event => {\n    const target = event.target; // keep the dragged position in the data-x/data-y attributes\n\n    const x = (parseFloat(target.getAttribute(\"data-x\")) || 0) + event.dx;\n    const y = (parseFloat(target.getAttribute(\"data-y\")) || 0) + event.dy; // translate the element\n\n    target.style.webkitTransform = target.style.transform = \"translate(\" + x + \"px, \" + y + \"px)\"; // update the posiion attributes\n\n    target.setAttribute(\"data-x\", x);\n    target.setAttribute(\"data-y\", y);\n  }\n};\n\nclass ResizeDrag extends React.Component {\n  constructor(props) {\n    super(props); // this.handleDrop = this.handleDrop.bind(this)\n\n    this.handleDrop = this.handleDrop.bind(this);\n    this.state = {\n      droppedItems: []\n    };\n  }\n\n  handleDrop(event) {\n    console.log(\"DROP\", event);\n  }\n\n  render() {\n    const that = this;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Hello CodeSandbox\"), React.createElement(Interactable, {\n      draggable: true,\n      draggableOptions: draggableOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"draggable drag-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Drag Item 1\"))), React.createElement(Interactable, {\n      draggable: true,\n      draggableOptions: draggableOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"draggable drag-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Drag Item 2\"))));\n  }\n\n}\n\nexport default ResizeDrag;","map":{"version":3,"sources":["C:/audi_/ESPL_projects/facebook/src/components/watermarks/resize-drag.js"],"names":["React","ReactDOM","Interactable","draggableOptions","onmove","event","target","x","parseFloat","getAttribute","dx","y","dy","style","webkitTransform","transform","setAttribute","ResizeDrag","Component","constructor","props","handleDrop","bind","state","droppedItems","console","log","render","that"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,YAAP,MAAyB,2BAAzB;AAIA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,MAAM,EAAEC,KAAK,IAAI;AACf,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB,CADe,CAEf;;AACA,UAAMC,CAAC,GAAG,CAACC,UAAU,CAACF,MAAM,CAACG,YAAP,CAAoB,QAApB,CAAD,CAAV,IAA6C,CAA9C,IAAmDJ,KAAK,CAACK,EAAnE;AACA,UAAMC,CAAC,GAAG,CAACH,UAAU,CAACF,MAAM,CAACG,YAAP,CAAoB,QAApB,CAAD,CAAV,IAA6C,CAA9C,IAAmDJ,KAAK,CAACO,EAAnE,CAJe,CAMf;;AACAN,IAAAA,MAAM,CAACO,KAAP,CAAaC,eAAb,GAA+BR,MAAM,CAACO,KAAP,CAAaE,SAAb,GAC7B,eAAeR,CAAf,GAAmB,MAAnB,GAA4BI,CAA5B,GAAgC,KADlC,CAPe,CAUf;;AACAL,IAAAA,MAAM,CAACU,YAAP,CAAoB,QAApB,EAA8BT,CAA9B;AACAD,IAAAA,MAAM,CAACU,YAAP,CAAoB,QAApB,EAA8BL,CAA9B;AACD;AAdsB,CAAzB;;AAiBA,MAAMM,UAAN,SAAyBjB,KAAK,CAACkB,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAGjB;;AAEA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE;AADH,KAAb;AAGD;;AAEDH,EAAAA,UAAU,CAAChB,KAAD,EAAQ;AAChBoB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBrB,KAApB;AACD;;AAEDsB,EAAAA,MAAM,GAAG;AACP,UAAMC,IAAI,GAAG,IAAb;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAGE,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAE,IAAzB;AACK,MAAA,gBAAgB,EAAEzB,gBADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CAFF,CAHF,EAUE,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAE,IAAzB;AACA,MAAA,gBAAgB,EAAEA,gBADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CAFF,CAVF,CADF;AAuED;;AA1FsC;;AA8FzC,eAAec,UAAf","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport Interactable from \"../../helper/Interactable\";\r\n\r\n\r\n\r\nconst draggableOptions = {\r\n  onmove: event => {\r\n    const target = event.target;\r\n    // keep the dragged position in the data-x/data-y attributes\r\n    const x = (parseFloat(target.getAttribute(\"data-x\")) || 0) + event.dx;\r\n    const y = (parseFloat(target.getAttribute(\"data-y\")) || 0) + event.dy;\r\n\r\n    // translate the element\r\n    target.style.webkitTransform = target.style.transform =\r\n      \"translate(\" + x + \"px, \" + y + \"px)\";\r\n\r\n    // update the posiion attributes\r\n    target.setAttribute(\"data-x\", x);\r\n    target.setAttribute(\"data-y\", y);\r\n  }\r\n};\r\n\r\nclass ResizeDrag extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // this.handleDrop = this.handleDrop.bind(this)\r\n\r\n    this.handleDrop = this.handleDrop.bind(this);\r\n    this.state = {\r\n      droppedItems: []\r\n    };\r\n  }\r\n\r\n  handleDrop(event) {\r\n    console.log(\"DROP\", event);\r\n  }\r\n\r\n  render() {\r\n    const that = this;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Hello CodeSandbox</h1>\r\n\r\n        <Interactable draggable={true}\r\n             draggableOptions={draggableOptions}>\r\n          <div className=\"draggable drag-item\">\r\n            <p>Drag Item 1</p>\r\n          </div>\r\n        </Interactable>\r\n\r\n        <Interactable draggable={true} \r\n        draggableOptions={draggableOptions}>\r\n          <div className=\"draggable drag-item\">\r\n            <p>Drag Item 2</p>\r\n          </div>\r\n        </Interactable>\r\n{/* \r\n        <hr />\r\n\r\n        <Interactable\r\n          dropzone={true}\r\n          dropzoneOptions={{\r\n            // only accept elements matching this CSS selector\r\n            accept: \".drag-item\",\r\n            // Require a 75% element overlap for a drop to be possible\r\n            overlap: 0.75,\r\n\r\n            // listen for drop related events:\r\n\r\n            ondropactivate: function(event) {\r\n              // add active dropzone feedback\r\n              event.target.classList.add(\"drop-active\");\r\n            },\r\n\r\n            ondragenter: function(event) {\r\n              var draggableElement = event.relatedTarget,\r\n                dropzoneElement = event.target;\r\n\r\n              // feedback the possibility of a drop\r\n              dropzoneElement.classList.add(\"drop-target\");\r\n              draggableElement.classList.add(\"can-drop\");\r\n              draggableElement.textContent = \"Dragged in\";\r\n            },\r\n\r\n            ondragleave: function(event) {\r\n              // remove the drop feedback style\r\n              event.target.classList.remove(\"drop-target\");\r\n              event.relatedTarget.classList.remove(\"can-drop\");\r\n              event.relatedTarget.textContent = \"Dragged out\";\r\n            },\r\n\r\n            ondrop: function(event) {\r\n              that.handleDrop(event);\r\n              event.relatedTarget.textContent = \"Dropped\";\r\n            },\r\n\r\n            ondropdeactivate: function(event) {\r\n              // remove active dropzone feedback\r\n              event.target.classList.remove(\"drop-active\");\r\n              event.target.classList.remove(\"drop-target\");\r\n            }\r\n          }}\r\n        >\r\n          <div className=\"dropzone\" id=\"outer-dropzone\">\r\n            #outer-dropzone\r\n          </div>\r\n        </Interactable>\r\n      */} \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default ResizeDrag;"]},"metadata":{},"sourceType":"module"}